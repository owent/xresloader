// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: pb_header.proto
// Protobuf C++ Version: 6.30.2

#ifndef pb_5fheader_2eproto_2epb_2eh
#define pb_5fheader_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6030002
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_pb_5fheader_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_pb_5fheader_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_pb_5fheader_2eproto;
}  // extern "C"
namespace org {
namespace xresloader {
namespace pb {
class xresloader_data_source;
struct xresloader_data_sourceDefaultTypeInternal;
extern xresloader_data_sourceDefaultTypeInternal _xresloader_data_source_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull xresloader_data_source_class_data_;
class xresloader_datablocks;
struct xresloader_datablocksDefaultTypeInternal;
extern xresloader_datablocksDefaultTypeInternal _xresloader_datablocks_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull xresloader_datablocks_class_data_;
class xresloader_header;
struct xresloader_headerDefaultTypeInternal;
extern xresloader_headerDefaultTypeInternal _xresloader_header_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull xresloader_header_class_data_;
}  // namespace pb
}  // namespace xresloader
}  // namespace org
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace org {
namespace xresloader {
namespace pb {

// ===================================================================


// -------------------------------------------------------------------

class xresloader_data_source final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:org.xresloader.pb.xresloader_data_source) */ {
 public:
  inline xresloader_data_source() : xresloader_data_source(nullptr) {}
  ~xresloader_data_source() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(xresloader_data_source* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(xresloader_data_source));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR xresloader_data_source(::google::protobuf::internal::ConstantInitialized);

  inline xresloader_data_source(const xresloader_data_source& from) : xresloader_data_source(nullptr, from) {}
  inline xresloader_data_source(xresloader_data_source&& from) noexcept
      : xresloader_data_source(nullptr, std::move(from)) {}
  inline xresloader_data_source& operator=(const xresloader_data_source& from) {
    CopyFrom(from);
    return *this;
  }
  inline xresloader_data_source& operator=(xresloader_data_source&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const xresloader_data_source& default_instance() {
    return *reinterpret_cast<const xresloader_data_source*>(
        &_xresloader_data_source_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(xresloader_data_source& a, xresloader_data_source& b) { a.Swap(&b); }
  inline void Swap(xresloader_data_source* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(xresloader_data_source* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  xresloader_data_source* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<xresloader_data_source>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const xresloader_data_source& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const xresloader_data_source& from) { xresloader_data_source::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(xresloader_data_source* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "org.xresloader.pb.xresloader_data_source"; }

 protected:
  explicit xresloader_data_source(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  xresloader_data_source(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const xresloader_data_source& from);
  xresloader_data_source(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, xresloader_data_source&& from) noexcept
      : xresloader_data_source(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFileFieldNumber = 1,
    kSheetFieldNumber = 2,
    kCountFieldNumber = 3,
  };
  // optional string file = 1;
  bool has_file() const;
  void clear_file() ;
  const std::string& file() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_file(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_file();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_file();
  void set_allocated_file(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_file() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_file(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_file();

  public:
  // optional string sheet = 2;
  bool has_sheet() const;
  void clear_sheet() ;
  const std::string& sheet() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_sheet(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_sheet();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_sheet();
  void set_allocated_sheet(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_sheet() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_sheet(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_sheet();

  public:
  // optional int32 count = 3;
  bool has_count() const;
  void clear_count() ;
  ::int32_t count() const;
  void set_count(::int32_t value);

  private:
  ::int32_t _internal_count() const;
  void _internal_set_count(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:org.xresloader.pb.xresloader_data_source)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   0, 58,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const xresloader_data_source& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr file_;
    ::google::protobuf::internal::ArenaStringPtr sheet_;
    ::int32_t count_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_pb_5fheader_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull xresloader_data_source_class_data_;
// -------------------------------------------------------------------

class xresloader_header final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:org.xresloader.pb.xresloader_header) */ {
 public:
  inline xresloader_header() : xresloader_header(nullptr) {}
  ~xresloader_header() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(xresloader_header* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(xresloader_header));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR xresloader_header(::google::protobuf::internal::ConstantInitialized);

  inline xresloader_header(const xresloader_header& from) : xresloader_header(nullptr, from) {}
  inline xresloader_header(xresloader_header&& from) noexcept
      : xresloader_header(nullptr, std::move(from)) {}
  inline xresloader_header& operator=(const xresloader_header& from) {
    CopyFrom(from);
    return *this;
  }
  inline xresloader_header& operator=(xresloader_header&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const xresloader_header& default_instance() {
    return *reinterpret_cast<const xresloader_header*>(
        &_xresloader_header_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(xresloader_header& a, xresloader_header& b) { a.Swap(&b); }
  inline void Swap(xresloader_header* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(xresloader_header* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  xresloader_header* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<xresloader_header>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const xresloader_header& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const xresloader_header& from) { xresloader_header::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(xresloader_header* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "org.xresloader.pb.xresloader_header"; }

 protected:
  explicit xresloader_header(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  xresloader_header(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const xresloader_header& from);
  xresloader_header(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, xresloader_header&& from) noexcept
      : xresloader_header(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDataSourceFieldNumber = 11,
    kXresVerFieldNumber = 1,
    kDataVerFieldNumber = 2,
    kHashCodeFieldNumber = 4,
    kDescriptionFieldNumber = 5,
    kCountFieldNumber = 3,
  };
  // repeated .org.xresloader.pb.xresloader_data_source data_source = 11;
  int data_source_size() const;
  private:
  int _internal_data_source_size() const;

  public:
  void clear_data_source() ;
  ::org::xresloader::pb::xresloader_data_source* PROTOBUF_NONNULL mutable_data_source(int index);
  ::google::protobuf::RepeatedPtrField<::org::xresloader::pb::xresloader_data_source>* PROTOBUF_NONNULL mutable_data_source();

  private:
  const ::google::protobuf::RepeatedPtrField<::org::xresloader::pb::xresloader_data_source>& _internal_data_source() const;
  ::google::protobuf::RepeatedPtrField<::org::xresloader::pb::xresloader_data_source>* PROTOBUF_NONNULL _internal_mutable_data_source();
  public:
  const ::org::xresloader::pb::xresloader_data_source& data_source(int index) const;
  ::org::xresloader::pb::xresloader_data_source* PROTOBUF_NONNULL add_data_source();
  const ::google::protobuf::RepeatedPtrField<::org::xresloader::pb::xresloader_data_source>& data_source() const;
  // optional string xres_ver = 1;
  bool has_xres_ver() const;
  void clear_xres_ver() ;
  const std::string& xres_ver() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_xres_ver(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_xres_ver();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_xres_ver();
  void set_allocated_xres_ver(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_xres_ver() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_xres_ver(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_xres_ver();

  public:
  // optional string data_ver = 2;
  bool has_data_ver() const;
  void clear_data_ver() ;
  const std::string& data_ver() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data_ver(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_data_ver();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_data_ver();
  void set_allocated_data_ver(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_data_ver() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_data_ver(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_data_ver();

  public:
  // required string hash_code = 4;
  bool has_hash_code() const;
  void clear_hash_code() ;
  const std::string& hash_code() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_hash_code(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_hash_code();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_hash_code();
  void set_allocated_hash_code(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_hash_code() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_hash_code(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_hash_code();

  public:
  // optional string description = 5;
  bool has_description() const;
  void clear_description() ;
  const std::string& description() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_description(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_description();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_description();
  void set_allocated_description(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_description() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_description(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_description();

  public:
  // required uint32 count = 3;
  bool has_count() const;
  void clear_count() ;
  ::uint32_t count() const;
  void set_count(::uint32_t value);

  private:
  ::uint32_t _internal_count() const;
  void _internal_set_count(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:org.xresloader.pb.xresloader_header)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 6,
                                   1, 80,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const xresloader_header& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::org::xresloader::pb::xresloader_data_source > data_source_;
    ::google::protobuf::internal::ArenaStringPtr xres_ver_;
    ::google::protobuf::internal::ArenaStringPtr data_ver_;
    ::google::protobuf::internal::ArenaStringPtr hash_code_;
    ::google::protobuf::internal::ArenaStringPtr description_;
    ::uint32_t count_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_pb_5fheader_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull xresloader_header_class_data_;
// -------------------------------------------------------------------

class xresloader_datablocks final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:org.xresloader.pb.xresloader_datablocks) */ {
 public:
  inline xresloader_datablocks() : xresloader_datablocks(nullptr) {}
  ~xresloader_datablocks() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(xresloader_datablocks* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(xresloader_datablocks));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR xresloader_datablocks(::google::protobuf::internal::ConstantInitialized);

  inline xresloader_datablocks(const xresloader_datablocks& from) : xresloader_datablocks(nullptr, from) {}
  inline xresloader_datablocks(xresloader_datablocks&& from) noexcept
      : xresloader_datablocks(nullptr, std::move(from)) {}
  inline xresloader_datablocks& operator=(const xresloader_datablocks& from) {
    CopyFrom(from);
    return *this;
  }
  inline xresloader_datablocks& operator=(xresloader_datablocks&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const xresloader_datablocks& default_instance() {
    return *reinterpret_cast<const xresloader_datablocks*>(
        &_xresloader_datablocks_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(xresloader_datablocks& a, xresloader_datablocks& b) { a.Swap(&b); }
  inline void Swap(xresloader_datablocks* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(xresloader_datablocks* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  xresloader_datablocks* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<xresloader_datablocks>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const xresloader_datablocks& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const xresloader_datablocks& from) { xresloader_datablocks::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(xresloader_datablocks* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "org.xresloader.pb.xresloader_datablocks"; }

 protected:
  explicit xresloader_datablocks(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  xresloader_datablocks(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const xresloader_datablocks& from);
  xresloader_datablocks(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, xresloader_datablocks&& from) noexcept
      : xresloader_datablocks(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDataBlockFieldNumber = 2,
    kDataMessageTypeFieldNumber = 3,
    kHeaderFieldNumber = 1,
  };
  // repeated bytes data_block = 2;
  int data_block_size() const;
  private:
  int _internal_data_block_size() const;

  public:
  void clear_data_block() ;
  const std::string& data_block(int index) const;
  std::string* PROTOBUF_NONNULL mutable_data_block(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data_block(int index, Arg_&& value, Args_... args);
  std::string* PROTOBUF_NONNULL add_data_block();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_data_block(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& data_block() const;
  ::google::protobuf::RepeatedPtrField<std::string>* PROTOBUF_NONNULL mutable_data_block();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_data_block() const;
  ::google::protobuf::RepeatedPtrField<std::string>* PROTOBUF_NONNULL _internal_mutable_data_block();

  public:
  // optional string data_message_type = 3;
  bool has_data_message_type() const;
  void clear_data_message_type() ;
  const std::string& data_message_type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data_message_type(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_data_message_type();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_data_message_type();
  void set_allocated_data_message_type(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_data_message_type() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_data_message_type(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_data_message_type();

  public:
  // optional .org.xresloader.pb.xresloader_header header = 1;
  bool has_header() const;
  void clear_header() ;
  const ::org::xresloader::pb::xresloader_header& header() const;
  [[nodiscard]] ::org::xresloader::pb::xresloader_header* PROTOBUF_NULLABLE release_header();
  ::org::xresloader::pb::xresloader_header* PROTOBUF_NONNULL mutable_header();
  void set_allocated_header(::org::xresloader::pb::xresloader_header* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_header(::org::xresloader::pb::xresloader_header* PROTOBUF_NULLABLE value);
  ::org::xresloader::pb::xresloader_header* PROTOBUF_NULLABLE unsafe_arena_release_header();

  private:
  const ::org::xresloader::pb::xresloader_header& _internal_header() const;
  ::org::xresloader::pb::xresloader_header* PROTOBUF_NONNULL _internal_mutable_header();

  public:
  // @@protoc_insertion_point(class_scope:org.xresloader.pb.xresloader_datablocks)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   1, 65,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const xresloader_datablocks& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> data_block_;
    ::google::protobuf::internal::ArenaStringPtr data_message_type_;
    ::org::xresloader::pb::xresloader_header* PROTOBUF_NULLABLE header_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_pb_5fheader_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull xresloader_datablocks_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// xresloader_data_source

// optional string file = 1;
inline bool xresloader_data_source::has_file() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void xresloader_data_source::clear_file() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.file_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& xresloader_data_source::file() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:org.xresloader.pb.xresloader_data_source.file)
  return _internal_file();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void xresloader_data_source::set_file(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.file_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:org.xresloader.pb.xresloader_data_source.file)
}
inline std::string* PROTOBUF_NONNULL xresloader_data_source::mutable_file()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_file();
  // @@protoc_insertion_point(field_mutable:org.xresloader.pb.xresloader_data_source.file)
  return _s;
}
inline const std::string& xresloader_data_source::_internal_file() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.file_.Get();
}
inline void xresloader_data_source::_internal_set_file(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.file_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL xresloader_data_source::_internal_mutable_file() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.file_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE xresloader_data_source::release_file() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:org.xresloader.pb.xresloader_data_source.file)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.file_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.file_.Set("", GetArena());
  }
  return released;
}
inline void xresloader_data_source::set_allocated_file(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.file_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.file_.IsDefault()) {
    _impl_.file_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:org.xresloader.pb.xresloader_data_source.file)
}

// optional string sheet = 2;
inline bool xresloader_data_source::has_sheet() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void xresloader_data_source::clear_sheet() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sheet_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& xresloader_data_source::sheet() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:org.xresloader.pb.xresloader_data_source.sheet)
  return _internal_sheet();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void xresloader_data_source::set_sheet(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.sheet_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:org.xresloader.pb.xresloader_data_source.sheet)
}
inline std::string* PROTOBUF_NONNULL xresloader_data_source::mutable_sheet()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_sheet();
  // @@protoc_insertion_point(field_mutable:org.xresloader.pb.xresloader_data_source.sheet)
  return _s;
}
inline const std::string& xresloader_data_source::_internal_sheet() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sheet_.Get();
}
inline void xresloader_data_source::_internal_set_sheet(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.sheet_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL xresloader_data_source::_internal_mutable_sheet() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.sheet_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE xresloader_data_source::release_sheet() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:org.xresloader.pb.xresloader_data_source.sheet)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.sheet_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.sheet_.Set("", GetArena());
  }
  return released;
}
inline void xresloader_data_source::set_allocated_sheet(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.sheet_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.sheet_.IsDefault()) {
    _impl_.sheet_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:org.xresloader.pb.xresloader_data_source.sheet)
}

// optional int32 count = 3;
inline bool xresloader_data_source::has_count() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void xresloader_data_source::clear_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.count_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t xresloader_data_source::count() const {
  // @@protoc_insertion_point(field_get:org.xresloader.pb.xresloader_data_source.count)
  return _internal_count();
}
inline void xresloader_data_source::set_count(::int32_t value) {
  _internal_set_count(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:org.xresloader.pb.xresloader_data_source.count)
}
inline ::int32_t xresloader_data_source::_internal_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.count_;
}
inline void xresloader_data_source::_internal_set_count(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.count_ = value;
}

// -------------------------------------------------------------------

// xresloader_header

// optional string xres_ver = 1;
inline bool xresloader_header::has_xres_ver() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void xresloader_header::clear_xres_ver() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.xres_ver_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& xresloader_header::xres_ver() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:org.xresloader.pb.xresloader_header.xres_ver)
  return _internal_xres_ver();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void xresloader_header::set_xres_ver(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.xres_ver_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:org.xresloader.pb.xresloader_header.xres_ver)
}
inline std::string* PROTOBUF_NONNULL xresloader_header::mutable_xres_ver()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_xres_ver();
  // @@protoc_insertion_point(field_mutable:org.xresloader.pb.xresloader_header.xres_ver)
  return _s;
}
inline const std::string& xresloader_header::_internal_xres_ver() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.xres_ver_.Get();
}
inline void xresloader_header::_internal_set_xres_ver(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.xres_ver_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL xresloader_header::_internal_mutable_xres_ver() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.xres_ver_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE xresloader_header::release_xres_ver() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:org.xresloader.pb.xresloader_header.xres_ver)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.xres_ver_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.xres_ver_.Set("", GetArena());
  }
  return released;
}
inline void xresloader_header::set_allocated_xres_ver(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.xres_ver_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.xres_ver_.IsDefault()) {
    _impl_.xres_ver_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:org.xresloader.pb.xresloader_header.xres_ver)
}

// optional string data_ver = 2;
inline bool xresloader_header::has_data_ver() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void xresloader_header::clear_data_ver() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_ver_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& xresloader_header::data_ver() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:org.xresloader.pb.xresloader_header.data_ver)
  return _internal_data_ver();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void xresloader_header::set_data_ver(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.data_ver_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:org.xresloader.pb.xresloader_header.data_ver)
}
inline std::string* PROTOBUF_NONNULL xresloader_header::mutable_data_ver()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data_ver();
  // @@protoc_insertion_point(field_mutable:org.xresloader.pb.xresloader_header.data_ver)
  return _s;
}
inline const std::string& xresloader_header::_internal_data_ver() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_ver_.Get();
}
inline void xresloader_header::_internal_set_data_ver(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.data_ver_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL xresloader_header::_internal_mutable_data_ver() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.data_ver_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE xresloader_header::release_data_ver() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:org.xresloader.pb.xresloader_header.data_ver)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.data_ver_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.data_ver_.Set("", GetArena());
  }
  return released;
}
inline void xresloader_header::set_allocated_data_ver(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.data_ver_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.data_ver_.IsDefault()) {
    _impl_.data_ver_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:org.xresloader.pb.xresloader_header.data_ver)
}

// required uint32 count = 3;
inline bool xresloader_header::has_count() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void xresloader_header::clear_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.count_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::uint32_t xresloader_header::count() const {
  // @@protoc_insertion_point(field_get:org.xresloader.pb.xresloader_header.count)
  return _internal_count();
}
inline void xresloader_header::set_count(::uint32_t value) {
  _internal_set_count(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:org.xresloader.pb.xresloader_header.count)
}
inline ::uint32_t xresloader_header::_internal_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.count_;
}
inline void xresloader_header::_internal_set_count(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.count_ = value;
}

// required string hash_code = 4;
inline bool xresloader_header::has_hash_code() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void xresloader_header::clear_hash_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hash_code_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const std::string& xresloader_header::hash_code() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:org.xresloader.pb.xresloader_header.hash_code)
  return _internal_hash_code();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void xresloader_header::set_hash_code(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.hash_code_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:org.xresloader.pb.xresloader_header.hash_code)
}
inline std::string* PROTOBUF_NONNULL xresloader_header::mutable_hash_code()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_hash_code();
  // @@protoc_insertion_point(field_mutable:org.xresloader.pb.xresloader_header.hash_code)
  return _s;
}
inline const std::string& xresloader_header::_internal_hash_code() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.hash_code_.Get();
}
inline void xresloader_header::_internal_set_hash_code(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.hash_code_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL xresloader_header::_internal_mutable_hash_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.hash_code_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE xresloader_header::release_hash_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:org.xresloader.pb.xresloader_header.hash_code)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.hash_code_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.hash_code_.Set("", GetArena());
  }
  return released;
}
inline void xresloader_header::set_allocated_hash_code(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.hash_code_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.hash_code_.IsDefault()) {
    _impl_.hash_code_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:org.xresloader.pb.xresloader_header.hash_code)
}

// optional string description = 5;
inline bool xresloader_header::has_description() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void xresloader_header::clear_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const std::string& xresloader_header::description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:org.xresloader.pb.xresloader_header.description)
  return _internal_description();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void xresloader_header::set_description(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:org.xresloader.pb.xresloader_header.description)
}
inline std::string* PROTOBUF_NONNULL xresloader_header::mutable_description()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:org.xresloader.pb.xresloader_header.description)
  return _s;
}
inline const std::string& xresloader_header::_internal_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.description_.Get();
}
inline void xresloader_header::_internal_set_description(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.description_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL xresloader_header::_internal_mutable_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  return _impl_.description_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE xresloader_header::release_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:org.xresloader.pb.xresloader_header.description)
  if ((_impl_._has_bits_[0] & 0x00000008u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000008u;
  auto* released = _impl_.description_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.description_.Set("", GetArena());
  }
  return released;
}
inline void xresloader_header::set_allocated_description(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  _impl_.description_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.description_.IsDefault()) {
    _impl_.description_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:org.xresloader.pb.xresloader_header.description)
}

// repeated .org.xresloader.pb.xresloader_data_source data_source = 11;
inline int xresloader_header::_internal_data_source_size() const {
  return _internal_data_source().size();
}
inline int xresloader_header::data_source_size() const {
  return _internal_data_source_size();
}
inline void xresloader_header::clear_data_source() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_source_.Clear();
}
inline ::org::xresloader::pb::xresloader_data_source* PROTOBUF_NONNULL xresloader_header::mutable_data_source(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:org.xresloader.pb.xresloader_header.data_source)
  return _internal_mutable_data_source()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::org::xresloader::pb::xresloader_data_source>* PROTOBUF_NONNULL xresloader_header::mutable_data_source()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:org.xresloader.pb.xresloader_header.data_source)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_data_source();
}
inline const ::org::xresloader::pb::xresloader_data_source& xresloader_header::data_source(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:org.xresloader.pb.xresloader_header.data_source)
  return _internal_data_source().Get(index);
}
inline ::org::xresloader::pb::xresloader_data_source* PROTOBUF_NONNULL xresloader_header::add_data_source()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::org::xresloader::pb::xresloader_data_source* _add = _internal_mutable_data_source()->Add();
  // @@protoc_insertion_point(field_add:org.xresloader.pb.xresloader_header.data_source)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::org::xresloader::pb::xresloader_data_source>& xresloader_header::data_source() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:org.xresloader.pb.xresloader_header.data_source)
  return _internal_data_source();
}
inline const ::google::protobuf::RepeatedPtrField<::org::xresloader::pb::xresloader_data_source>&
xresloader_header::_internal_data_source() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_source_;
}
inline ::google::protobuf::RepeatedPtrField<::org::xresloader::pb::xresloader_data_source>* PROTOBUF_NONNULL
xresloader_header::_internal_mutable_data_source() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.data_source_;
}

// -------------------------------------------------------------------

// xresloader_datablocks

// optional .org.xresloader.pb.xresloader_header header = 1;
inline bool xresloader_datablocks::has_header() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.header_ != nullptr);
  return value;
}
inline void xresloader_datablocks::clear_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.header_ != nullptr) _impl_.header_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::org::xresloader::pb::xresloader_header& xresloader_datablocks::_internal_header() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::org::xresloader::pb::xresloader_header* p = _impl_.header_;
  return p != nullptr ? *p : reinterpret_cast<const ::org::xresloader::pb::xresloader_header&>(::org::xresloader::pb::_xresloader_header_default_instance_);
}
inline const ::org::xresloader::pb::xresloader_header& xresloader_datablocks::header() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:org.xresloader.pb.xresloader_datablocks.header)
  return _internal_header();
}
inline void xresloader_datablocks::unsafe_arena_set_allocated_header(
    ::org::xresloader::pb::xresloader_header* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.header_);
  }
  _impl_.header_ = reinterpret_cast<::org::xresloader::pb::xresloader_header*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:org.xresloader.pb.xresloader_datablocks.header)
}
inline ::org::xresloader::pb::xresloader_header* PROTOBUF_NULLABLE xresloader_datablocks::release_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::org::xresloader::pb::xresloader_header* released = _impl_.header_;
  _impl_.header_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::org::xresloader::pb::xresloader_header* PROTOBUF_NULLABLE xresloader_datablocks::unsafe_arena_release_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:org.xresloader.pb.xresloader_datablocks.header)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::org::xresloader::pb::xresloader_header* temp = _impl_.header_;
  _impl_.header_ = nullptr;
  return temp;
}
inline ::org::xresloader::pb::xresloader_header* PROTOBUF_NONNULL xresloader_datablocks::_internal_mutable_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.header_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::org::xresloader::pb::xresloader_header>(GetArena());
    _impl_.header_ = reinterpret_cast<::org::xresloader::pb::xresloader_header*>(p);
  }
  return _impl_.header_;
}
inline ::org::xresloader::pb::xresloader_header* PROTOBUF_NONNULL xresloader_datablocks::mutable_header()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::org::xresloader::pb::xresloader_header* _msg = _internal_mutable_header();
  // @@protoc_insertion_point(field_mutable:org.xresloader.pb.xresloader_datablocks.header)
  return _msg;
}
inline void xresloader_datablocks::set_allocated_header(::org::xresloader::pb::xresloader_header* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.header_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.header_ = reinterpret_cast<::org::xresloader::pb::xresloader_header*>(value);
  // @@protoc_insertion_point(field_set_allocated:org.xresloader.pb.xresloader_datablocks.header)
}

// repeated bytes data_block = 2;
inline int xresloader_datablocks::_internal_data_block_size() const {
  return _internal_data_block().size();
}
inline int xresloader_datablocks::data_block_size() const {
  return _internal_data_block_size();
}
inline void xresloader_datablocks::clear_data_block() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_block_.Clear();
}
inline std::string* PROTOBUF_NONNULL xresloader_datablocks::add_data_block()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_data_block()->Add();
  // @@protoc_insertion_point(field_add_mutable:org.xresloader.pb.xresloader_datablocks.data_block)
  return _s;
}
inline const std::string& xresloader_datablocks::data_block(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:org.xresloader.pb.xresloader_datablocks.data_block)
  return _internal_data_block().Get(index);
}
inline std::string* PROTOBUF_NONNULL xresloader_datablocks::mutable_data_block(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:org.xresloader.pb.xresloader_datablocks.data_block)
  return _internal_mutable_data_block()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void xresloader_datablocks::set_data_block(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(*_internal_mutable_data_block()->Mutable(index), std::forward<Arg_>(value),
                        args... , ::google::protobuf::internal::BytesTag{});
  // @@protoc_insertion_point(field_set:org.xresloader.pb.xresloader_datablocks.data_block)
}
template <typename Arg_, typename... Args_>
inline void xresloader_datablocks::add_data_block(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_data_block(),
                               std::forward<Arg_>(value),
                               args... , ::google::protobuf::internal::BytesTag{});
  // @@protoc_insertion_point(field_add:org.xresloader.pb.xresloader_datablocks.data_block)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>& xresloader_datablocks::data_block() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:org.xresloader.pb.xresloader_datablocks.data_block)
  return _internal_data_block();
}
inline ::google::protobuf::RepeatedPtrField<std::string>* PROTOBUF_NONNULL
xresloader_datablocks::mutable_data_block() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:org.xresloader.pb.xresloader_datablocks.data_block)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_data_block();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
xresloader_datablocks::_internal_data_block() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_block_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>* PROTOBUF_NONNULL
xresloader_datablocks::_internal_mutable_data_block() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.data_block_;
}

// optional string data_message_type = 3;
inline bool xresloader_datablocks::has_data_message_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void xresloader_datablocks::clear_data_message_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_message_type_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& xresloader_datablocks::data_message_type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:org.xresloader.pb.xresloader_datablocks.data_message_type)
  return _internal_data_message_type();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void xresloader_datablocks::set_data_message_type(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.data_message_type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:org.xresloader.pb.xresloader_datablocks.data_message_type)
}
inline std::string* PROTOBUF_NONNULL xresloader_datablocks::mutable_data_message_type()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data_message_type();
  // @@protoc_insertion_point(field_mutable:org.xresloader.pb.xresloader_datablocks.data_message_type)
  return _s;
}
inline const std::string& xresloader_datablocks::_internal_data_message_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_message_type_.Get();
}
inline void xresloader_datablocks::_internal_set_data_message_type(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.data_message_type_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL xresloader_datablocks::_internal_mutable_data_message_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.data_message_type_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE xresloader_datablocks::release_data_message_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:org.xresloader.pb.xresloader_datablocks.data_message_type)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.data_message_type_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.data_message_type_.Set("", GetArena());
  }
  return released;
}
inline void xresloader_datablocks::set_allocated_data_message_type(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.data_message_type_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.data_message_type_.IsDefault()) {
    _impl_.data_message_type_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:org.xresloader.pb.xresloader_datablocks.data_message_type)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace pb
}  // namespace xresloader
}  // namespace org


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // pb_5fheader_2eproto_2epb_2eh
