// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: kind.proto
// Protobuf C++ Version: 6.30.2

#include "kind.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr test_msg_verifier::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        test_id_1_{0u},
        test_id_2_{0u},
        test_id_3_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR test_msg_verifier::test_msg_verifier(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(test_msg_verifier_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct test_msg_verifierDefaultTypeInternal {
  PROTOBUF_CONSTEXPR test_msg_verifierDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~test_msg_verifierDefaultTypeInternal() {}
  union {
    test_msg_verifier _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 test_msg_verifierDefaultTypeInternal _test_msg_verifier_default_instance_;

inline constexpr role_upgrade_cfg::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_{0u},
        level_{0u},
        costvalue_{::int64_t{0}},
        costtype_{0},
        scoreadd_{0} {}

template <typename>
PROTOBUF_CONSTEXPR role_upgrade_cfg::role_upgrade_cfg(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(role_upgrade_cfg_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct role_upgrade_cfgDefaultTypeInternal {
  PROTOBUF_CONSTEXPR role_upgrade_cfgDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~role_upgrade_cfgDefaultTypeInternal() {}
  union {
    role_upgrade_cfg _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 role_upgrade_cfgDefaultTypeInternal _role_upgrade_cfg_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR process_by_script_TestMapIsEntry_DoNotUse::process_by_script_TestMapIsEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : process_by_script_TestMapIsEntry_DoNotUse::MapEntry(process_by_script_TestMapIsEntry_DoNotUse_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : process_by_script_TestMapIsEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct process_by_script_TestMapIsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR process_by_script_TestMapIsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~process_by_script_TestMapIsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    process_by_script_TestMapIsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 process_by_script_TestMapIsEntry_DoNotUseDefaultTypeInternal _process_by_script_TestMapIsEntry_DoNotUse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR process_by_script_MapU32StringEntry_DoNotUse::process_by_script_MapU32StringEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : process_by_script_MapU32StringEntry_DoNotUse::MapEntry(process_by_script_MapU32StringEntry_DoNotUse_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : process_by_script_MapU32StringEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct process_by_script_MapU32StringEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR process_by_script_MapU32StringEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~process_by_script_MapU32StringEntry_DoNotUseDefaultTypeInternal() {}
  union {
    process_by_script_MapU32StringEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 process_by_script_MapU32StringEntry_DoNotUseDefaultTypeInternal _process_by_script_MapU32StringEntry_DoNotUse_default_instance_;

inline constexpr inner_alias_message::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        paramlist_{},
        _paramlist_cached_byte_size_{0},
        itype_{0} {}

template <typename>
PROTOBUF_CONSTEXPR inner_alias_message::inner_alias_message(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(inner_alias_message_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct inner_alias_messageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR inner_alias_messageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~inner_alias_messageDefaultTypeInternal() {}
  union {
    inner_alias_message _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 inner_alias_messageDefaultTypeInternal _inner_alias_message_default_instance_;

inline constexpr field_alias_message::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_{0},
        value_{0} {}

template <typename>
PROTOBUF_CONSTEXPR field_alias_message::field_alias_message(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(field_alias_message_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct field_alias_messageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR field_alias_messageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~field_alias_messageDefaultTypeInternal() {}
  union {
    field_alias_message _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 field_alias_messageDefaultTypeInternal _field_alias_message_default_instance_;

inline constexpr event_rule_item::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        rule_id_{0u},
        rule_param_{0u},
        nested_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR event_rule_item::event_rule_item(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(event_rule_item_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct event_rule_itemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR event_rule_itemDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~event_rule_itemDefaultTypeInternal() {}
  union {
    event_rule_item _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 event_rule_itemDefaultTypeInternal _event_rule_item_default_instance_;

inline constexpr event_reward_item::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        item_id_{0u},
        item_count_{0u},
        nested_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR event_reward_item::event_reward_item(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(event_reward_item_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct event_reward_itemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR event_reward_itemDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~event_reward_itemDefaultTypeInternal() {}
  union {
    event_reward_item _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 event_reward_itemDefaultTypeInternal _event_reward_item_default_instance_;

inline constexpr combine_id::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        prefix_{0u},
        id_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR combine_id::combine_id(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(combine_id_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct combine_idDefaultTypeInternal {
  PROTOBUF_CONSTEXPR combine_idDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~combine_idDefaultTypeInternal() {}
  union {
    combine_id _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 combine_idDefaultTypeInternal _combine_id_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR arr_in_arr_cfg_TestMapIsEntry_DoNotUse::arr_in_arr_cfg_TestMapIsEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : arr_in_arr_cfg_TestMapIsEntry_DoNotUse::MapEntry(arr_in_arr_cfg_TestMapIsEntry_DoNotUse_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : arr_in_arr_cfg_TestMapIsEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct arr_in_arr_cfg_TestMapIsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR arr_in_arr_cfg_TestMapIsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~arr_in_arr_cfg_TestMapIsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    arr_in_arr_cfg_TestMapIsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 arr_in_arr_cfg_TestMapIsEntry_DoNotUseDefaultTypeInternal _arr_in_arr_cfg_TestMapIsEntry_DoNotUse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR process_by_script_TestMapSmEntry_DoNotUse::process_by_script_TestMapSmEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : process_by_script_TestMapSmEntry_DoNotUse::MapEntry(process_by_script_TestMapSmEntry_DoNotUse_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : process_by_script_TestMapSmEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct process_by_script_TestMapSmEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR process_by_script_TestMapSmEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~process_by_script_TestMapSmEntry_DoNotUseDefaultTypeInternal() {}
  union {
    process_by_script_TestMapSmEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 process_by_script_TestMapSmEntry_DoNotUseDefaultTypeInternal _process_by_script_TestMapSmEntry_DoNotUse_default_instance_;

inline constexpr outer_alias_message::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        inners_{},
        nest_int_{},
        _nest_int_cached_byte_size_{0},
        iid_{0} {}

template <typename>
PROTOBUF_CONSTEXPR outer_alias_message::outer_alias_message(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(outer_alias_message_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct outer_alias_messageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR outer_alias_messageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~outer_alias_messageDefaultTypeInternal() {}
  union {
    outer_alias_message _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 outer_alias_messageDefaultTypeInternal _outer_alias_message_default_instance_;

inline constexpr large_file_test::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        szvalue_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        id_id_{nullptr},
        id_{0u},
        i32value_{0},
        u64value_{::uint64_t{0u}},
        f64value_{0},
        f32value_{0} {}

template <typename>
PROTOBUF_CONSTEXPR large_file_test::large_file_test(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(large_file_test_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct large_file_testDefaultTypeInternal {
  PROTOBUF_CONSTEXPR large_file_testDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~large_file_testDefaultTypeInternal() {}
  union {
    large_file_test _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 large_file_testDefaultTypeInternal _large_file_test_default_instance_;

inline constexpr keep_or_strip_empty_list_cfg::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        array_msg_{},
        array_plain_msg_{},
        array_int32_{},
        _array_int32_cached_byte_size_{0},
        array_int64_{},
        _array_int64_cached_byte_size_{0},
        id_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR keep_or_strip_empty_list_cfg::keep_or_strip_empty_list_cfg(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(keep_or_strip_empty_list_cfg_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct keep_or_strip_empty_list_cfgDefaultTypeInternal {
  PROTOBUF_CONSTEXPR keep_or_strip_empty_list_cfgDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~keep_or_strip_empty_list_cfgDefaultTypeInternal() {}
  union {
    keep_or_strip_empty_list_cfg _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 keep_or_strip_empty_list_cfgDefaultTypeInternal _keep_or_strip_empty_list_cfg_default_instance_;

inline constexpr event_cfg::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        test_arr_{},
        test_empty_arr_{},
        rule_{nullptr},
        specify_field_{nullptr},
        id_{0u},
        process_{0u},
        reward_{},
        unlock_type_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR event_cfg::event_cfg(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(event_cfg_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct event_cfgDefaultTypeInternal {
  PROTOBUF_CONSTEXPR event_cfgDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~event_cfgDefaultTypeInternal() {}
  union {
    event_cfg _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 event_cfgDefaultTypeInternal _event_cfg_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR arr_in_arr_cfg_TestMapSmEntry_DoNotUse::arr_in_arr_cfg_TestMapSmEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : arr_in_arr_cfg_TestMapSmEntry_DoNotUse::MapEntry(arr_in_arr_cfg_TestMapSmEntry_DoNotUse_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : arr_in_arr_cfg_TestMapSmEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct arr_in_arr_cfg_TestMapSmEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR arr_in_arr_cfg_TestMapSmEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~arr_in_arr_cfg_TestMapSmEntry_DoNotUseDefaultTypeInternal() {}
  union {
    arr_in_arr_cfg_TestMapSmEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 arr_in_arr_cfg_TestMapSmEntry_DoNotUseDefaultTypeInternal _arr_in_arr_cfg_TestMapSmEntry_DoNotUse_default_instance_;

inline constexpr role_cfg::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        test_array_{},
        test_plain_enum_array_{},
        _test_plain_enum_array_cached_byte_size_{0},
        convert_timepoint_arr_{},
        origin_timepoint_arr_{},
        convert_duration_arr_{},
        origin_duration_arr_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        int_as_string_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        origin_timepoint_one_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        origin_duration_one_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        dep_test_{nullptr},
        convert_timepoint_one_{nullptr},
        convert_duration_one_{nullptr},
        id_{0u},
        unlock_level_{0u},
        cost_type_{0},
        cost_value_{0} {}

template <typename>
PROTOBUF_CONSTEXPR role_cfg::role_cfg(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(role_cfg_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct role_cfgDefaultTypeInternal {
  PROTOBUF_CONSTEXPR role_cfgDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~role_cfgDefaultTypeInternal() {}
  union {
    role_cfg _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 role_cfgDefaultTypeInternal _role_cfg_default_instance_;

inline constexpr process_by_script::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        map_u32_string_{},
        test_map_is_{},
        test_map_sm_{},
        human_readable_date_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        date_{nullptr},
        id_id_{nullptr},
        id_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR process_by_script::process_by_script(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(process_by_script_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct process_by_scriptDefaultTypeInternal {
  PROTOBUF_CONSTEXPR process_by_scriptDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~process_by_scriptDefaultTypeInternal() {}
  union {
    process_by_script _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 process_by_scriptDefaultTypeInternal _process_by_script_default_instance_;

inline constexpr arr_in_arr_test_nested_message::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : test_onof_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR arr_in_arr_test_nested_message::arr_in_arr_test_nested_message(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arr_in_arr_test_nested_message_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct arr_in_arr_test_nested_messageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR arr_in_arr_test_nested_messageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~arr_in_arr_test_nested_messageDefaultTypeInternal() {}
  union {
    arr_in_arr_test_nested_message _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 arr_in_arr_test_nested_messageDefaultTypeInternal _arr_in_arr_test_nested_message_default_instance_;

inline constexpr arr_in_arr::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        int_arr_{},
        _int_arr_cached_byte_size_{0},
        str_arr_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        test_onof_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR arr_in_arr::arr_in_arr(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arr_in_arr_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct arr_in_arrDefaultTypeInternal {
  PROTOBUF_CONSTEXPR arr_in_arrDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~arr_in_arrDefaultTypeInternal() {}
  union {
    arr_in_arr _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 arr_in_arrDefaultTypeInternal _arr_in_arr_default_instance_;

inline constexpr arr_in_arr_cfg::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        arr_{},
        test_plain_int_arr_{},
        _test_plain_int_arr_cached_byte_size_{0},
        test_plain_enum_arr_{},
        _test_plain_enum_arr_cached_byte_size_{0},
        test_plain_msg_arr_{},
        test_map_is_{},
        test_map_sm_{},
        test_plain_msg_{nullptr},
        id_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR arr_in_arr_cfg::arr_in_arr_cfg(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arr_in_arr_cfg_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct arr_in_arr_cfgDefaultTypeInternal {
  PROTOBUF_CONSTEXPR arr_in_arr_cfgDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~arr_in_arr_cfgDefaultTypeInternal() {}
  union {
    arr_in_arr_cfg _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 arr_in_arr_cfgDefaultTypeInternal _arr_in_arr_cfg_default_instance_;
static const ::_pb::EnumDescriptor* PROTOBUF_NONNULL
    file_level_enum_descriptors_kind_2eproto[2];
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_kind_2eproto = nullptr;
const ::uint32_t
    TableStruct_kind_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::role_cfg, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::role_cfg, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::role_cfg, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::role_cfg, _impl_.unlock_level_),
        PROTOBUF_FIELD_OFFSET(::role_cfg, _impl_.cost_type_),
        PROTOBUF_FIELD_OFFSET(::role_cfg, _impl_.cost_value_),
        PROTOBUF_FIELD_OFFSET(::role_cfg, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::role_cfg, _impl_.dep_test_),
        PROTOBUF_FIELD_OFFSET(::role_cfg, _impl_.test_array_),
        PROTOBUF_FIELD_OFFSET(::role_cfg, _impl_.int_as_string_),
        PROTOBUF_FIELD_OFFSET(::role_cfg, _impl_.test_plain_enum_array_),
        PROTOBUF_FIELD_OFFSET(::role_cfg, _impl_.convert_timepoint_one_),
        PROTOBUF_FIELD_OFFSET(::role_cfg, _impl_.origin_timepoint_one_),
        PROTOBUF_FIELD_OFFSET(::role_cfg, _impl_.convert_duration_one_),
        PROTOBUF_FIELD_OFFSET(::role_cfg, _impl_.origin_duration_one_),
        PROTOBUF_FIELD_OFFSET(::role_cfg, _impl_.convert_timepoint_arr_),
        PROTOBUF_FIELD_OFFSET(::role_cfg, _impl_.origin_timepoint_arr_),
        PROTOBUF_FIELD_OFFSET(::role_cfg, _impl_.convert_duration_arr_),
        PROTOBUF_FIELD_OFFSET(::role_cfg, _impl_.origin_duration_arr_),
        7,
        8,
        9,
        10,
        0,
        4,
        ~0u,
        1,
        ~0u,
        5,
        2,
        6,
        3,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::role_upgrade_cfg, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::role_upgrade_cfg, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::role_upgrade_cfg, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::role_upgrade_cfg, _impl_.level_),
        PROTOBUF_FIELD_OFFSET(::role_upgrade_cfg, _impl_.costtype_),
        PROTOBUF_FIELD_OFFSET(::role_upgrade_cfg, _impl_.costvalue_),
        PROTOBUF_FIELD_OFFSET(::role_upgrade_cfg, _impl_.scoreadd_),
        0,
        1,
        3,
        2,
        4,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::arr_in_arr_test_nested_message, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::arr_in_arr_test_nested_message, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::arr_in_arr_test_nested_message, _impl_.test_onof_),
        PROTOBUF_FIELD_OFFSET(::arr_in_arr, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::arr_in_arr, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::arr_in_arr, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::arr_in_arr, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::arr_in_arr, _impl_.int_arr_),
        PROTOBUF_FIELD_OFFSET(::arr_in_arr, _impl_.str_arr_),
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::arr_in_arr, _impl_.test_onof_),
        0,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::test_msg_verifier, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::test_msg_verifier, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::test_msg_verifier, _impl_.test_id_1_),
        PROTOBUF_FIELD_OFFSET(::test_msg_verifier, _impl_.test_id_2_),
        PROTOBUF_FIELD_OFFSET(::test_msg_verifier, _impl_.test_id_3_),
        0,
        1,
        2,
        PROTOBUF_FIELD_OFFSET(::arr_in_arr_cfg_TestMapIsEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::arr_in_arr_cfg_TestMapIsEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::arr_in_arr_cfg_TestMapIsEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::arr_in_arr_cfg_TestMapIsEntry_DoNotUse, _impl_.value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::arr_in_arr_cfg_TestMapSmEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::arr_in_arr_cfg_TestMapSmEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::arr_in_arr_cfg_TestMapSmEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::arr_in_arr_cfg_TestMapSmEntry_DoNotUse, _impl_.value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::arr_in_arr_cfg, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::arr_in_arr_cfg, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::arr_in_arr_cfg, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::arr_in_arr_cfg, _impl_.arr_),
        PROTOBUF_FIELD_OFFSET(::arr_in_arr_cfg, _impl_.test_plain_int_arr_),
        PROTOBUF_FIELD_OFFSET(::arr_in_arr_cfg, _impl_.test_plain_enum_arr_),
        PROTOBUF_FIELD_OFFSET(::arr_in_arr_cfg, _impl_.test_plain_msg_),
        PROTOBUF_FIELD_OFFSET(::arr_in_arr_cfg, _impl_.test_plain_msg_arr_),
        PROTOBUF_FIELD_OFFSET(::arr_in_arr_cfg, _impl_.test_map_is_),
        PROTOBUF_FIELD_OFFSET(::arr_in_arr_cfg, _impl_.test_map_sm_),
        1,
        ~0u,
        ~0u,
        ~0u,
        0,
        ~0u,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::event_reward_item, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::event_reward_item, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::event_reward_item, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::event_reward_item, _impl_.item_id_),
        PROTOBUF_FIELD_OFFSET(::event_reward_item, _impl_.item_count_),
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::event_reward_item, _impl_.nested_),
        0,
        1,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::event_rule_item, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::event_rule_item, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::event_rule_item, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::event_rule_item, _impl_.rule_id_),
        PROTOBUF_FIELD_OFFSET(::event_rule_item, _impl_.rule_param_),
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::event_rule_item, _impl_.nested_),
        0,
        1,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::event_cfg, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::event_cfg, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::event_cfg, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::event_cfg, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::event_cfg, _impl_.process_),
        PROTOBUF_FIELD_OFFSET(::event_cfg, _impl_.rule_),
        PROTOBUF_FIELD_OFFSET(::event_cfg, _impl_.specify_field_),
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::event_cfg, _impl_.test_arr_),
        PROTOBUF_FIELD_OFFSET(::event_cfg, _impl_.test_empty_arr_),
        PROTOBUF_FIELD_OFFSET(::event_cfg, _impl_.reward_),
        PROTOBUF_FIELD_OFFSET(::event_cfg, _impl_.unlock_type_),
        2,
        3,
        0,
        1,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::keep_or_strip_empty_list_cfg, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::keep_or_strip_empty_list_cfg, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::keep_or_strip_empty_list_cfg, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::keep_or_strip_empty_list_cfg, _impl_.array_msg_),
        PROTOBUF_FIELD_OFFSET(::keep_or_strip_empty_list_cfg, _impl_.array_plain_msg_),
        PROTOBUF_FIELD_OFFSET(::keep_or_strip_empty_list_cfg, _impl_.array_int32_),
        PROTOBUF_FIELD_OFFSET(::keep_or_strip_empty_list_cfg, _impl_.array_int64_),
        0,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::combine_id, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::combine_id, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::combine_id, _impl_.prefix_),
        PROTOBUF_FIELD_OFFSET(::combine_id, _impl_.id_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::process_by_script_MapU32StringEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::process_by_script_MapU32StringEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::process_by_script_MapU32StringEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::process_by_script_MapU32StringEntry_DoNotUse, _impl_.value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::process_by_script_TestMapIsEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::process_by_script_TestMapIsEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::process_by_script_TestMapIsEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::process_by_script_TestMapIsEntry_DoNotUse, _impl_.value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::process_by_script_TestMapSmEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::process_by_script_TestMapSmEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::process_by_script_TestMapSmEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::process_by_script_TestMapSmEntry_DoNotUse, _impl_.value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::process_by_script, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::process_by_script, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::process_by_script, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::process_by_script, _impl_.map_u32_string_),
        PROTOBUF_FIELD_OFFSET(::process_by_script, _impl_.human_readable_date_),
        PROTOBUF_FIELD_OFFSET(::process_by_script, _impl_.date_),
        PROTOBUF_FIELD_OFFSET(::process_by_script, _impl_.test_map_is_),
        PROTOBUF_FIELD_OFFSET(::process_by_script, _impl_.test_map_sm_),
        PROTOBUF_FIELD_OFFSET(::process_by_script, _impl_.id_id_),
        3,
        ~0u,
        0,
        1,
        ~0u,
        ~0u,
        2,
        PROTOBUF_FIELD_OFFSET(::large_file_test, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::large_file_test, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::large_file_test, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::large_file_test, _impl_.i32value_),
        PROTOBUF_FIELD_OFFSET(::large_file_test, _impl_.u64value_),
        PROTOBUF_FIELD_OFFSET(::large_file_test, _impl_.f64value_),
        PROTOBUF_FIELD_OFFSET(::large_file_test, _impl_.f32value_),
        PROTOBUF_FIELD_OFFSET(::large_file_test, _impl_.szvalue_),
        PROTOBUF_FIELD_OFFSET(::large_file_test, _impl_.id_id_),
        2,
        3,
        4,
        5,
        6,
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::inner_alias_message, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::inner_alias_message, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::inner_alias_message, _impl_.itype_),
        PROTOBUF_FIELD_OFFSET(::inner_alias_message, _impl_.paramlist_),
        0,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::outer_alias_message, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::outer_alias_message, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::outer_alias_message, _impl_.iid_),
        PROTOBUF_FIELD_OFFSET(::outer_alias_message, _impl_.inners_),
        PROTOBUF_FIELD_OFFSET(::outer_alias_message, _impl_.nest_int_),
        0,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::field_alias_message, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::field_alias_message, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::field_alias_message, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::field_alias_message, _impl_.value_),
        0,
        1,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 25, -1, sizeof(::role_cfg)},
        {42, 55, -1, sizeof(::role_upgrade_cfg)},
        {60, -1, -1, sizeof(::arr_in_arr_test_nested_message)},
        {71, 85, -1, sizeof(::arr_in_arr)},
        {90, 101, -1, sizeof(::test_msg_verifier)},
        {104, 114, -1, sizeof(::arr_in_arr_cfg_TestMapIsEntry_DoNotUse)},
        {116, 126, -1, sizeof(::arr_in_arr_cfg_TestMapSmEntry_DoNotUse)},
        {128, 144, -1, sizeof(::arr_in_arr_cfg)},
        {152, 165, -1, sizeof(::event_reward_item)},
        {169, 182, -1, sizeof(::event_rule_item)},
        {186, 207, -1, sizeof(::event_cfg)},
        {218, 231, -1, sizeof(::keep_or_strip_empty_list_cfg)},
        {236, 246, -1, sizeof(::combine_id)},
        {248, 258, -1, sizeof(::process_by_script_MapU32StringEntry_DoNotUse)},
        {260, 270, -1, sizeof(::process_by_script_TestMapIsEntry_DoNotUse)},
        {272, 282, -1, sizeof(::process_by_script_TestMapSmEntry_DoNotUse)},
        {284, 299, -1, sizeof(::process_by_script)},
        {306, 321, -1, sizeof(::large_file_test)},
        {328, 338, -1, sizeof(::inner_alias_message)},
        {340, 351, -1, sizeof(::outer_alias_message)},
        {354, 364, -1, sizeof(::field_alias_message)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::_role_cfg_default_instance_._instance,
    &::_role_upgrade_cfg_default_instance_._instance,
    &::_arr_in_arr_test_nested_message_default_instance_._instance,
    &::_arr_in_arr_default_instance_._instance,
    &::_test_msg_verifier_default_instance_._instance,
    &::_arr_in_arr_cfg_TestMapIsEntry_DoNotUse_default_instance_._instance,
    &::_arr_in_arr_cfg_TestMapSmEntry_DoNotUse_default_instance_._instance,
    &::_arr_in_arr_cfg_default_instance_._instance,
    &::_event_reward_item_default_instance_._instance,
    &::_event_rule_item_default_instance_._instance,
    &::_event_cfg_default_instance_._instance,
    &::_keep_or_strip_empty_list_cfg_default_instance_._instance,
    &::_combine_id_default_instance_._instance,
    &::_process_by_script_MapU32StringEntry_DoNotUse_default_instance_._instance,
    &::_process_by_script_TestMapIsEntry_DoNotUse_default_instance_._instance,
    &::_process_by_script_TestMapSmEntry_DoNotUse_default_instance_._instance,
    &::_process_by_script_default_instance_._instance,
    &::_large_file_test_default_instance_._instance,
    &::_inner_alias_message_default_instance_._instance,
    &::_outer_alias_message_default_instance_._instance,
    &::_field_alias_message_default_instance_._instance,
};
const char descriptor_table_protodef_kind_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\nkind.proto\032\020xresloader.proto\032\023xresload"
    "er_ue.proto\032\020dependency.proto\032\020dep_level"
    "2.proto\032\036google/protobuf/duration.proto\032"
    "\037google/protobuf/timestamp.proto\"\223\005\n\010rol"
    "e_cfg\022\n\n\002id\030\001 \001(\r\022\024\n\014unlock_level\030\002 \001(\r\022"
    "\021\n\tcost_type\030\003 \001(\005\022\022\n\ncost_value\030\004 \001(\005\022\014"
    "\n\004name\030\005 \001(\t\022\032\n\010dep_test\030\n \001(\0132\010.dep_cfg"
    "\022\022\n\ntest_array\030\013 \003(\t\022\025\n\rint_as_string\030\014 "
    "\001(\t\022)\n\025test_plain_enum_array\030\r \003(\0162\n.cos"
    "t_type\022R\n\025convert_timepoint_one\030\025 \001(\0132\032."
    "google.protobuf.TimestampB\027\302\?\024origin_tim"
    "epoint_one\022\034\n\024origin_timepoint_one\030\026 \001(\t"
    "\022O\n\024convert_duration_one\030\027 \001(\0132\031.google."
    "protobuf.DurationB\026\302\?\023origin_duration_on"
    "e\022\033\n\023origin_duration_one\030\030 \001(\t\022R\n\025conver"
    "t_timepoint_arr\030\031 \003(\0132\032.google.protobuf."
    "TimestampB\027\302\?\024origin_timepoint_arr\022\034\n\024or"
    "igin_timepoint_arr\030\032 \003(\t\022O\n\024convert_dura"
    "tion_arr\030\033 \003(\0132\031.google.protobuf.Duratio"
    "nB\026\302\?\023origin_duration_arr\022\033\n\023origin_dura"
    "tion_arr\030\034 \003(\t\"\350\001\n\020role_upgrade_cfg\022\037\n\002I"
    "d\030\001 \001(\rB\023\312>\014custom_rule3\350D\350\007\022\022\n\005Level\030\002 "
    "\001(\rB\003\350D\001\0226\n\010CostType\030\003 \001(\005B$\312>\014custom_ru"
    "le1\232\?\022Refer to cost_type\022\"\n\tCostValue\030\004 "
    "\001(\003B\017\312>\014custom_rule5\022\020\n\010ScoreAdd\030\005 \001(\005:1"
    "\312>%Test role_upgrade_cfg with multi keys"
    "\352D\006helper\"\353\004\n\narr_in_arr\022-\n\004name\030\001 \001(\tB\037"
    "\232\?\034This is a test name in array\022;\n\007int_a"
    "rr\030\002 \003(\005B*\320\?\001\332\? game_const_config.EN_GCC"
    "_UNKNOWN\342\?\0013\022\017\n\007str_arr\030\003 \003(\t\022#\n\016test_in"
    "fo_role\030\013 \001(\0132\t.role_cfgH\000\0222\n\025test_role_"
    "upgrade_cfg\030\014 \001(\0132\021.role_upgrade_cfgH\000\032\373"
    "\001\n\023test_nested_message\0222\n\035test_nested_me"
    "ssage_info_role\030\013 \001(\0132\t.role_cfgH\000\022A\n$te"
    "st_nested_message_role_upgrade_cfg\030\014 \001(\013"
    "2\021.role_upgrade_cfgH\000\"`\n\020test_nested_enu"
    "m\022%\n!EN_TEST_NESTED_MESSAGE_ENUM_VAL_1\020\000"
    "\022%\n!EN_TEST_NESTED_MESSAGE_ENUM_VAL_2\020{B"
    "\013\n\ttest_onof\"P\n\020test_nested_enum\022\035\n\031EN_T"
    "EST_NESTED_ENUM_VAL_1\020\000\022\035\n\031EN_TEST_NESTE"
    "D_ENUM_VAL_2\020{:*\352D\006helper\360D\001\202E\033Engine/Co"
    "mpositeDataTable.hB\013\n\ttest_onof\"}\n\021test_"
    "msg_verifier\022\022\n\ttest_id_1\030\221N \001(\r\0224\n\ttest"
    "_id_2\030\222N \001(\rB \242\?\017\346\265\213\350\257\225ID\345\210\253\345\220\2152\362\?\013serve"
    "r_only\022\027\n\ttest_id_3\030\223N \001(\rB\003\310\?\001:\005\242\?\002-^\"\232"
    "\004\n\016arr_in_arr_cfg\022\037\n\002id\030\001 \001(\rB\023\232\?\rThis i"
    "s a Key\350D\001\022(\n\003arr\030\002 \003(\0132\013.arr_in_arrB\016\362\?"
    "\013server_only\0222\n\022test_plain_int_arr\030\003 \003(\005"
    "B\026\332\?\0011\342\?\0013\362\?\013server_only\022\'\n\023test_plain_e"
    "num_arr\030\004 \003(\0162\n.cost_type\0220\n\016test_plain_"
    "msg\030\005 \001(\0132\022.test_msg_verifierB\004\262\?\001&\022.\n\022t"
    "est_plain_msg_arr\030\006 \003(\0132\022.test_msg_verif"
    "ier\0223\n\013test_map_is\030\007 \003(\0132\036.arr_in_arr_cf"
    "g.TestMapIsEntry\0229\n\013test_map_sm\030\010 \003(\0132\036."
    "arr_in_arr_cfg.TestMapSmEntryB\004\262\?\001|\0320\n\016T"
    "estMapIsEntry\022\013\n\003key\030\001 \001(\005\022\r\n\005value\030\002 \001("
    "\t:\0028\001\032;\n\016TestMapSmEntry\022\013\n\003key\030\001 \001(\t\022\030\n\005"
    "value\030\002 \001(\0132\t.dep2_cfg:\0028\001:\037\312>\023Test arr_"
    "in_arr_cfg\352D\006helper\"\243\001\n\021event_reward_ite"
    "m\022\017\n\007item_id\030\001 \001(\r\022\022\n\nitem_count\030\002 \001(\r\022&"
    "\n\013nested_note\030\013 \001(\tB\017\242\?\014\346\217\217\350\277\260\346\226\207\346\234\254H\000\0227"
    "\n\020nested_enum_type\030\014 \001(\0162\n.cost_typeB\017\242\?"
    "\014\350\264\247\345\270\201\347\261\273\345\236\213H\000B\010\n\006nested\"\241\001\n\017event_rule"
    "_item\022\017\n\007rule_id\030\001 \001(\r\022\022\n\nrule_param\030\002 \001"
    "(\r\022&\n\013nested_note\030\013 \001(\tB\017\242\?\014\346\217\217\350\277\260\346\226\207\346\234\254"
    "H\000\0227\n\020nested_enum_type\030\014 \001(\0162\n.cost_type"
    "B\017\242\?\014\350\264\247\345\270\201\347\261\273\345\236\213H\000B\010\n\006nested\"\302\004\n\tevent_"
    "cfg\022.\n\002id\030\001 \001(\rB\"\312>\014custom_rule4\322>\nuniqu"
    "e_tag\330>\001\350Dd\022$\n\007process\030\002 \001(\rB\023\322>\nunique_"
    "tag\330>\001\350D\001\022\036\n\004rule\030\006 \001(\0132\020.event_rule_ite"
    "m\0227\n\rspecify_field\030\007 \001(\0132\020.event_rule_it"
    "emB\016\362\?\013server_only\0223\n\004item\030\013 \001(\0132\022.event"
    "_reward_itemB\017\242\?\014\345\245\226\345\212\261\351\201\223\345\205\267H\000\022#\n\010user_"
    "exp\030\014 \001(\003B\017\242\?\014\345\245\226\345\212\261\347\273\217\351\252\214H\000\022\037\n\004note\030\r \001"
    "(\tB\017\242\?\014\346\217\217\350\277\260\346\226\207\346\234\254H\000\0220\n\tenum_type\030\016 \001(\016"
    "2\n.cost_typeB\017\242\?\014\350\264\247\345\270\201\347\261\273\345\236\213H\000\022%\n\nuser_"
    "level\0303 \001(\rB\017\242\?\014\347\216\251\345\256\266\347\255\211\347\272\247H\001\022(\n\010test_a"
    "rr\030[ \003(\0132\020.event_rule_itemB\004\262\?\001;\022.\n\016test"
    "_empty_arr\030\\ \003(\0132\020.event_rule_itemB\004\262\?\001;"
    ":,\312> Test event_cfg with oneof fields\352D\006"
    "helperB\033\n\006reward\022\021\330>\001\352>\013server_onlyB\r\n\013u"
    "nlock_type\"\266\001\n\034keep_or_strip_empty_list_"
    "cfg\022\037\n\002id\030\001 \001(\rB\023\232\?\rThis is a Key\350D\001\022\034\n\t"
    "array_msg\030\002 \003(\0132\t.dep2_cfg\022\"\n\017array_plai"
    "n_msg\030\003 \003(\0132\t.dep2_cfg\022\023\n\013array_int32\030\004 "
    "\003(\005\022\023\n\013array_int64\030\005 \003(\003:\t\352D\006helper\"4\n\nc"
    "ombine_id\022\016\n\006prefix\030\001 \001(\r\022\026\n\002id\030\002 \001(\rB\n\312"
    ">\0070-99999\"\333\003\n\021process_by_script\022\n\n\002id\030\001 "
    "\001(\r\022<\n\016map_u32_string\030\002 \003(\0132$.process_by"
    "_script.MapU32StringEntry\022\033\n\023human_reada"
    "ble_date\030\003 \001(\t\022(\n\004date\030\004 \001(\0132\032.google.pr"
    "otobuf.Timestamp\0226\n\013test_map_is\030\007 \003(\0132!."
    "process_by_script.TestMapIsEntry\022<\n\013test"
    "_map_sm\030\010 \003(\0132!.process_by_script.TestMa"
    "pSmEntryB\004\262\?\001|\022\033\n\005id_id\030\351\007 \001(\0132\013.combine"
    "_id\0323\n\021MapU32StringEntry\022\013\n\003key\030\001 \001(\r\022\r\n"
    "\005value\030\002 \001(\t:\0028\001\0320\n\016TestMapIsEntry\022\013\n\003ke"
    "y\030\001 \001(\005\022\r\n\005value\030\002 \001(\t:\0028\001\032;\n\016TestMapSmE"
    "ntry\022\013\n\003key\030\001 \001(\t\022\030\n\005value\030\002 \001(\0132\t.dep2_"
    "cfg:\0028\001\"\222\001\n\017large_file_test\022\n\n\002id\030\001 \001(\r\022"
    "\020\n\010i32value\030\002 \001(\005\022\020\n\010u64value\030\003 \001(\004\022\020\n\010f"
    "64value\030\004 \001(\001\022\020\n\010f32value\030\005 \001(\002\022\017\n\007szval"
    "ue\030\006 \001(\t\022\032\n\005id_id\030\007 \001(\0132\013.combine_id\"N\n\023"
    "inner_alias_message\022\026\n\005iType\030\001 \001(\005B\007\242\?\004T"
    "ype\022\037\n\tparamList\030\002 \003(\003B\014\242\?\005Param\332\?\0012\"|\n\023"
    "outer_alias_message\022\022\n\003iId\030\001 \001(\005B\005\242\?\002ID\022"
    "2\n\006inners\030\002 \003(\0132\024.inner_alias_messageB\014\242"
    "\?\tCondition\022\035\n\010nest_int\030\003 \003(\005B\013\242\?\004Nest\332\?"
    "\0012\"A\n\023field_alias_message\022\n\n\002id\030\001 \001(\005\022\036\n"
    "\005value\030\002 \001(\005B\017\312>\014custom_rule6b\006proto3"
};
static const ::_pbi::DescriptorTable* PROTOBUF_NONNULL const
    descriptor_table_kind_2eproto_deps[6] = {
        &::descriptor_table_dep_5flevel2_2eproto,
        &::descriptor_table_dependency_2eproto,
        &::descriptor_table_google_2fprotobuf_2fduration_2eproto,
        &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
        &::descriptor_table_xresloader_2eproto,
        &::descriptor_table_xresloader_5fue_2eproto,
};
static ::absl::once_flag descriptor_table_kind_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_kind_2eproto = {
    false,
    false,
    4397,
    descriptor_table_protodef_kind_2eproto,
    "kind.proto",
    &descriptor_table_kind_2eproto_once,
    descriptor_table_kind_2eproto_deps,
    6,
    21,
    schemas,
    file_default_instances,
    TableStruct_kind_2eproto::offsets,
    file_level_enum_descriptors_kind_2eproto,
    file_level_service_descriptors_kind_2eproto,
};
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL arr_in_arr_test_nested_message_test_nested_enum_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_kind_2eproto);
  return file_level_enum_descriptors_kind_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t arr_in_arr_test_nested_message_test_nested_enum_internal_data_[] = {
    65536u, 65536u, 123u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL arr_in_arr_test_nested_enum_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_kind_2eproto);
  return file_level_enum_descriptors_kind_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t arr_in_arr_test_nested_enum_internal_data_[] = {
    65536u, 65536u, 123u, };
// ===================================================================

class role_cfg::_Internal {
 public:
  using HasBits =
      decltype(std::declval<role_cfg>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(role_cfg, _impl_._has_bits_);
};

void role_cfg::clear_dep_test() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.dep_test_ != nullptr) _impl_.dep_test_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
void role_cfg::clear_convert_timepoint_one() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.convert_timepoint_one_ != nullptr) _impl_.convert_timepoint_one_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
void role_cfg::clear_convert_duration_one() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.convert_duration_one_ != nullptr) _impl_.convert_duration_one_->Clear();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
void role_cfg::clear_convert_timepoint_arr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.convert_timepoint_arr_.Clear();
}
void role_cfg::clear_convert_duration_arr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.convert_duration_arr_.Clear();
}
role_cfg::role_cfg(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, role_cfg_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:role_cfg)
}
PROTOBUF_NDEBUG_INLINE role_cfg::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::role_cfg& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        test_array_{visibility, arena, from.test_array_},
        test_plain_enum_array_{visibility, arena, from.test_plain_enum_array_},
        _test_plain_enum_array_cached_byte_size_{0},
        convert_timepoint_arr_{visibility, arena, from.convert_timepoint_arr_},
        origin_timepoint_arr_{visibility, arena, from.origin_timepoint_arr_},
        convert_duration_arr_{visibility, arena, from.convert_duration_arr_},
        origin_duration_arr_{visibility, arena, from.origin_duration_arr_},
        name_(arena, from.name_),
        int_as_string_(arena, from.int_as_string_),
        origin_timepoint_one_(arena, from.origin_timepoint_one_),
        origin_duration_one_(arena, from.origin_duration_one_) {}

role_cfg::role_cfg(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const role_cfg& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, role_cfg_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  role_cfg* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.dep_test_ = ((cached_has_bits & 0x00000010u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.dep_test_)
                : nullptr;
  _impl_.convert_timepoint_one_ = ((cached_has_bits & 0x00000020u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.convert_timepoint_one_)
                : nullptr;
  _impl_.convert_duration_one_ = ((cached_has_bits & 0x00000040u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.convert_duration_one_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, id_),
           offsetof(Impl_, cost_value_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::cost_value_));

  // @@protoc_insertion_point(copy_constructor:role_cfg)
}
PROTOBUF_NDEBUG_INLINE role_cfg::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        test_array_{visibility, arena},
        test_plain_enum_array_{visibility, arena},
        _test_plain_enum_array_cached_byte_size_{0},
        convert_timepoint_arr_{visibility, arena},
        origin_timepoint_arr_{visibility, arena},
        convert_duration_arr_{visibility, arena},
        origin_duration_arr_{visibility, arena},
        name_(arena),
        int_as_string_(arena),
        origin_timepoint_one_(arena),
        origin_duration_one_(arena) {}

inline void role_cfg::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, dep_test_),
           0,
           offsetof(Impl_, cost_value_) -
               offsetof(Impl_, dep_test_) +
               sizeof(Impl_::cost_value_));
}
role_cfg::~role_cfg() {
  // @@protoc_insertion_point(destructor:role_cfg)
  SharedDtor(*this);
}
inline void role_cfg::SharedDtor(MessageLite& self) {
  role_cfg& this_ = static_cast<role_cfg&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.int_as_string_.Destroy();
  this_._impl_.origin_timepoint_one_.Destroy();
  this_._impl_.origin_duration_one_.Destroy();
  delete this_._impl_.dep_test_;
  delete this_._impl_.convert_timepoint_one_;
  delete this_._impl_.convert_duration_one_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL role_cfg::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) role_cfg(arena);
}
constexpr auto role_cfg::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(role_cfg, _impl_.test_array_) +
          decltype(role_cfg::_impl_.test_array_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(role_cfg, _impl_.test_plain_enum_array_) +
          decltype(role_cfg::_impl_.test_plain_enum_array_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(role_cfg, _impl_.convert_timepoint_arr_) +
          decltype(role_cfg::_impl_.convert_timepoint_arr_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(role_cfg, _impl_.origin_timepoint_arr_) +
          decltype(role_cfg::_impl_.origin_timepoint_arr_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(role_cfg, _impl_.convert_duration_arr_) +
          decltype(role_cfg::_impl_.convert_duration_arr_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(role_cfg, _impl_.origin_duration_arr_) +
          decltype(role_cfg::_impl_.origin_duration_arr_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(role_cfg), alignof(role_cfg), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&role_cfg::PlacementNew_,
                                 sizeof(role_cfg),
                                 alignof(role_cfg));
  }
}
constexpr auto role_cfg::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_role_cfg_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &role_cfg::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<role_cfg>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &role_cfg::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<role_cfg>(), &role_cfg::ByteSizeLong,
              &role_cfg::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(role_cfg, _impl_._cached_size_),
          false,
      },
      &role_cfg::kDescriptorMethods,
      &descriptor_table_kind_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull role_cfg_class_data_ =
        role_cfg::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL role_cfg::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&role_cfg_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(role_cfg_class_data_.tc_table);
  return role_cfg_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 17, 5, 138, 2>
role_cfg::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(role_cfg, _impl_._has_bits_),
    0, // no _extensions_
    28, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4027572704,  // skipmap
    offsetof(decltype(_table_), field_entries),
    17,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    role_cfg_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::role_cfg>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(role_cfg, _impl_.id_), 7>(),
     {8, 7, 0, PROTOBUF_FIELD_OFFSET(role_cfg, _impl_.id_)}},
    // uint32 unlock_level = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(role_cfg, _impl_.unlock_level_), 8>(),
     {16, 8, 0, PROTOBUF_FIELD_OFFSET(role_cfg, _impl_.unlock_level_)}},
    // int32 cost_type = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(role_cfg, _impl_.cost_type_), 9>(),
     {24, 9, 0, PROTOBUF_FIELD_OFFSET(role_cfg, _impl_.cost_type_)}},
    // int32 cost_value = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(role_cfg, _impl_.cost_value_), 10>(),
     {32, 10, 0, PROTOBUF_FIELD_OFFSET(role_cfg, _impl_.cost_value_)}},
    // string name = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 0, 0, PROTOBUF_FIELD_OFFSET(role_cfg, _impl_.name_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // .dep_cfg dep_test = 10;
    {::_pbi::TcParser::FastMtS1,
     {82, 4, 0, PROTOBUF_FIELD_OFFSET(role_cfg, _impl_.dep_test_)}},
    // repeated string test_array = 11;
    {::_pbi::TcParser::FastUR1,
     {90, 63, 0, PROTOBUF_FIELD_OFFSET(role_cfg, _impl_.test_array_)}},
    // string int_as_string = 12;
    {::_pbi::TcParser::FastUS1,
     {98, 1, 0, PROTOBUF_FIELD_OFFSET(role_cfg, _impl_.int_as_string_)}},
    // repeated .cost_type test_plain_enum_array = 13;
    {::_pbi::TcParser::FastV32P1,
     {106, 63, 0, PROTOBUF_FIELD_OFFSET(role_cfg, _impl_.test_plain_enum_array_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // .google.protobuf.Timestamp convert_timepoint_one = 21 [(.org.xresloader.field_origin_value) = "origin_timepoint_one"];
    {::_pbi::TcParser::FastMtS2,
     {426, 5, 1, PROTOBUF_FIELD_OFFSET(role_cfg, _impl_.convert_timepoint_one_)}},
    // string origin_timepoint_one = 22;
    {::_pbi::TcParser::FastUS2,
     {434, 2, 0, PROTOBUF_FIELD_OFFSET(role_cfg, _impl_.origin_timepoint_one_)}},
    // .google.protobuf.Duration convert_duration_one = 23 [(.org.xresloader.field_origin_value) = "origin_duration_one"];
    {::_pbi::TcParser::FastMtS2,
     {442, 6, 2, PROTOBUF_FIELD_OFFSET(role_cfg, _impl_.convert_duration_one_)}},
    // string origin_duration_one = 24;
    {::_pbi::TcParser::FastUS2,
     {450, 3, 0, PROTOBUF_FIELD_OFFSET(role_cfg, _impl_.origin_duration_one_)}},
    // repeated .google.protobuf.Timestamp convert_timepoint_arr = 25 [(.org.xresloader.field_origin_value) = "origin_timepoint_arr"];
    {::_pbi::TcParser::FastMtR2,
     {458, 63, 3, PROTOBUF_FIELD_OFFSET(role_cfg, _impl_.convert_timepoint_arr_)}},
    // repeated string origin_timepoint_arr = 26;
    {::_pbi::TcParser::FastUR2,
     {466, 63, 0, PROTOBUF_FIELD_OFFSET(role_cfg, _impl_.origin_timepoint_arr_)}},
    // repeated .google.protobuf.Duration convert_duration_arr = 27 [(.org.xresloader.field_origin_value) = "origin_duration_arr"];
    {::_pbi::TcParser::FastMtR2,
     {474, 63, 4, PROTOBUF_FIELD_OFFSET(role_cfg, _impl_.convert_duration_arr_)}},
    // repeated string origin_duration_arr = 28;
    {::_pbi::TcParser::FastUR2,
     {482, 63, 0, PROTOBUF_FIELD_OFFSET(role_cfg, _impl_.origin_duration_arr_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 id = 1;
    {PROTOBUF_FIELD_OFFSET(role_cfg, _impl_.id_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 unlock_level = 2;
    {PROTOBUF_FIELD_OFFSET(role_cfg, _impl_.unlock_level_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // int32 cost_type = 3;
    {PROTOBUF_FIELD_OFFSET(role_cfg, _impl_.cost_type_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 cost_value = 4;
    {PROTOBUF_FIELD_OFFSET(role_cfg, _impl_.cost_value_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // string name = 5;
    {PROTOBUF_FIELD_OFFSET(role_cfg, _impl_.name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .dep_cfg dep_test = 10;
    {PROTOBUF_FIELD_OFFSET(role_cfg, _impl_.dep_test_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated string test_array = 11;
    {PROTOBUF_FIELD_OFFSET(role_cfg, _impl_.test_array_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // string int_as_string = 12;
    {PROTOBUF_FIELD_OFFSET(role_cfg, _impl_.int_as_string_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .cost_type test_plain_enum_array = 13;
    {PROTOBUF_FIELD_OFFSET(role_cfg, _impl_.test_plain_enum_array_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
    // .google.protobuf.Timestamp convert_timepoint_one = 21 [(.org.xresloader.field_origin_value) = "origin_timepoint_one"];
    {PROTOBUF_FIELD_OFFSET(role_cfg, _impl_.convert_timepoint_one_), _Internal::kHasBitsOffset + 5, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string origin_timepoint_one = 22;
    {PROTOBUF_FIELD_OFFSET(role_cfg, _impl_.origin_timepoint_one_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Duration convert_duration_one = 23 [(.org.xresloader.field_origin_value) = "origin_duration_one"];
    {PROTOBUF_FIELD_OFFSET(role_cfg, _impl_.convert_duration_one_), _Internal::kHasBitsOffset + 6, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string origin_duration_one = 24;
    {PROTOBUF_FIELD_OFFSET(role_cfg, _impl_.origin_duration_one_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .google.protobuf.Timestamp convert_timepoint_arr = 25 [(.org.xresloader.field_origin_value) = "origin_timepoint_arr"];
    {PROTOBUF_FIELD_OFFSET(role_cfg, _impl_.convert_timepoint_arr_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated string origin_timepoint_arr = 26;
    {PROTOBUF_FIELD_OFFSET(role_cfg, _impl_.origin_timepoint_arr_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated .google.protobuf.Duration convert_duration_arr = 27 [(.org.xresloader.field_origin_value) = "origin_duration_arr"];
    {PROTOBUF_FIELD_OFFSET(role_cfg, _impl_.convert_duration_arr_), -1, 4,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated string origin_duration_arr = 28;
    {PROTOBUF_FIELD_OFFSET(role_cfg, _impl_.origin_duration_arr_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::dep_cfg>()},
      {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
      {::_pbi::TcParser::GetTable<::google::protobuf::Duration>()},
      {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
      {::_pbi::TcParser::GetTable<::google::protobuf::Duration>()},
  }},
  {{
    "\10\0\0\0\0\4\0\12\15\0\0\24\0\23\0\24\0\23\0\0\0\0\0\0"
    "role_cfg"
    "name"
    "test_array"
    "int_as_string"
    "origin_timepoint_one"
    "origin_duration_one"
    "origin_timepoint_arr"
    "origin_duration_arr"
  }},
};
PROTOBUF_NOINLINE void role_cfg::Clear() {
// @@protoc_insertion_point(message_clear_start:role_cfg)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.test_array_.Clear();
  _impl_.test_plain_enum_array_.Clear();
  _impl_.convert_timepoint_arr_.Clear();
  _impl_.origin_timepoint_arr_.Clear();
  _impl_.convert_duration_arr_.Clear();
  _impl_.origin_duration_arr_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.int_as_string_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _impl_.origin_timepoint_one_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _impl_.origin_duration_one_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      ABSL_DCHECK(_impl_.dep_test_ != nullptr);
      _impl_.dep_test_->Clear();
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      ABSL_DCHECK(_impl_.convert_timepoint_one_ != nullptr);
      _impl_.convert_timepoint_one_->Clear();
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      ABSL_DCHECK(_impl_.convert_duration_one_ != nullptr);
      _impl_.convert_duration_one_->Clear();
    }
  }
  _impl_.id_ = 0u;
  if ((cached_has_bits & 0x00000700u) != 0) {
    ::memset(&_impl_.unlock_level_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.cost_value_) -
        reinterpret_cast<char*>(&_impl_.unlock_level_)) + sizeof(_impl_.cost_value_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL role_cfg::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const role_cfg& this_ = static_cast<const role_cfg&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL role_cfg::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const role_cfg& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:role_cfg)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 id = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000080u) != 0) {
    if (this_._internal_id() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          1, this_._internal_id(), target);
    }
  }

  // uint32 unlock_level = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000100u) != 0) {
    if (this_._internal_unlock_level() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          2, this_._internal_unlock_level(), target);
    }
  }

  // int32 cost_type = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000200u) != 0) {
    if (this_._internal_cost_type() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<3>(
              stream, this_._internal_cost_type(), target);
    }
  }

  // int32 cost_value = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000400u) != 0) {
    if (this_._internal_cost_value() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<4>(
              stream, this_._internal_cost_value(), target);
    }
  }

  // string name = 5;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_name().empty()) {
      const std::string& _s = this_._internal_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "role_cfg.name");
      target = stream->WriteStringMaybeAliased(5, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .dep_cfg dep_test = 10;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        10, *this_._impl_.dep_test_, this_._impl_.dep_test_->GetCachedSize(), target,
        stream);
  }

  // repeated string test_array = 11;
  for (int i = 0, n = this_._internal_test_array_size(); i < n; ++i) {
    const auto& s = this_._internal_test_array().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "role_cfg.test_array");
    target = stream->WriteString(11, s, target);
  }

  // string int_as_string = 12;
  if ((cached_has_bits & 0x00000002u) != 0) {
    if (!this_._internal_int_as_string().empty()) {
      const std::string& _s = this_._internal_int_as_string();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "role_cfg.int_as_string");
      target = stream->WriteStringMaybeAliased(12, _s, target);
    }
  }

  // repeated .cost_type test_plain_enum_array = 13;
  {
    std::size_t byte_size =
                                      this_._impl_._test_plain_enum_array_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          13, this_._internal_test_plain_enum_array(), byte_size, target);
    }
  }

  // .google.protobuf.Timestamp convert_timepoint_one = 21 [(.org.xresloader.field_origin_value) = "origin_timepoint_one"];
  if ((cached_has_bits & 0x00000020u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        21, *this_._impl_.convert_timepoint_one_, this_._impl_.convert_timepoint_one_->GetCachedSize(), target,
        stream);
  }

  // string origin_timepoint_one = 22;
  if ((cached_has_bits & 0x00000004u) != 0) {
    if (!this_._internal_origin_timepoint_one().empty()) {
      const std::string& _s = this_._internal_origin_timepoint_one();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "role_cfg.origin_timepoint_one");
      target = stream->WriteStringMaybeAliased(22, _s, target);
    }
  }

  // .google.protobuf.Duration convert_duration_one = 23 [(.org.xresloader.field_origin_value) = "origin_duration_one"];
  if ((cached_has_bits & 0x00000040u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        23, *this_._impl_.convert_duration_one_, this_._impl_.convert_duration_one_->GetCachedSize(), target,
        stream);
  }

  // string origin_duration_one = 24;
  if ((cached_has_bits & 0x00000008u) != 0) {
    if (!this_._internal_origin_duration_one().empty()) {
      const std::string& _s = this_._internal_origin_duration_one();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "role_cfg.origin_duration_one");
      target = stream->WriteStringMaybeAliased(24, _s, target);
    }
  }

  // repeated .google.protobuf.Timestamp convert_timepoint_arr = 25 [(.org.xresloader.field_origin_value) = "origin_timepoint_arr"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_convert_timepoint_arr_size());
       i < n; i++) {
    const auto& repfield = this_._internal_convert_timepoint_arr().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            25, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated string origin_timepoint_arr = 26;
  for (int i = 0, n = this_._internal_origin_timepoint_arr_size(); i < n; ++i) {
    const auto& s = this_._internal_origin_timepoint_arr().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "role_cfg.origin_timepoint_arr");
    target = stream->WriteString(26, s, target);
  }

  // repeated .google.protobuf.Duration convert_duration_arr = 27 [(.org.xresloader.field_origin_value) = "origin_duration_arr"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_convert_duration_arr_size());
       i < n; i++) {
    const auto& repfield = this_._internal_convert_duration_arr().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            27, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated string origin_duration_arr = 28;
  for (int i = 0, n = this_._internal_origin_duration_arr_size(); i < n; ++i) {
    const auto& s = this_._internal_origin_duration_arr().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "role_cfg.origin_duration_arr");
    target = stream->WriteString(28, s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:role_cfg)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t role_cfg::ByteSizeLong(const MessageLite& base) {
  const role_cfg& this_ = static_cast<const role_cfg&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t role_cfg::ByteSizeLong() const {
  const role_cfg& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:role_cfg)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated string test_array = 11;
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_test_array().size());
      for (int i = 0, n = this_._internal_test_array().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_test_array().Get(i));
      }
    }
    // repeated .cost_type test_plain_enum_array = 13;
    {
      total_size += ::_pbi::WireFormatLite::EnumSizeWithPackedTagSize(
          this_._internal_test_plain_enum_array(), 1, this_._impl_._test_plain_enum_array_cached_byte_size_);
    }
    // repeated .google.protobuf.Timestamp convert_timepoint_arr = 25 [(.org.xresloader.field_origin_value) = "origin_timepoint_arr"];
    {
      total_size += 2UL * this_._internal_convert_timepoint_arr_size();
      for (const auto& msg : this_._internal_convert_timepoint_arr()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated string origin_timepoint_arr = 26;
    {
      total_size +=
          2 * ::google::protobuf::internal::FromIntSize(this_._internal_origin_timepoint_arr().size());
      for (int i = 0, n = this_._internal_origin_timepoint_arr().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_origin_timepoint_arr().Get(i));
      }
    }
    // repeated .google.protobuf.Duration convert_duration_arr = 27 [(.org.xresloader.field_origin_value) = "origin_duration_arr"];
    {
      total_size += 2UL * this_._internal_convert_duration_arr_size();
      for (const auto& msg : this_._internal_convert_duration_arr()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated string origin_duration_arr = 28;
    {
      total_size +=
          2 * ::google::protobuf::internal::FromIntSize(this_._internal_origin_duration_arr().size());
      for (int i = 0, n = this_._internal_origin_duration_arr().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_origin_duration_arr().Get(i));
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    // string name = 5;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_name());
      }
    }
    // string int_as_string = 12;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_int_as_string().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_int_as_string());
      }
    }
    // string origin_timepoint_one = 22;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!this_._internal_origin_timepoint_one().empty()) {
        total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_origin_timepoint_one());
      }
    }
    // string origin_duration_one = 24;
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (!this_._internal_origin_duration_one().empty()) {
        total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_origin_duration_one());
      }
    }
    // .dep_cfg dep_test = 10;
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.dep_test_);
    }
    // .google.protobuf.Timestamp convert_timepoint_one = 21 [(.org.xresloader.field_origin_value) = "origin_timepoint_one"];
    if ((cached_has_bits & 0x00000020u) != 0) {
      total_size += 2 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.convert_timepoint_one_);
    }
    // .google.protobuf.Duration convert_duration_one = 23 [(.org.xresloader.field_origin_value) = "origin_duration_one"];
    if ((cached_has_bits & 0x00000040u) != 0) {
      total_size += 2 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.convert_duration_one_);
    }
    // uint32 id = 1;
    if ((cached_has_bits & 0x00000080u) != 0) {
      if (this_._internal_id() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_id());
      }
    }
  }
  if ((cached_has_bits & 0x00000700u) != 0) {
    // uint32 unlock_level = 2;
    if ((cached_has_bits & 0x00000100u) != 0) {
      if (this_._internal_unlock_level() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_unlock_level());
      }
    }
    // int32 cost_type = 3;
    if ((cached_has_bits & 0x00000200u) != 0) {
      if (this_._internal_cost_type() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_cost_type());
      }
    }
    // int32 cost_value = 4;
    if ((cached_has_bits & 0x00000400u) != 0) {
      if (this_._internal_cost_value() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_cost_value());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void role_cfg::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<role_cfg*>(&to_msg);
  auto& from = static_cast<const role_cfg&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:role_cfg)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_test_array()->MergeFrom(from._internal_test_array());
  _this->_internal_mutable_test_plain_enum_array()->MergeFrom(from._internal_test_plain_enum_array());
  _this->_internal_mutable_convert_timepoint_arr()->MergeFrom(
      from._internal_convert_timepoint_arr());
  _this->_internal_mutable_origin_timepoint_arr()->MergeFrom(from._internal_origin_timepoint_arr());
  _this->_internal_mutable_convert_duration_arr()->MergeFrom(
      from._internal_convert_duration_arr());
  _this->_internal_mutable_origin_duration_arr()->MergeFrom(from._internal_origin_duration_arr());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_name().empty()) {
        _this->_internal_set_name(from._internal_name());
      } else {
        if (_this->_impl_.name_.IsDefault()) {
          _this->_internal_set_name("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_int_as_string().empty()) {
        _this->_internal_set_int_as_string(from._internal_int_as_string());
      } else {
        if (_this->_impl_.int_as_string_.IsDefault()) {
          _this->_internal_set_int_as_string("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!from._internal_origin_timepoint_one().empty()) {
        _this->_internal_set_origin_timepoint_one(from._internal_origin_timepoint_one());
      } else {
        if (_this->_impl_.origin_timepoint_one_.IsDefault()) {
          _this->_internal_set_origin_timepoint_one("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (!from._internal_origin_duration_one().empty()) {
        _this->_internal_set_origin_duration_one(from._internal_origin_duration_one());
      } else {
        if (_this->_impl_.origin_duration_one_.IsDefault()) {
          _this->_internal_set_origin_duration_one("");
        }
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      ABSL_DCHECK(from._impl_.dep_test_ != nullptr);
      if (_this->_impl_.dep_test_ == nullptr) {
        _this->_impl_.dep_test_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.dep_test_);
      } else {
        _this->_impl_.dep_test_->MergeFrom(*from._impl_.dep_test_);
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      ABSL_DCHECK(from._impl_.convert_timepoint_one_ != nullptr);
      if (_this->_impl_.convert_timepoint_one_ == nullptr) {
        _this->_impl_.convert_timepoint_one_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.convert_timepoint_one_);
      } else {
        _this->_impl_.convert_timepoint_one_->MergeFrom(*from._impl_.convert_timepoint_one_);
      }
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      ABSL_DCHECK(from._impl_.convert_duration_one_ != nullptr);
      if (_this->_impl_.convert_duration_one_ == nullptr) {
        _this->_impl_.convert_duration_one_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.convert_duration_one_);
      } else {
        _this->_impl_.convert_duration_one_->MergeFrom(*from._impl_.convert_duration_one_);
      }
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      if (from._internal_id() != 0) {
        _this->_impl_.id_ = from._impl_.id_;
      }
    }
  }
  if ((cached_has_bits & 0x00000700u) != 0) {
    if ((cached_has_bits & 0x00000100u) != 0) {
      if (from._internal_unlock_level() != 0) {
        _this->_impl_.unlock_level_ = from._impl_.unlock_level_;
      }
    }
    if ((cached_has_bits & 0x00000200u) != 0) {
      if (from._internal_cost_type() != 0) {
        _this->_impl_.cost_type_ = from._impl_.cost_type_;
      }
    }
    if ((cached_has_bits & 0x00000400u) != 0) {
      if (from._internal_cost_value() != 0) {
        _this->_impl_.cost_value_ = from._impl_.cost_value_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void role_cfg::CopyFrom(const role_cfg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:role_cfg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void role_cfg::InternalSwap(role_cfg* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.test_array_.InternalSwap(&other->_impl_.test_array_);
  _impl_.test_plain_enum_array_.InternalSwap(&other->_impl_.test_plain_enum_array_);
  _impl_.convert_timepoint_arr_.InternalSwap(&other->_impl_.convert_timepoint_arr_);
  _impl_.origin_timepoint_arr_.InternalSwap(&other->_impl_.origin_timepoint_arr_);
  _impl_.convert_duration_arr_.InternalSwap(&other->_impl_.convert_duration_arr_);
  _impl_.origin_duration_arr_.InternalSwap(&other->_impl_.origin_duration_arr_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.int_as_string_, &other->_impl_.int_as_string_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.origin_timepoint_one_, &other->_impl_.origin_timepoint_one_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.origin_duration_one_, &other->_impl_.origin_duration_one_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(role_cfg, _impl_.cost_value_)
      + sizeof(role_cfg::_impl_.cost_value_)
      - PROTOBUF_FIELD_OFFSET(role_cfg, _impl_.dep_test_)>(
          reinterpret_cast<char*>(&_impl_.dep_test_),
          reinterpret_cast<char*>(&other->_impl_.dep_test_));
}

::google::protobuf::Metadata role_cfg::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class role_upgrade_cfg::_Internal {
 public:
  using HasBits =
      decltype(std::declval<role_upgrade_cfg>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(role_upgrade_cfg, _impl_._has_bits_);
};

role_upgrade_cfg::role_upgrade_cfg(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, role_upgrade_cfg_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:role_upgrade_cfg)
}
role_upgrade_cfg::role_upgrade_cfg(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const role_upgrade_cfg& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, role_upgrade_cfg_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE role_upgrade_cfg::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void role_upgrade_cfg::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           0,
           offsetof(Impl_, scoreadd_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::scoreadd_));
}
role_upgrade_cfg::~role_upgrade_cfg() {
  // @@protoc_insertion_point(destructor:role_upgrade_cfg)
  SharedDtor(*this);
}
inline void role_upgrade_cfg::SharedDtor(MessageLite& self) {
  role_upgrade_cfg& this_ = static_cast<role_upgrade_cfg&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL role_upgrade_cfg::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) role_upgrade_cfg(arena);
}
constexpr auto role_upgrade_cfg::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(role_upgrade_cfg),
                                            alignof(role_upgrade_cfg));
}
constexpr auto role_upgrade_cfg::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_role_upgrade_cfg_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &role_upgrade_cfg::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<role_upgrade_cfg>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &role_upgrade_cfg::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<role_upgrade_cfg>(), &role_upgrade_cfg::ByteSizeLong,
              &role_upgrade_cfg::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(role_upgrade_cfg, _impl_._cached_size_),
          false,
      },
      &role_upgrade_cfg::kDescriptorMethods,
      &descriptor_table_kind_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull role_upgrade_cfg_class_data_ =
        role_upgrade_cfg::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL role_upgrade_cfg::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&role_upgrade_cfg_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(role_upgrade_cfg_class_data_.tc_table);
  return role_upgrade_cfg_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 0, 2>
role_upgrade_cfg::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(role_upgrade_cfg, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    role_upgrade_cfg_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::role_upgrade_cfg>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 Id = 1 [(.org.xresloader.validator) = "custom_rule3", (.org.xresloader.ue.key_tag) = 1000];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(role_upgrade_cfg, _impl_.id_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(role_upgrade_cfg, _impl_.id_)}},
    // uint32 Level = 2 [(.org.xresloader.ue.key_tag) = 1];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(role_upgrade_cfg, _impl_.level_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(role_upgrade_cfg, _impl_.level_)}},
    // int32 CostType = 3 [(.org.xresloader.validator) = "custom_rule1", (.org.xresloader.field_description) = "Refer to cost_type"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(role_upgrade_cfg, _impl_.costtype_), 3>(),
     {24, 3, 0, PROTOBUF_FIELD_OFFSET(role_upgrade_cfg, _impl_.costtype_)}},
    // int64 CostValue = 4 [(.org.xresloader.validator) = "custom_rule5"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(role_upgrade_cfg, _impl_.costvalue_), 2>(),
     {32, 2, 0, PROTOBUF_FIELD_OFFSET(role_upgrade_cfg, _impl_.costvalue_)}},
    // int32 ScoreAdd = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(role_upgrade_cfg, _impl_.scoreadd_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(role_upgrade_cfg, _impl_.scoreadd_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 Id = 1 [(.org.xresloader.validator) = "custom_rule3", (.org.xresloader.ue.key_tag) = 1000];
    {PROTOBUF_FIELD_OFFSET(role_upgrade_cfg, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 Level = 2 [(.org.xresloader.ue.key_tag) = 1];
    {PROTOBUF_FIELD_OFFSET(role_upgrade_cfg, _impl_.level_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // int32 CostType = 3 [(.org.xresloader.validator) = "custom_rule1", (.org.xresloader.field_description) = "Refer to cost_type"];
    {PROTOBUF_FIELD_OFFSET(role_upgrade_cfg, _impl_.costtype_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int64 CostValue = 4 [(.org.xresloader.validator) = "custom_rule5"];
    {PROTOBUF_FIELD_OFFSET(role_upgrade_cfg, _impl_.costvalue_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // int32 ScoreAdd = 5;
    {PROTOBUF_FIELD_OFFSET(role_upgrade_cfg, _impl_.scoreadd_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void role_upgrade_cfg::Clear() {
// @@protoc_insertion_point(message_clear_start:role_upgrade_cfg)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    ::memset(&_impl_.id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.scoreadd_) -
        reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.scoreadd_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL role_upgrade_cfg::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const role_upgrade_cfg& this_ = static_cast<const role_upgrade_cfg&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL role_upgrade_cfg::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const role_upgrade_cfg& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:role_upgrade_cfg)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 Id = 1 [(.org.xresloader.validator) = "custom_rule3", (.org.xresloader.ue.key_tag) = 1000];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_id() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          1, this_._internal_id(), target);
    }
  }

  // uint32 Level = 2 [(.org.xresloader.ue.key_tag) = 1];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_level() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          2, this_._internal_level(), target);
    }
  }

  // int32 CostType = 3 [(.org.xresloader.validator) = "custom_rule1", (.org.xresloader.field_description) = "Refer to cost_type"];
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (this_._internal_costtype() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<3>(
              stream, this_._internal_costtype(), target);
    }
  }

  // int64 CostValue = 4 [(.org.xresloader.validator) = "custom_rule5"];
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_costvalue() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<4>(
              stream, this_._internal_costvalue(), target);
    }
  }

  // int32 ScoreAdd = 5;
  if ((this_._impl_._has_bits_[0] & 0x00000010u) != 0) {
    if (this_._internal_scoreadd() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<5>(
              stream, this_._internal_scoreadd(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:role_upgrade_cfg)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t role_upgrade_cfg::ByteSizeLong(const MessageLite& base) {
  const role_upgrade_cfg& this_ = static_cast<const role_upgrade_cfg&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t role_upgrade_cfg::ByteSizeLong() const {
  const role_upgrade_cfg& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:role_upgrade_cfg)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    // uint32 Id = 1 [(.org.xresloader.validator) = "custom_rule3", (.org.xresloader.ue.key_tag) = 1000];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_id() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_id());
      }
    }
    // uint32 Level = 2 [(.org.xresloader.ue.key_tag) = 1];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_level() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_level());
      }
    }
    // int64 CostValue = 4 [(.org.xresloader.validator) = "custom_rule5"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_costvalue() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_costvalue());
      }
    }
    // int32 CostType = 3 [(.org.xresloader.validator) = "custom_rule1", (.org.xresloader.field_description) = "Refer to cost_type"];
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_costtype() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_costtype());
      }
    }
    // int32 ScoreAdd = 5;
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (this_._internal_scoreadd() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_scoreadd());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void role_upgrade_cfg::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<role_upgrade_cfg*>(&to_msg);
  auto& from = static_cast<const role_upgrade_cfg&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:role_upgrade_cfg)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (from._internal_id() != 0) {
        _this->_impl_.id_ = from._impl_.id_;
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_level() != 0) {
        _this->_impl_.level_ = from._impl_.level_;
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_costvalue() != 0) {
        _this->_impl_.costvalue_ = from._impl_.costvalue_;
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_costtype() != 0) {
        _this->_impl_.costtype_ = from._impl_.costtype_;
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (from._internal_scoreadd() != 0) {
        _this->_impl_.scoreadd_ = from._impl_.scoreadd_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void role_upgrade_cfg::CopyFrom(const role_upgrade_cfg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:role_upgrade_cfg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void role_upgrade_cfg::InternalSwap(role_upgrade_cfg* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(role_upgrade_cfg, _impl_.scoreadd_)
      + sizeof(role_upgrade_cfg::_impl_.scoreadd_)
      - PROTOBUF_FIELD_OFFSET(role_upgrade_cfg, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::google::protobuf::Metadata role_upgrade_cfg::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class arr_in_arr_test_nested_message::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::arr_in_arr_test_nested_message, _impl_._oneof_case_);
};

void arr_in_arr_test_nested_message::set_allocated_test_nested_message_info_role(::role_cfg* PROTOBUF_NULLABLE test_nested_message_info_role) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_test_onof();
  if (test_nested_message_info_role) {
    ::google::protobuf::Arena* submessage_arena = test_nested_message_info_role->GetArena();
    if (message_arena != submessage_arena) {
      test_nested_message_info_role = ::google::protobuf::internal::GetOwnedMessage(message_arena, test_nested_message_info_role, submessage_arena);
    }
    set_has_test_nested_message_info_role();
    _impl_.test_onof_.test_nested_message_info_role_ = test_nested_message_info_role;
  }
  // @@protoc_insertion_point(field_set_allocated:arr_in_arr.test_nested_message.test_nested_message_info_role)
}
void arr_in_arr_test_nested_message::set_allocated_test_nested_message_role_upgrade_cfg(::role_upgrade_cfg* PROTOBUF_NULLABLE test_nested_message_role_upgrade_cfg) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_test_onof();
  if (test_nested_message_role_upgrade_cfg) {
    ::google::protobuf::Arena* submessage_arena = test_nested_message_role_upgrade_cfg->GetArena();
    if (message_arena != submessage_arena) {
      test_nested_message_role_upgrade_cfg = ::google::protobuf::internal::GetOwnedMessage(message_arena, test_nested_message_role_upgrade_cfg, submessage_arena);
    }
    set_has_test_nested_message_role_upgrade_cfg();
    _impl_.test_onof_.test_nested_message_role_upgrade_cfg_ = test_nested_message_role_upgrade_cfg;
  }
  // @@protoc_insertion_point(field_set_allocated:arr_in_arr.test_nested_message.test_nested_message_role_upgrade_cfg)
}
arr_in_arr_test_nested_message::arr_in_arr_test_nested_message(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, arr_in_arr_test_nested_message_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:arr_in_arr.test_nested_message)
}
PROTOBUF_NDEBUG_INLINE arr_in_arr_test_nested_message::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::arr_in_arr_test_nested_message& from_msg)
      : test_onof_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

arr_in_arr_test_nested_message::arr_in_arr_test_nested_message(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const arr_in_arr_test_nested_message& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, arr_in_arr_test_nested_message_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  arr_in_arr_test_nested_message* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (test_onof_case()) {
    case TEST_ONOF_NOT_SET:
      break;
      case kTestNestedMessageInfoRole:
        _impl_.test_onof_.test_nested_message_info_role_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.test_onof_.test_nested_message_info_role_);
        break;
      case kTestNestedMessageRoleUpgradeCfg:
        _impl_.test_onof_.test_nested_message_role_upgrade_cfg_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.test_onof_.test_nested_message_role_upgrade_cfg_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:arr_in_arr.test_nested_message)
}
PROTOBUF_NDEBUG_INLINE arr_in_arr_test_nested_message::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : test_onof_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void arr_in_arr_test_nested_message::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
arr_in_arr_test_nested_message::~arr_in_arr_test_nested_message() {
  // @@protoc_insertion_point(destructor:arr_in_arr.test_nested_message)
  SharedDtor(*this);
}
inline void arr_in_arr_test_nested_message::SharedDtor(MessageLite& self) {
  arr_in_arr_test_nested_message& this_ = static_cast<arr_in_arr_test_nested_message&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_test_onof()) {
    this_.clear_test_onof();
  }
  this_._impl_.~Impl_();
}

void arr_in_arr_test_nested_message::clear_test_onof() {
// @@protoc_insertion_point(one_of_clear_start:arr_in_arr.test_nested_message)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (test_onof_case()) {
    case kTestNestedMessageInfoRole: {
      if (GetArena() == nullptr) {
        delete _impl_.test_onof_.test_nested_message_info_role_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.test_onof_.test_nested_message_info_role_);
      }
      break;
    }
    case kTestNestedMessageRoleUpgradeCfg: {
      if (GetArena() == nullptr) {
        delete _impl_.test_onof_.test_nested_message_role_upgrade_cfg_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.test_onof_.test_nested_message_role_upgrade_cfg_);
      }
      break;
    }
    case TEST_ONOF_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = TEST_ONOF_NOT_SET;
}


inline void* PROTOBUF_NONNULL arr_in_arr_test_nested_message::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) arr_in_arr_test_nested_message(arena);
}
constexpr auto arr_in_arr_test_nested_message::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(arr_in_arr_test_nested_message),
                                            alignof(arr_in_arr_test_nested_message));
}
constexpr auto arr_in_arr_test_nested_message::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_arr_in_arr_test_nested_message_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &arr_in_arr_test_nested_message::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<arr_in_arr_test_nested_message>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &arr_in_arr_test_nested_message::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<arr_in_arr_test_nested_message>(), &arr_in_arr_test_nested_message::ByteSizeLong,
              &arr_in_arr_test_nested_message::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(arr_in_arr_test_nested_message, _impl_._cached_size_),
          false,
      },
      &arr_in_arr_test_nested_message::kDescriptorMethods,
      &descriptor_table_kind_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull arr_in_arr_test_nested_message_class_data_ =
        arr_in_arr_test_nested_message::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL arr_in_arr_test_nested_message::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&arr_in_arr_test_nested_message_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(arr_in_arr_test_nested_message_class_data_.tc_table);
  return arr_in_arr_test_nested_message_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 2, 0, 2>
arr_in_arr_test_nested_message::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    12, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294964223,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    arr_in_arr_test_nested_message_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::arr_in_arr_test_nested_message>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .role_cfg test_nested_message_info_role = 11;
    {PROTOBUF_FIELD_OFFSET(arr_in_arr_test_nested_message, _impl_.test_onof_.test_nested_message_info_role_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .role_upgrade_cfg test_nested_message_role_upgrade_cfg = 12;
    {PROTOBUF_FIELD_OFFSET(arr_in_arr_test_nested_message, _impl_.test_onof_.test_nested_message_role_upgrade_cfg_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::role_cfg>()},
      {::_pbi::TcParser::GetTable<::role_upgrade_cfg>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void arr_in_arr_test_nested_message::Clear() {
// @@protoc_insertion_point(message_clear_start:arr_in_arr.test_nested_message)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_test_onof();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL arr_in_arr_test_nested_message::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const arr_in_arr_test_nested_message& this_ = static_cast<const arr_in_arr_test_nested_message&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL arr_in_arr_test_nested_message::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const arr_in_arr_test_nested_message& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:arr_in_arr.test_nested_message)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (this_.test_onof_case()) {
    case kTestNestedMessageInfoRole: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          11, *this_._impl_.test_onof_.test_nested_message_info_role_, this_._impl_.test_onof_.test_nested_message_info_role_->GetCachedSize(), target,
          stream);
      break;
    }
    case kTestNestedMessageRoleUpgradeCfg: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          12, *this_._impl_.test_onof_.test_nested_message_role_upgrade_cfg_, this_._impl_.test_onof_.test_nested_message_role_upgrade_cfg_->GetCachedSize(), target,
          stream);
      break;
    }
    default:
      break;
  }
  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:arr_in_arr.test_nested_message)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t arr_in_arr_test_nested_message::ByteSizeLong(const MessageLite& base) {
  const arr_in_arr_test_nested_message& this_ = static_cast<const arr_in_arr_test_nested_message&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t arr_in_arr_test_nested_message::ByteSizeLong() const {
  const arr_in_arr_test_nested_message& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:arr_in_arr.test_nested_message)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  switch (this_.test_onof_case()) {
    // .role_cfg test_nested_message_info_role = 11;
    case kTestNestedMessageInfoRole: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.test_onof_.test_nested_message_info_role_);
      break;
    }
    // .role_upgrade_cfg test_nested_message_role_upgrade_cfg = 12;
    case kTestNestedMessageRoleUpgradeCfg: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.test_onof_.test_nested_message_role_upgrade_cfg_);
      break;
    }
    case TEST_ONOF_NOT_SET: {
      break;
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void arr_in_arr_test_nested_message::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<arr_in_arr_test_nested_message*>(&to_msg);
  auto& from = static_cast<const arr_in_arr_test_nested_message&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:arr_in_arr.test_nested_message)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_test_onof();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kTestNestedMessageInfoRole: {
        if (oneof_needs_init) {
          _this->_impl_.test_onof_.test_nested_message_info_role_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.test_onof_.test_nested_message_info_role_);
        } else {
          _this->_impl_.test_onof_.test_nested_message_info_role_->MergeFrom(*from._impl_.test_onof_.test_nested_message_info_role_);
        }
        break;
      }
      case kTestNestedMessageRoleUpgradeCfg: {
        if (oneof_needs_init) {
          _this->_impl_.test_onof_.test_nested_message_role_upgrade_cfg_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.test_onof_.test_nested_message_role_upgrade_cfg_);
        } else {
          _this->_impl_.test_onof_.test_nested_message_role_upgrade_cfg_->MergeFrom(*from._impl_.test_onof_.test_nested_message_role_upgrade_cfg_);
        }
        break;
      }
      case TEST_ONOF_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void arr_in_arr_test_nested_message::CopyFrom(const arr_in_arr_test_nested_message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:arr_in_arr.test_nested_message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void arr_in_arr_test_nested_message::InternalSwap(arr_in_arr_test_nested_message* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.test_onof_, other->_impl_.test_onof_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata arr_in_arr_test_nested_message::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class arr_in_arr::_Internal {
 public:
  using HasBits =
      decltype(std::declval<arr_in_arr>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(arr_in_arr, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::arr_in_arr, _impl_._oneof_case_);
};

void arr_in_arr::set_allocated_test_info_role(::role_cfg* PROTOBUF_NULLABLE test_info_role) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_test_onof();
  if (test_info_role) {
    ::google::protobuf::Arena* submessage_arena = test_info_role->GetArena();
    if (message_arena != submessage_arena) {
      test_info_role = ::google::protobuf::internal::GetOwnedMessage(message_arena, test_info_role, submessage_arena);
    }
    set_has_test_info_role();
    _impl_.test_onof_.test_info_role_ = test_info_role;
  }
  // @@protoc_insertion_point(field_set_allocated:arr_in_arr.test_info_role)
}
void arr_in_arr::set_allocated_test_role_upgrade_cfg(::role_upgrade_cfg* PROTOBUF_NULLABLE test_role_upgrade_cfg) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_test_onof();
  if (test_role_upgrade_cfg) {
    ::google::protobuf::Arena* submessage_arena = test_role_upgrade_cfg->GetArena();
    if (message_arena != submessage_arena) {
      test_role_upgrade_cfg = ::google::protobuf::internal::GetOwnedMessage(message_arena, test_role_upgrade_cfg, submessage_arena);
    }
    set_has_test_role_upgrade_cfg();
    _impl_.test_onof_.test_role_upgrade_cfg_ = test_role_upgrade_cfg;
  }
  // @@protoc_insertion_point(field_set_allocated:arr_in_arr.test_role_upgrade_cfg)
}
arr_in_arr::arr_in_arr(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, arr_in_arr_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:arr_in_arr)
}
PROTOBUF_NDEBUG_INLINE arr_in_arr::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::arr_in_arr& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        int_arr_{visibility, arena, from.int_arr_},
        _int_arr_cached_byte_size_{0},
        str_arr_{visibility, arena, from.str_arr_},
        name_(arena, from.name_),
        test_onof_{},
        _oneof_case_{from._oneof_case_[0]} {}

arr_in_arr::arr_in_arr(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const arr_in_arr& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, arr_in_arr_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  arr_in_arr* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (test_onof_case()) {
    case TEST_ONOF_NOT_SET:
      break;
      case kTestInfoRole:
        _impl_.test_onof_.test_info_role_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.test_onof_.test_info_role_);
        break;
      case kTestRoleUpgradeCfg:
        _impl_.test_onof_.test_role_upgrade_cfg_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.test_onof_.test_role_upgrade_cfg_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:arr_in_arr)
}
PROTOBUF_NDEBUG_INLINE arr_in_arr::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        int_arr_{visibility, arena},
        _int_arr_cached_byte_size_{0},
        str_arr_{visibility, arena},
        name_(arena),
        test_onof_{},
        _oneof_case_{} {}

inline void arr_in_arr::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
arr_in_arr::~arr_in_arr() {
  // @@protoc_insertion_point(destructor:arr_in_arr)
  SharedDtor(*this);
}
inline void arr_in_arr::SharedDtor(MessageLite& self) {
  arr_in_arr& this_ = static_cast<arr_in_arr&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  if (this_.has_test_onof()) {
    this_.clear_test_onof();
  }
  this_._impl_.~Impl_();
}

void arr_in_arr::clear_test_onof() {
// @@protoc_insertion_point(one_of_clear_start:arr_in_arr)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (test_onof_case()) {
    case kTestInfoRole: {
      if (GetArena() == nullptr) {
        delete _impl_.test_onof_.test_info_role_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.test_onof_.test_info_role_);
      }
      break;
    }
    case kTestRoleUpgradeCfg: {
      if (GetArena() == nullptr) {
        delete _impl_.test_onof_.test_role_upgrade_cfg_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.test_onof_.test_role_upgrade_cfg_);
      }
      break;
    }
    case TEST_ONOF_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = TEST_ONOF_NOT_SET;
}


inline void* PROTOBUF_NONNULL arr_in_arr::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) arr_in_arr(arena);
}
constexpr auto arr_in_arr::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(arr_in_arr, _impl_.int_arr_) +
          decltype(arr_in_arr::_impl_.int_arr_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(arr_in_arr, _impl_.str_arr_) +
          decltype(arr_in_arr::_impl_.str_arr_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(arr_in_arr), alignof(arr_in_arr), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&arr_in_arr::PlacementNew_,
                                 sizeof(arr_in_arr),
                                 alignof(arr_in_arr));
  }
}
constexpr auto arr_in_arr::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_arr_in_arr_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &arr_in_arr::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<arr_in_arr>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &arr_in_arr::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<arr_in_arr>(), &arr_in_arr::ByteSizeLong,
              &arr_in_arr::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(arr_in_arr, _impl_._cached_size_),
          false,
      },
      &arr_in_arr::kDescriptorMethods,
      &descriptor_table_kind_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull arr_in_arr_class_data_ =
        arr_in_arr::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL arr_in_arr::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&arr_in_arr_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(arr_in_arr_class_data_.tc_table);
  return arr_in_arr_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 5, 2, 30, 2>
arr_in_arr::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(arr_in_arr, _impl_._has_bits_),
    0, // no _extensions_
    12, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294964216,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    arr_in_arr_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::arr_in_arr>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string name = 1 [(.org.xresloader.field_description) = "This is a test name in array"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(arr_in_arr, _impl_.name_)}},
    // repeated int32 int_arr = 2 [(.org.xresloader.field_list_strip_option) = LIST_STRIP_NOTHING, (.org.xresloader.field_list_min_size) = "game_const_config.EN_GCC_UNKNOWN", (.org.xresloader.field_list_max_size) = "3"];
    {::_pbi::TcParser::FastV32P1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(arr_in_arr, _impl_.int_arr_)}},
    // repeated string str_arr = 3;
    {::_pbi::TcParser::FastUR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(arr_in_arr, _impl_.str_arr_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1 [(.org.xresloader.field_description) = "This is a test name in array"];
    {PROTOBUF_FIELD_OFFSET(arr_in_arr, _impl_.name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated int32 int_arr = 2 [(.org.xresloader.field_list_strip_option) = LIST_STRIP_NOTHING, (.org.xresloader.field_list_min_size) = "game_const_config.EN_GCC_UNKNOWN", (.org.xresloader.field_list_max_size) = "3"];
    {PROTOBUF_FIELD_OFFSET(arr_in_arr, _impl_.int_arr_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
    // repeated string str_arr = 3;
    {PROTOBUF_FIELD_OFFSET(arr_in_arr, _impl_.str_arr_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // .role_cfg test_info_role = 11;
    {PROTOBUF_FIELD_OFFSET(arr_in_arr, _impl_.test_onof_.test_info_role_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .role_upgrade_cfg test_role_upgrade_cfg = 12;
    {PROTOBUF_FIELD_OFFSET(arr_in_arr, _impl_.test_onof_.test_role_upgrade_cfg_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::role_cfg>()},
      {::_pbi::TcParser::GetTable<::role_upgrade_cfg>()},
  }},
  {{
    "\12\4\0\7\0\0\0\0"
    "arr_in_arr"
    "name"
    "str_arr"
  }},
};
PROTOBUF_NOINLINE void arr_in_arr::Clear() {
// @@protoc_insertion_point(message_clear_start:arr_in_arr)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.int_arr_.Clear();
  _impl_.str_arr_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.name_.ClearNonDefaultToEmpty();
  }
  clear_test_onof();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL arr_in_arr::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const arr_in_arr& this_ = static_cast<const arr_in_arr&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL arr_in_arr::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const arr_in_arr& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:arr_in_arr)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1 [(.org.xresloader.field_description) = "This is a test name in array"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_name().empty()) {
      const std::string& _s = this_._internal_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "arr_in_arr.name");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // repeated int32 int_arr = 2 [(.org.xresloader.field_list_strip_option) = LIST_STRIP_NOTHING, (.org.xresloader.field_list_min_size) = "game_const_config.EN_GCC_UNKNOWN", (.org.xresloader.field_list_max_size) = "3"];
  {
    int byte_size = this_._impl_._int_arr_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          2, this_._internal_int_arr(), byte_size, target);
    }
  }

  // repeated string str_arr = 3;
  for (int i = 0, n = this_._internal_str_arr_size(); i < n; ++i) {
    const auto& s = this_._internal_str_arr().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "arr_in_arr.str_arr");
    target = stream->WriteString(3, s, target);
  }

  switch (this_.test_onof_case()) {
    case kTestInfoRole: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          11, *this_._impl_.test_onof_.test_info_role_, this_._impl_.test_onof_.test_info_role_->GetCachedSize(), target,
          stream);
      break;
    }
    case kTestRoleUpgradeCfg: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          12, *this_._impl_.test_onof_.test_role_upgrade_cfg_, this_._impl_.test_onof_.test_role_upgrade_cfg_->GetCachedSize(), target,
          stream);
      break;
    }
    default:
      break;
  }
  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:arr_in_arr)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t arr_in_arr::ByteSizeLong(const MessageLite& base) {
  const arr_in_arr& this_ = static_cast<const arr_in_arr&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t arr_in_arr::ByteSizeLong() const {
  const arr_in_arr& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:arr_in_arr)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated int32 int_arr = 2 [(.org.xresloader.field_list_strip_option) = LIST_STRIP_NOTHING, (.org.xresloader.field_list_min_size) = "game_const_config.EN_GCC_UNKNOWN", (.org.xresloader.field_list_max_size) = "3"];
    {
      total_size +=
          ::_pbi::WireFormatLite::Int32SizeWithPackedTagSize(
              this_._internal_int_arr(), 1,
              this_._impl_._int_arr_cached_byte_size_);
    }
    // repeated string str_arr = 3;
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_str_arr().size());
      for (int i = 0, n = this_._internal_str_arr().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_str_arr().Get(i));
      }
    }
  }
   {
    // string name = 1 [(.org.xresloader.field_description) = "This is a test name in array"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_name());
      }
    }
  }
  switch (this_.test_onof_case()) {
    // .role_cfg test_info_role = 11;
    case kTestInfoRole: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.test_onof_.test_info_role_);
      break;
    }
    // .role_upgrade_cfg test_role_upgrade_cfg = 12;
    case kTestRoleUpgradeCfg: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.test_onof_.test_role_upgrade_cfg_);
      break;
    }
    case TEST_ONOF_NOT_SET: {
      break;
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void arr_in_arr::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<arr_in_arr*>(&to_msg);
  auto& from = static_cast<const arr_in_arr&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:arr_in_arr)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_int_arr()->MergeFrom(from._internal_int_arr());
  _this->_internal_mutable_str_arr()->MergeFrom(from._internal_str_arr());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    if (!from._internal_name().empty()) {
      _this->_internal_set_name(from._internal_name());
    } else {
      if (_this->_impl_.name_.IsDefault()) {
        _this->_internal_set_name("");
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_test_onof();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kTestInfoRole: {
        if (oneof_needs_init) {
          _this->_impl_.test_onof_.test_info_role_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.test_onof_.test_info_role_);
        } else {
          _this->_impl_.test_onof_.test_info_role_->MergeFrom(*from._impl_.test_onof_.test_info_role_);
        }
        break;
      }
      case kTestRoleUpgradeCfg: {
        if (oneof_needs_init) {
          _this->_impl_.test_onof_.test_role_upgrade_cfg_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.test_onof_.test_role_upgrade_cfg_);
        } else {
          _this->_impl_.test_onof_.test_role_upgrade_cfg_->MergeFrom(*from._impl_.test_onof_.test_role_upgrade_cfg_);
        }
        break;
      }
      case TEST_ONOF_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void arr_in_arr::CopyFrom(const arr_in_arr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:arr_in_arr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void arr_in_arr::InternalSwap(arr_in_arr* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.int_arr_.InternalSwap(&other->_impl_.int_arr_);
  _impl_.str_arr_.InternalSwap(&other->_impl_.str_arr_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  swap(_impl_.test_onof_, other->_impl_.test_onof_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata arr_in_arr::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class test_msg_verifier::_Internal {
 public:
  using HasBits =
      decltype(std::declval<test_msg_verifier>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(test_msg_verifier, _impl_._has_bits_);
};

test_msg_verifier::test_msg_verifier(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, test_msg_verifier_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:test_msg_verifier)
}
test_msg_verifier::test_msg_verifier(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const test_msg_verifier& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, test_msg_verifier_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE test_msg_verifier::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void test_msg_verifier::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, test_id_1_),
           0,
           offsetof(Impl_, test_id_3_) -
               offsetof(Impl_, test_id_1_) +
               sizeof(Impl_::test_id_3_));
}
test_msg_verifier::~test_msg_verifier() {
  // @@protoc_insertion_point(destructor:test_msg_verifier)
  SharedDtor(*this);
}
inline void test_msg_verifier::SharedDtor(MessageLite& self) {
  test_msg_verifier& this_ = static_cast<test_msg_verifier&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL test_msg_verifier::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) test_msg_verifier(arena);
}
constexpr auto test_msg_verifier::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(test_msg_verifier),
                                            alignof(test_msg_verifier));
}
constexpr auto test_msg_verifier::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_test_msg_verifier_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &test_msg_verifier::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<test_msg_verifier>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &test_msg_verifier::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<test_msg_verifier>(), &test_msg_verifier::ByteSizeLong,
              &test_msg_verifier::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(test_msg_verifier, _impl_._cached_size_),
          false,
      },
      &test_msg_verifier::kDescriptorMethods,
      &descriptor_table_kind_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull test_msg_verifier_class_data_ =
        test_msg_verifier::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL test_msg_verifier::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&test_msg_verifier_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(test_msg_verifier_class_data_.tc_table);
  return test_msg_verifier_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 3, 0, 0, 7>
test_msg_verifier::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(test_msg_verifier, _impl_._has_bits_),
    0, // no _extensions_
    10003, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    test_msg_verifier_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::test_msg_verifier>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    10001, 0, 1,
    65528, 0,
    65535, 65535
  }}, {{
    // uint32 test_id_1 = 10001;
    {PROTOBUF_FIELD_OFFSET(test_msg_verifier, _impl_.test_id_1_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 test_id_2 = 10002 [(.org.xresloader.field_alias) = "\346\265\213\350\257\225ID\345\210\253\345\220\2152", (.org.xresloader.field_tag) = "server_only"];
    {PROTOBUF_FIELD_OFFSET(test_msg_verifier, _impl_.test_id_2_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 test_id_3 = 10003 [(.org.xresloader.field_allow_missing_in_plain_mode) = true];
    {PROTOBUF_FIELD_OFFSET(test_msg_verifier, _impl_.test_id_3_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void test_msg_verifier::Clear() {
// @@protoc_insertion_point(message_clear_start:test_msg_verifier)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    ::memset(&_impl_.test_id_1_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.test_id_3_) -
        reinterpret_cast<char*>(&_impl_.test_id_1_)) + sizeof(_impl_.test_id_3_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL test_msg_verifier::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const test_msg_verifier& this_ = static_cast<const test_msg_verifier&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL test_msg_verifier::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const test_msg_verifier& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:test_msg_verifier)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 test_id_1 = 10001;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_test_id_1() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          10001, this_._internal_test_id_1(), target);
    }
  }

  // uint32 test_id_2 = 10002 [(.org.xresloader.field_alias) = "\346\265\213\350\257\225ID\345\210\253\345\220\2152", (.org.xresloader.field_tag) = "server_only"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_test_id_2() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          10002, this_._internal_test_id_2(), target);
    }
  }

  // uint32 test_id_3 = 10003 [(.org.xresloader.field_allow_missing_in_plain_mode) = true];
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_test_id_3() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          10003, this_._internal_test_id_3(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:test_msg_verifier)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t test_msg_verifier::ByteSizeLong(const MessageLite& base) {
  const test_msg_verifier& this_ = static_cast<const test_msg_verifier&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t test_msg_verifier::ByteSizeLong() const {
  const test_msg_verifier& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:test_msg_verifier)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // uint32 test_id_1 = 10001;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_test_id_1() != 0) {
        total_size += 3 + ::_pbi::WireFormatLite::UInt32Size(
                                        this_._internal_test_id_1());
      }
    }
    // uint32 test_id_2 = 10002 [(.org.xresloader.field_alias) = "\346\265\213\350\257\225ID\345\210\253\345\220\2152", (.org.xresloader.field_tag) = "server_only"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_test_id_2() != 0) {
        total_size += 3 + ::_pbi::WireFormatLite::UInt32Size(
                                        this_._internal_test_id_2());
      }
    }
    // uint32 test_id_3 = 10003 [(.org.xresloader.field_allow_missing_in_plain_mode) = true];
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_test_id_3() != 0) {
        total_size += 3 + ::_pbi::WireFormatLite::UInt32Size(
                                        this_._internal_test_id_3());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void test_msg_verifier::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<test_msg_verifier*>(&to_msg);
  auto& from = static_cast<const test_msg_verifier&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:test_msg_verifier)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (from._internal_test_id_1() != 0) {
        _this->_impl_.test_id_1_ = from._impl_.test_id_1_;
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_test_id_2() != 0) {
        _this->_impl_.test_id_2_ = from._impl_.test_id_2_;
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_test_id_3() != 0) {
        _this->_impl_.test_id_3_ = from._impl_.test_id_3_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void test_msg_verifier::CopyFrom(const test_msg_verifier& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:test_msg_verifier)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void test_msg_verifier::InternalSwap(test_msg_verifier* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(test_msg_verifier, _impl_.test_id_3_)
      + sizeof(test_msg_verifier::_impl_.test_id_3_)
      - PROTOBUF_FIELD_OFFSET(test_msg_verifier, _impl_.test_id_1_)>(
          reinterpret_cast<char*>(&_impl_.test_id_1_),
          reinterpret_cast<char*>(&other->_impl_.test_id_1_));
}

::google::protobuf::Metadata test_msg_verifier::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
arr_in_arr_cfg_TestMapIsEntry_DoNotUse::arr_in_arr_cfg_TestMapIsEntry_DoNotUse()
    : SuperType(arr_in_arr_cfg_TestMapIsEntry_DoNotUse_class_data_.base()) {}
arr_in_arr_cfg_TestMapIsEntry_DoNotUse::arr_in_arr_cfg_TestMapIsEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
    : SuperType(arena, arr_in_arr_cfg_TestMapIsEntry_DoNotUse_class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
arr_in_arr_cfg_TestMapIsEntry_DoNotUse::arr_in_arr_cfg_TestMapIsEntry_DoNotUse() : SuperType() {}
arr_in_arr_cfg_TestMapIsEntry_DoNotUse::arr_in_arr_cfg_TestMapIsEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
inline void* PROTOBUF_NONNULL arr_in_arr_cfg_TestMapIsEntry_DoNotUse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) arr_in_arr_cfg_TestMapIsEntry_DoNotUse(arena);
}
constexpr auto arr_in_arr_cfg_TestMapIsEntry_DoNotUse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(arr_in_arr_cfg_TestMapIsEntry_DoNotUse),
                                            alignof(arr_in_arr_cfg_TestMapIsEntry_DoNotUse));
}
constexpr auto arr_in_arr_cfg_TestMapIsEntry_DoNotUse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_arr_in_arr_cfg_TestMapIsEntry_DoNotUse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &arr_in_arr_cfg_TestMapIsEntry_DoNotUse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<arr_in_arr_cfg_TestMapIsEntry_DoNotUse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &arr_in_arr_cfg_TestMapIsEntry_DoNotUse::SharedDtor,
          static_cast<void (::google::protobuf::MessageLite::*)()>(&arr_in_arr_cfg_TestMapIsEntry_DoNotUse::ClearImpl),
              ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
              ,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(arr_in_arr_cfg_TestMapIsEntry_DoNotUse, _impl_._cached_size_),
          false,
      },
      &arr_in_arr_cfg_TestMapIsEntry_DoNotUse::kDescriptorMethods,
      &descriptor_table_kind_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull arr_in_arr_cfg_TestMapIsEntry_DoNotUse_class_data_ =
        arr_in_arr_cfg_TestMapIsEntry_DoNotUse::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL arr_in_arr_cfg_TestMapIsEntry_DoNotUse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&arr_in_arr_cfg_TestMapIsEntry_DoNotUse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(arr_in_arr_cfg_TestMapIsEntry_DoNotUse_class_data_.tc_table);
  return arr_in_arr_cfg_TestMapIsEntry_DoNotUse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 43, 2>
arr_in_arr_cfg_TestMapIsEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(arr_in_arr_cfg_TestMapIsEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    arr_in_arr_cfg_TestMapIsEntry_DoNotUse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::arr_in_arr_cfg_TestMapIsEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(arr_in_arr_cfg_TestMapIsEntry_DoNotUse, _impl_.value_)}},
    // int32 key = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(arr_in_arr_cfg_TestMapIsEntry_DoNotUse, _impl_.key_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(arr_in_arr_cfg_TestMapIsEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 key = 1;
    {PROTOBUF_FIELD_OFFSET(arr_in_arr_cfg_TestMapIsEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(arr_in_arr_cfg_TestMapIsEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\35\0\5\0\0\0\0\0"
    "arr_in_arr_cfg.TestMapIsEntry"
    "value"
  }},
};
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
arr_in_arr_cfg_TestMapSmEntry_DoNotUse::arr_in_arr_cfg_TestMapSmEntry_DoNotUse()
    : SuperType(arr_in_arr_cfg_TestMapSmEntry_DoNotUse_class_data_.base()) {}
arr_in_arr_cfg_TestMapSmEntry_DoNotUse::arr_in_arr_cfg_TestMapSmEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
    : SuperType(arena, arr_in_arr_cfg_TestMapSmEntry_DoNotUse_class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
arr_in_arr_cfg_TestMapSmEntry_DoNotUse::arr_in_arr_cfg_TestMapSmEntry_DoNotUse() : SuperType() {}
arr_in_arr_cfg_TestMapSmEntry_DoNotUse::arr_in_arr_cfg_TestMapSmEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
inline void* PROTOBUF_NONNULL arr_in_arr_cfg_TestMapSmEntry_DoNotUse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) arr_in_arr_cfg_TestMapSmEntry_DoNotUse(arena);
}
constexpr auto arr_in_arr_cfg_TestMapSmEntry_DoNotUse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(arr_in_arr_cfg_TestMapSmEntry_DoNotUse),
                                            alignof(arr_in_arr_cfg_TestMapSmEntry_DoNotUse));
}
constexpr auto arr_in_arr_cfg_TestMapSmEntry_DoNotUse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_arr_in_arr_cfg_TestMapSmEntry_DoNotUse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &arr_in_arr_cfg_TestMapSmEntry_DoNotUse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<arr_in_arr_cfg_TestMapSmEntry_DoNotUse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &arr_in_arr_cfg_TestMapSmEntry_DoNotUse::SharedDtor,
          static_cast<void (::google::protobuf::MessageLite::*)()>(&arr_in_arr_cfg_TestMapSmEntry_DoNotUse::ClearImpl),
              ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
              ,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(arr_in_arr_cfg_TestMapSmEntry_DoNotUse, _impl_._cached_size_),
          false,
      },
      &arr_in_arr_cfg_TestMapSmEntry_DoNotUse::kDescriptorMethods,
      &descriptor_table_kind_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull arr_in_arr_cfg_TestMapSmEntry_DoNotUse_class_data_ =
        arr_in_arr_cfg_TestMapSmEntry_DoNotUse::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL arr_in_arr_cfg_TestMapSmEntry_DoNotUse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&arr_in_arr_cfg_TestMapSmEntry_DoNotUse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(arr_in_arr_cfg_TestMapSmEntry_DoNotUse_class_data_.tc_table);
  return arr_in_arr_cfg_TestMapSmEntry_DoNotUse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 41, 2>
arr_in_arr_cfg_TestMapSmEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(arr_in_arr_cfg_TestMapSmEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    arr_in_arr_cfg_TestMapSmEntry_DoNotUse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::arr_in_arr_cfg_TestMapSmEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .dep2_cfg value = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(arr_in_arr_cfg_TestMapSmEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(arr_in_arr_cfg_TestMapSmEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(arr_in_arr_cfg_TestMapSmEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .dep2_cfg value = 2;
    {PROTOBUF_FIELD_OFFSET(arr_in_arr_cfg_TestMapSmEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::dep2_cfg>()},
  }},
  {{
    "\35\3\0\0\0\0\0\0"
    "arr_in_arr_cfg.TestMapSmEntry"
    "key"
  }},
};
// ===================================================================

class arr_in_arr_cfg::_Internal {
 public:
  using HasBits =
      decltype(std::declval<arr_in_arr_cfg>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(arr_in_arr_cfg, _impl_._has_bits_);
};

void arr_in_arr_cfg::clear_test_map_sm() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.test_map_sm_.Clear();
}
arr_in_arr_cfg::arr_in_arr_cfg(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, arr_in_arr_cfg_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:arr_in_arr_cfg)
}
PROTOBUF_NDEBUG_INLINE arr_in_arr_cfg::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::arr_in_arr_cfg& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        arr_{visibility, arena, from.arr_},
        test_plain_int_arr_{visibility, arena, from.test_plain_int_arr_},
        _test_plain_int_arr_cached_byte_size_{0},
        test_plain_enum_arr_{visibility, arena, from.test_plain_enum_arr_},
        _test_plain_enum_arr_cached_byte_size_{0},
        test_plain_msg_arr_{visibility, arena, from.test_plain_msg_arr_},
        test_map_is_{visibility, arena, from.test_map_is_},
        test_map_sm_{visibility, arena, from.test_map_sm_} {}

arr_in_arr_cfg::arr_in_arr_cfg(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const arr_in_arr_cfg& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, arr_in_arr_cfg_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  arr_in_arr_cfg* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.test_plain_msg_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.test_plain_msg_)
                : nullptr;
  _impl_.id_ = from._impl_.id_;

  // @@protoc_insertion_point(copy_constructor:arr_in_arr_cfg)
}
PROTOBUF_NDEBUG_INLINE arr_in_arr_cfg::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        arr_{visibility, arena},
        test_plain_int_arr_{visibility, arena},
        _test_plain_int_arr_cached_byte_size_{0},
        test_plain_enum_arr_{visibility, arena},
        _test_plain_enum_arr_cached_byte_size_{0},
        test_plain_msg_arr_{visibility, arena},
        test_map_is_{visibility, arena},
        test_map_sm_{visibility, arena} {}

inline void arr_in_arr_cfg::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, test_plain_msg_),
           0,
           offsetof(Impl_, id_) -
               offsetof(Impl_, test_plain_msg_) +
               sizeof(Impl_::id_));
}
arr_in_arr_cfg::~arr_in_arr_cfg() {
  // @@protoc_insertion_point(destructor:arr_in_arr_cfg)
  SharedDtor(*this);
}
inline void arr_in_arr_cfg::SharedDtor(MessageLite& self) {
  arr_in_arr_cfg& this_ = static_cast<arr_in_arr_cfg&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.test_plain_msg_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL arr_in_arr_cfg::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) arr_in_arr_cfg(arena);
}
constexpr auto arr_in_arr_cfg::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(arr_in_arr_cfg, _impl_.arr_) +
          decltype(arr_in_arr_cfg::_impl_.arr_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(arr_in_arr_cfg, _impl_.test_plain_int_arr_) +
          decltype(arr_in_arr_cfg::_impl_.test_plain_int_arr_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(arr_in_arr_cfg, _impl_.test_plain_enum_arr_) +
          decltype(arr_in_arr_cfg::_impl_.test_plain_enum_arr_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(arr_in_arr_cfg, _impl_.test_plain_msg_arr_) +
          decltype(arr_in_arr_cfg::_impl_.test_plain_msg_arr_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(arr_in_arr_cfg, _impl_.test_map_is_) +
          decltype(arr_in_arr_cfg::_impl_.test_map_is_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(arr_in_arr_cfg, _impl_.test_map_is_) +
          decltype(arr_in_arr_cfg::_impl_.test_map_is_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(arr_in_arr_cfg, _impl_.test_map_sm_) +
          decltype(arr_in_arr_cfg::_impl_.test_map_sm_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(arr_in_arr_cfg, _impl_.test_map_sm_) +
          decltype(arr_in_arr_cfg::_impl_.test_map_sm_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(arr_in_arr_cfg), alignof(arr_in_arr_cfg), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&arr_in_arr_cfg::PlacementNew_,
                                 sizeof(arr_in_arr_cfg),
                                 alignof(arr_in_arr_cfg));
  }
}
constexpr auto arr_in_arr_cfg::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_arr_in_arr_cfg_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &arr_in_arr_cfg::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<arr_in_arr_cfg>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &arr_in_arr_cfg::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<arr_in_arr_cfg>(), &arr_in_arr_cfg::ByteSizeLong,
              &arr_in_arr_cfg::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(arr_in_arr_cfg, _impl_._cached_size_),
          false,
      },
      &arr_in_arr_cfg::kDescriptorMethods,
      &descriptor_table_kind_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull arr_in_arr_cfg_class_data_ =
        arr_in_arr_cfg::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL arr_in_arr_cfg::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&arr_in_arr_cfg_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(arr_in_arr_cfg_class_data_.tc_table);
  return arr_in_arr_cfg_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 6, 53, 2>
arr_in_arr_cfg::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(arr_in_arr_cfg, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    6,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    arr_in_arr_cfg_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::arr_in_arr_cfg>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 id = 1 [(.org.xresloader.field_description) = "This is a Key", (.org.xresloader.ue.key_tag) = 1];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(arr_in_arr_cfg, _impl_.id_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(arr_in_arr_cfg, _impl_.id_)}},
    // repeated .arr_in_arr arr = 2 [(.org.xresloader.field_tag) = "server_only"];
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(arr_in_arr_cfg, _impl_.arr_)}},
    // repeated int32 test_plain_int_arr = 3 [(.org.xresloader.field_list_min_size) = "1", (.org.xresloader.field_list_max_size) = "3", (.org.xresloader.field_tag) = "server_only"];
    {::_pbi::TcParser::FastV32P1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(arr_in_arr_cfg, _impl_.test_plain_int_arr_)}},
    // repeated .cost_type test_plain_enum_arr = 4;
    {::_pbi::TcParser::FastV32P1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(arr_in_arr_cfg, _impl_.test_plain_enum_arr_)}},
    // .test_msg_verifier test_plain_msg = 5 [(.org.xresloader.field_separator) = "&"];
    {::_pbi::TcParser::FastMtS1,
     {42, 0, 1, PROTOBUF_FIELD_OFFSET(arr_in_arr_cfg, _impl_.test_plain_msg_)}},
    // repeated .test_msg_verifier test_plain_msg_arr = 6;
    {::_pbi::TcParser::FastMtR1,
     {50, 63, 2, PROTOBUF_FIELD_OFFSET(arr_in_arr_cfg, _impl_.test_plain_msg_arr_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 id = 1 [(.org.xresloader.field_description) = "This is a Key", (.org.xresloader.ue.key_tag) = 1];
    {PROTOBUF_FIELD_OFFSET(arr_in_arr_cfg, _impl_.id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // repeated .arr_in_arr arr = 2 [(.org.xresloader.field_tag) = "server_only"];
    {PROTOBUF_FIELD_OFFSET(arr_in_arr_cfg, _impl_.arr_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated int32 test_plain_int_arr = 3 [(.org.xresloader.field_list_min_size) = "1", (.org.xresloader.field_list_max_size) = "3", (.org.xresloader.field_tag) = "server_only"];
    {PROTOBUF_FIELD_OFFSET(arr_in_arr_cfg, _impl_.test_plain_int_arr_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
    // repeated .cost_type test_plain_enum_arr = 4;
    {PROTOBUF_FIELD_OFFSET(arr_in_arr_cfg, _impl_.test_plain_enum_arr_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
    // .test_msg_verifier test_plain_msg = 5 [(.org.xresloader.field_separator) = "&"];
    {PROTOBUF_FIELD_OFFSET(arr_in_arr_cfg, _impl_.test_plain_msg_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .test_msg_verifier test_plain_msg_arr = 6;
    {PROTOBUF_FIELD_OFFSET(arr_in_arr_cfg, _impl_.test_plain_msg_arr_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // map<int32, string> test_map_is = 7;
    {PROTOBUF_FIELD_OFFSET(arr_in_arr_cfg, _impl_.test_map_is_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<string, .dep2_cfg> test_map_sm = 8 [(.org.xresloader.field_separator) = "|"];
    {PROTOBUF_FIELD_OFFSET(arr_in_arr_cfg, _impl_.test_map_sm_), -1, 4,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::arr_in_arr>()},
      {::_pbi::TcParser::GetTable<::test_msg_verifier>()},
      {::_pbi::TcParser::GetTable<::test_msg_verifier>()},
      {::_pbi::TcParser::GetMapAuxInfo(1, 0, 0,
                                       5, 9,
                                       0)},
      {::_pbi::TcParser::GetMapAuxInfo(1, 0, 0,
                                       9, 11,
                                       0)},
      {::_pbi::TcParser::GetTable<::dep2_cfg>()},
  }},
  {{
    "\16\0\0\0\0\0\0\13\13\0\0\0\0\0\0\0"
    "arr_in_arr_cfg"
    "test_map_is"
    "test_map_sm"
  }},
};
PROTOBUF_NOINLINE void arr_in_arr_cfg::Clear() {
// @@protoc_insertion_point(message_clear_start:arr_in_arr_cfg)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.arr_.Clear();
  _impl_.test_plain_int_arr_.Clear();
  _impl_.test_plain_enum_arr_.Clear();
  _impl_.test_plain_msg_arr_.Clear();
  _impl_.test_map_is_.Clear();
  _impl_.test_map_sm_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.test_plain_msg_ != nullptr);
    _impl_.test_plain_msg_->Clear();
  }
  _impl_.id_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL arr_in_arr_cfg::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const arr_in_arr_cfg& this_ = static_cast<const arr_in_arr_cfg&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL arr_in_arr_cfg::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const arr_in_arr_cfg& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:arr_in_arr_cfg)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 id = 1 [(.org.xresloader.field_description) = "This is a Key", (.org.xresloader.ue.key_tag) = 1];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_id() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          1, this_._internal_id(), target);
    }
  }

  // repeated .arr_in_arr arr = 2 [(.org.xresloader.field_tag) = "server_only"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_arr_size());
       i < n; i++) {
    const auto& repfield = this_._internal_arr().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated int32 test_plain_int_arr = 3 [(.org.xresloader.field_list_min_size) = "1", (.org.xresloader.field_list_max_size) = "3", (.org.xresloader.field_tag) = "server_only"];
  {
    int byte_size = this_._impl_._test_plain_int_arr_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          3, this_._internal_test_plain_int_arr(), byte_size, target);
    }
  }

  // repeated .cost_type test_plain_enum_arr = 4;
  {
    std::size_t byte_size =
                                      this_._impl_._test_plain_enum_arr_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          4, this_._internal_test_plain_enum_arr(), byte_size, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .test_msg_verifier test_plain_msg = 5 [(.org.xresloader.field_separator) = "&"];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *this_._impl_.test_plain_msg_, this_._impl_.test_plain_msg_->GetCachedSize(), target,
        stream);
  }

  // repeated .test_msg_verifier test_plain_msg_arr = 6;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_test_plain_msg_arr_size());
       i < n; i++) {
    const auto& repfield = this_._internal_test_plain_msg_arr().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            6, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // map<int32, string> test_map_is = 7;
  if (!this_._internal_test_map_is().empty()) {
    using MapType = ::google::protobuf::Map<::int32_t, std::string>;
    using WireHelper = _pbi::MapEntryFuncs<::int32_t, std::string,
                                   _pbi::WireFormatLite::TYPE_INT32,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = this_._internal_test_map_is();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterFlat<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            7, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "arr_in_arr_cfg.test_map_is");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            7, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "arr_in_arr_cfg.test_map_is");
      }
    }
  }

  // map<string, .dep2_cfg> test_map_sm = 8 [(.org.xresloader.field_separator) = "|"];
  if (!this_._internal_test_map_sm().empty()) {
    using MapType = ::google::protobuf::Map<std::string, ::dep2_cfg>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, ::dep2_cfg,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_MESSAGE>;
    const auto& field = this_._internal_test_map_sm();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            8, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "arr_in_arr_cfg.test_map_sm");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            8, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "arr_in_arr_cfg.test_map_sm");
      }
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:arr_in_arr_cfg)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t arr_in_arr_cfg::ByteSizeLong(const MessageLite& base) {
  const arr_in_arr_cfg& this_ = static_cast<const arr_in_arr_cfg&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t arr_in_arr_cfg::ByteSizeLong() const {
  const arr_in_arr_cfg& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:arr_in_arr_cfg)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .arr_in_arr arr = 2 [(.org.xresloader.field_tag) = "server_only"];
    {
      total_size += 1UL * this_._internal_arr_size();
      for (const auto& msg : this_._internal_arr()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated int32 test_plain_int_arr = 3 [(.org.xresloader.field_list_min_size) = "1", (.org.xresloader.field_list_max_size) = "3", (.org.xresloader.field_tag) = "server_only"];
    {
      total_size +=
          ::_pbi::WireFormatLite::Int32SizeWithPackedTagSize(
              this_._internal_test_plain_int_arr(), 1,
              this_._impl_._test_plain_int_arr_cached_byte_size_);
    }
    // repeated .cost_type test_plain_enum_arr = 4;
    {
      total_size += ::_pbi::WireFormatLite::EnumSizeWithPackedTagSize(
          this_._internal_test_plain_enum_arr(), 1, this_._impl_._test_plain_enum_arr_cached_byte_size_);
    }
    // repeated .test_msg_verifier test_plain_msg_arr = 6;
    {
      total_size += 1UL * this_._internal_test_plain_msg_arr_size();
      for (const auto& msg : this_._internal_test_plain_msg_arr()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // map<int32, string> test_map_is = 7;
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_test_map_is_size());
      for (const auto& entry : this_._internal_test_map_is()) {
        total_size += _pbi::MapEntryFuncs<::int32_t, std::string,
                                       _pbi::WireFormatLite::TYPE_INT32,
                                       _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
      }
    }
    // map<string, .dep2_cfg> test_map_sm = 8 [(.org.xresloader.field_separator) = "|"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_test_map_sm_size());
      for (const auto& entry : this_._internal_test_map_sm()) {
        total_size += _pbi::MapEntryFuncs<std::string, ::dep2_cfg,
                                       _pbi::WireFormatLite::TYPE_STRING,
                                       _pbi::WireFormatLite::TYPE_MESSAGE>::ByteSizeLong(entry.first, entry.second);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // .test_msg_verifier test_plain_msg = 5 [(.org.xresloader.field_separator) = "&"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.test_plain_msg_);
    }
    // uint32 id = 1 [(.org.xresloader.field_description) = "This is a Key", (.org.xresloader.ue.key_tag) = 1];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_id() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_id());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void arr_in_arr_cfg::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<arr_in_arr_cfg*>(&to_msg);
  auto& from = static_cast<const arr_in_arr_cfg&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:arr_in_arr_cfg)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_arr()->MergeFrom(
      from._internal_arr());
  _this->_internal_mutable_test_plain_int_arr()->MergeFrom(from._internal_test_plain_int_arr());
  _this->_internal_mutable_test_plain_enum_arr()->MergeFrom(from._internal_test_plain_enum_arr());
  _this->_internal_mutable_test_plain_msg_arr()->MergeFrom(
      from._internal_test_plain_msg_arr());
  _this->_impl_.test_map_is_.MergeFrom(from._impl_.test_map_is_);
  _this->_impl_.test_map_sm_.MergeFrom(from._impl_.test_map_sm_);
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.test_plain_msg_ != nullptr);
      if (_this->_impl_.test_plain_msg_ == nullptr) {
        _this->_impl_.test_plain_msg_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.test_plain_msg_);
      } else {
        _this->_impl_.test_plain_msg_->MergeFrom(*from._impl_.test_plain_msg_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_id() != 0) {
        _this->_impl_.id_ = from._impl_.id_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void arr_in_arr_cfg::CopyFrom(const arr_in_arr_cfg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:arr_in_arr_cfg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void arr_in_arr_cfg::InternalSwap(arr_in_arr_cfg* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.arr_.InternalSwap(&other->_impl_.arr_);
  _impl_.test_plain_int_arr_.InternalSwap(&other->_impl_.test_plain_int_arr_);
  _impl_.test_plain_enum_arr_.InternalSwap(&other->_impl_.test_plain_enum_arr_);
  _impl_.test_plain_msg_arr_.InternalSwap(&other->_impl_.test_plain_msg_arr_);
  _impl_.test_map_is_.InternalSwap(&other->_impl_.test_map_is_);
  _impl_.test_map_sm_.InternalSwap(&other->_impl_.test_map_sm_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(arr_in_arr_cfg, _impl_.id_)
      + sizeof(arr_in_arr_cfg::_impl_.id_)
      - PROTOBUF_FIELD_OFFSET(arr_in_arr_cfg, _impl_.test_plain_msg_)>(
          reinterpret_cast<char*>(&_impl_.test_plain_msg_),
          reinterpret_cast<char*>(&other->_impl_.test_plain_msg_));
}

::google::protobuf::Metadata arr_in_arr_cfg::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class event_reward_item::_Internal {
 public:
  using HasBits =
      decltype(std::declval<event_reward_item>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(event_reward_item, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::event_reward_item, _impl_._oneof_case_);
};

event_reward_item::event_reward_item(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, event_reward_item_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:event_reward_item)
}
PROTOBUF_NDEBUG_INLINE event_reward_item::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::event_reward_item& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        nested_{},
        _oneof_case_{from._oneof_case_[0]} {}

event_reward_item::event_reward_item(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const event_reward_item& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, event_reward_item_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  event_reward_item* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, item_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, item_id_),
           offsetof(Impl_, item_count_) -
               offsetof(Impl_, item_id_) +
               sizeof(Impl_::item_count_));
  switch (nested_case()) {
    case NESTED_NOT_SET:
      break;
      case kNestedNote:
        new (&_impl_.nested_.nested_note_) decltype(_impl_.nested_.nested_note_){arena, from._impl_.nested_.nested_note_};
        break;
      case kNestedEnumType:
        _impl_.nested_.nested_enum_type_ = from._impl_.nested_.nested_enum_type_;
        break;
  }

  // @@protoc_insertion_point(copy_constructor:event_reward_item)
}
PROTOBUF_NDEBUG_INLINE event_reward_item::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        nested_{},
        _oneof_case_{} {}

inline void event_reward_item::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, item_id_),
           0,
           offsetof(Impl_, item_count_) -
               offsetof(Impl_, item_id_) +
               sizeof(Impl_::item_count_));
}
event_reward_item::~event_reward_item() {
  // @@protoc_insertion_point(destructor:event_reward_item)
  SharedDtor(*this);
}
inline void event_reward_item::SharedDtor(MessageLite& self) {
  event_reward_item& this_ = static_cast<event_reward_item&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_nested()) {
    this_.clear_nested();
  }
  this_._impl_.~Impl_();
}

void event_reward_item::clear_nested() {
// @@protoc_insertion_point(one_of_clear_start:event_reward_item)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (nested_case()) {
    case kNestedNote: {
      _impl_.nested_.nested_note_.Destroy();
      break;
    }
    case kNestedEnumType: {
      // No need to clear
      break;
    }
    case NESTED_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = NESTED_NOT_SET;
}


inline void* PROTOBUF_NONNULL event_reward_item::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) event_reward_item(arena);
}
constexpr auto event_reward_item::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(event_reward_item),
                                            alignof(event_reward_item));
}
constexpr auto event_reward_item::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_event_reward_item_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &event_reward_item::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<event_reward_item>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &event_reward_item::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<event_reward_item>(), &event_reward_item::ByteSizeLong,
              &event_reward_item::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(event_reward_item, _impl_._cached_size_),
          false,
      },
      &event_reward_item::kDescriptorMethods,
      &descriptor_table_kind_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull event_reward_item_class_data_ =
        event_reward_item::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL event_reward_item::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&event_reward_item_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(event_reward_item_class_data_.tc_table);
  return event_reward_item_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 4, 0, 37, 2>
event_reward_item::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(event_reward_item, _impl_._has_bits_),
    0, // no _extensions_
    12, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294964220,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    event_reward_item_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::event_reward_item>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 item_count = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(event_reward_item, _impl_.item_count_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(event_reward_item, _impl_.item_count_)}},
    // uint32 item_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(event_reward_item, _impl_.item_id_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(event_reward_item, _impl_.item_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 item_id = 1;
    {PROTOBUF_FIELD_OFFSET(event_reward_item, _impl_.item_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 item_count = 2;
    {PROTOBUF_FIELD_OFFSET(event_reward_item, _impl_.item_count_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // string nested_note = 11 [(.org.xresloader.field_alias) = "\346\217\217\350\277\260\346\226\207\346\234\254"];
    {PROTOBUF_FIELD_OFFSET(event_reward_item, _impl_.nested_.nested_note_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .cost_type nested_enum_type = 12 [(.org.xresloader.field_alias) = "\350\264\247\345\270\201\347\261\273\345\236\213"];
    {PROTOBUF_FIELD_OFFSET(event_reward_item, _impl_.nested_.nested_enum_type_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
    "\21\0\0\13\0\0\0\0"
    "event_reward_item"
    "nested_note"
  }},
};
PROTOBUF_NOINLINE void event_reward_item::Clear() {
// @@protoc_insertion_point(message_clear_start:event_reward_item)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    ::memset(&_impl_.item_id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.item_count_) -
        reinterpret_cast<char*>(&_impl_.item_id_)) + sizeof(_impl_.item_count_));
  }
  clear_nested();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL event_reward_item::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const event_reward_item& this_ = static_cast<const event_reward_item&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL event_reward_item::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const event_reward_item& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:event_reward_item)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 item_id = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_item_id() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          1, this_._internal_item_id(), target);
    }
  }

  // uint32 item_count = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_item_count() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          2, this_._internal_item_count(), target);
    }
  }

  switch (this_.nested_case()) {
    case kNestedNote: {
      const std::string& _s = this_._internal_nested_note();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "event_reward_item.nested_note");
      target = stream->WriteStringMaybeAliased(11, _s, target);
      break;
    }
    case kNestedEnumType: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          12, this_._internal_nested_enum_type(), target);
      break;
    }
    default:
      break;
  }
  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:event_reward_item)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t event_reward_item::ByteSizeLong(const MessageLite& base) {
  const event_reward_item& this_ = static_cast<const event_reward_item&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t event_reward_item::ByteSizeLong() const {
  const event_reward_item& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:event_reward_item)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // uint32 item_id = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_item_id() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_item_id());
      }
    }
    // uint32 item_count = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_item_count() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_item_count());
      }
    }
  }
  switch (this_.nested_case()) {
    // string nested_note = 11 [(.org.xresloader.field_alias) = "\346\217\217\350\277\260\346\226\207\346\234\254"];
    case kNestedNote: {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_nested_note());
      break;
    }
    // .cost_type nested_enum_type = 12 [(.org.xresloader.field_alias) = "\350\264\247\345\270\201\347\261\273\345\236\213"];
    case kNestedEnumType: {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this_._internal_nested_enum_type());
      break;
    }
    case NESTED_NOT_SET: {
      break;
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void event_reward_item::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<event_reward_item*>(&to_msg);
  auto& from = static_cast<const event_reward_item&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:event_reward_item)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (from._internal_item_id() != 0) {
        _this->_impl_.item_id_ = from._impl_.item_id_;
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_item_count() != 0) {
        _this->_impl_.item_count_ = from._impl_.item_count_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_nested();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kNestedNote: {
        if (oneof_needs_init) {
          _this->_impl_.nested_.nested_note_.InitDefault();
        }
        _this->_impl_.nested_.nested_note_.Set(from._internal_nested_note(), arena);
        break;
      }
      case kNestedEnumType: {
        _this->_impl_.nested_.nested_enum_type_ = from._impl_.nested_.nested_enum_type_;
        break;
      }
      case NESTED_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void event_reward_item::CopyFrom(const event_reward_item& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:event_reward_item)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void event_reward_item::InternalSwap(event_reward_item* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(event_reward_item, _impl_.item_count_)
      + sizeof(event_reward_item::_impl_.item_count_)
      - PROTOBUF_FIELD_OFFSET(event_reward_item, _impl_.item_id_)>(
          reinterpret_cast<char*>(&_impl_.item_id_),
          reinterpret_cast<char*>(&other->_impl_.item_id_));
  swap(_impl_.nested_, other->_impl_.nested_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata event_reward_item::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class event_rule_item::_Internal {
 public:
  using HasBits =
      decltype(std::declval<event_rule_item>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(event_rule_item, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::event_rule_item, _impl_._oneof_case_);
};

event_rule_item::event_rule_item(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, event_rule_item_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:event_rule_item)
}
PROTOBUF_NDEBUG_INLINE event_rule_item::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::event_rule_item& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        nested_{},
        _oneof_case_{from._oneof_case_[0]} {}

event_rule_item::event_rule_item(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const event_rule_item& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, event_rule_item_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  event_rule_item* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, rule_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, rule_id_),
           offsetof(Impl_, rule_param_) -
               offsetof(Impl_, rule_id_) +
               sizeof(Impl_::rule_param_));
  switch (nested_case()) {
    case NESTED_NOT_SET:
      break;
      case kNestedNote:
        new (&_impl_.nested_.nested_note_) decltype(_impl_.nested_.nested_note_){arena, from._impl_.nested_.nested_note_};
        break;
      case kNestedEnumType:
        _impl_.nested_.nested_enum_type_ = from._impl_.nested_.nested_enum_type_;
        break;
  }

  // @@protoc_insertion_point(copy_constructor:event_rule_item)
}
PROTOBUF_NDEBUG_INLINE event_rule_item::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        nested_{},
        _oneof_case_{} {}

inline void event_rule_item::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, rule_id_),
           0,
           offsetof(Impl_, rule_param_) -
               offsetof(Impl_, rule_id_) +
               sizeof(Impl_::rule_param_));
}
event_rule_item::~event_rule_item() {
  // @@protoc_insertion_point(destructor:event_rule_item)
  SharedDtor(*this);
}
inline void event_rule_item::SharedDtor(MessageLite& self) {
  event_rule_item& this_ = static_cast<event_rule_item&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_nested()) {
    this_.clear_nested();
  }
  this_._impl_.~Impl_();
}

void event_rule_item::clear_nested() {
// @@protoc_insertion_point(one_of_clear_start:event_rule_item)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (nested_case()) {
    case kNestedNote: {
      _impl_.nested_.nested_note_.Destroy();
      break;
    }
    case kNestedEnumType: {
      // No need to clear
      break;
    }
    case NESTED_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = NESTED_NOT_SET;
}


inline void* PROTOBUF_NONNULL event_rule_item::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) event_rule_item(arena);
}
constexpr auto event_rule_item::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(event_rule_item),
                                            alignof(event_rule_item));
}
constexpr auto event_rule_item::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_event_rule_item_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &event_rule_item::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<event_rule_item>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &event_rule_item::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<event_rule_item>(), &event_rule_item::ByteSizeLong,
              &event_rule_item::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(event_rule_item, _impl_._cached_size_),
          false,
      },
      &event_rule_item::kDescriptorMethods,
      &descriptor_table_kind_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull event_rule_item_class_data_ =
        event_rule_item::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL event_rule_item::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&event_rule_item_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(event_rule_item_class_data_.tc_table);
  return event_rule_item_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 4, 0, 35, 2>
event_rule_item::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(event_rule_item, _impl_._has_bits_),
    0, // no _extensions_
    12, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294964220,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    event_rule_item_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::event_rule_item>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 rule_param = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(event_rule_item, _impl_.rule_param_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(event_rule_item, _impl_.rule_param_)}},
    // uint32 rule_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(event_rule_item, _impl_.rule_id_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(event_rule_item, _impl_.rule_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 rule_id = 1;
    {PROTOBUF_FIELD_OFFSET(event_rule_item, _impl_.rule_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 rule_param = 2;
    {PROTOBUF_FIELD_OFFSET(event_rule_item, _impl_.rule_param_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // string nested_note = 11 [(.org.xresloader.field_alias) = "\346\217\217\350\277\260\346\226\207\346\234\254"];
    {PROTOBUF_FIELD_OFFSET(event_rule_item, _impl_.nested_.nested_note_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .cost_type nested_enum_type = 12 [(.org.xresloader.field_alias) = "\350\264\247\345\270\201\347\261\273\345\236\213"];
    {PROTOBUF_FIELD_OFFSET(event_rule_item, _impl_.nested_.nested_enum_type_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
    "\17\0\0\13\0\0\0\0"
    "event_rule_item"
    "nested_note"
  }},
};
PROTOBUF_NOINLINE void event_rule_item::Clear() {
// @@protoc_insertion_point(message_clear_start:event_rule_item)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    ::memset(&_impl_.rule_id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.rule_param_) -
        reinterpret_cast<char*>(&_impl_.rule_id_)) + sizeof(_impl_.rule_param_));
  }
  clear_nested();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL event_rule_item::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const event_rule_item& this_ = static_cast<const event_rule_item&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL event_rule_item::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const event_rule_item& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:event_rule_item)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 rule_id = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_rule_id() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          1, this_._internal_rule_id(), target);
    }
  }

  // uint32 rule_param = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_rule_param() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          2, this_._internal_rule_param(), target);
    }
  }

  switch (this_.nested_case()) {
    case kNestedNote: {
      const std::string& _s = this_._internal_nested_note();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "event_rule_item.nested_note");
      target = stream->WriteStringMaybeAliased(11, _s, target);
      break;
    }
    case kNestedEnumType: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          12, this_._internal_nested_enum_type(), target);
      break;
    }
    default:
      break;
  }
  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:event_rule_item)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t event_rule_item::ByteSizeLong(const MessageLite& base) {
  const event_rule_item& this_ = static_cast<const event_rule_item&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t event_rule_item::ByteSizeLong() const {
  const event_rule_item& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:event_rule_item)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // uint32 rule_id = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_rule_id() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_rule_id());
      }
    }
    // uint32 rule_param = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_rule_param() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_rule_param());
      }
    }
  }
  switch (this_.nested_case()) {
    // string nested_note = 11 [(.org.xresloader.field_alias) = "\346\217\217\350\277\260\346\226\207\346\234\254"];
    case kNestedNote: {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_nested_note());
      break;
    }
    // .cost_type nested_enum_type = 12 [(.org.xresloader.field_alias) = "\350\264\247\345\270\201\347\261\273\345\236\213"];
    case kNestedEnumType: {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this_._internal_nested_enum_type());
      break;
    }
    case NESTED_NOT_SET: {
      break;
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void event_rule_item::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<event_rule_item*>(&to_msg);
  auto& from = static_cast<const event_rule_item&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:event_rule_item)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (from._internal_rule_id() != 0) {
        _this->_impl_.rule_id_ = from._impl_.rule_id_;
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_rule_param() != 0) {
        _this->_impl_.rule_param_ = from._impl_.rule_param_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_nested();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kNestedNote: {
        if (oneof_needs_init) {
          _this->_impl_.nested_.nested_note_.InitDefault();
        }
        _this->_impl_.nested_.nested_note_.Set(from._internal_nested_note(), arena);
        break;
      }
      case kNestedEnumType: {
        _this->_impl_.nested_.nested_enum_type_ = from._impl_.nested_.nested_enum_type_;
        break;
      }
      case NESTED_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void event_rule_item::CopyFrom(const event_rule_item& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:event_rule_item)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void event_rule_item::InternalSwap(event_rule_item* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(event_rule_item, _impl_.rule_param_)
      + sizeof(event_rule_item::_impl_.rule_param_)
      - PROTOBUF_FIELD_OFFSET(event_rule_item, _impl_.rule_id_)>(
          reinterpret_cast<char*>(&_impl_.rule_id_),
          reinterpret_cast<char*>(&other->_impl_.rule_id_));
  swap(_impl_.nested_, other->_impl_.nested_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata event_rule_item::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class event_cfg::_Internal {
 public:
  using HasBits =
      decltype(std::declval<event_cfg>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(event_cfg, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::event_cfg, _impl_._oneof_case_);
};

void event_cfg::set_allocated_item(::event_reward_item* PROTOBUF_NULLABLE item) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_reward();
  if (item) {
    ::google::protobuf::Arena* submessage_arena = item->GetArena();
    if (message_arena != submessage_arena) {
      item = ::google::protobuf::internal::GetOwnedMessage(message_arena, item, submessage_arena);
    }
    set_has_item();
    _impl_.reward_.item_ = item;
  }
  // @@protoc_insertion_point(field_set_allocated:event_cfg.item)
}
event_cfg::event_cfg(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, event_cfg_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:event_cfg)
}
PROTOBUF_NDEBUG_INLINE event_cfg::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::event_cfg& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        test_arr_{visibility, arena, from.test_arr_},
        test_empty_arr_{visibility, arena, from.test_empty_arr_},
        reward_{},
        unlock_type_{},
        _oneof_case_{from._oneof_case_[0], from._oneof_case_[1]} {}

event_cfg::event_cfg(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const event_cfg& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, event_cfg_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  event_cfg* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.rule_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.rule_)
                : nullptr;
  _impl_.specify_field_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.specify_field_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, id_),
           offsetof(Impl_, process_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::process_));
  switch (reward_case()) {
    case REWARD_NOT_SET:
      break;
      case kItem:
        _impl_.reward_.item_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.reward_.item_);
        break;
      case kUserExp:
        _impl_.reward_.user_exp_ = from._impl_.reward_.user_exp_;
        break;
      case kNote:
        new (&_impl_.reward_.note_) decltype(_impl_.reward_.note_){arena, from._impl_.reward_.note_};
        break;
      case kEnumType:
        _impl_.reward_.enum_type_ = from._impl_.reward_.enum_type_;
        break;
  }
  switch (unlock_type_case()) {
    case UNLOCK_TYPE_NOT_SET:
      break;
      case kUserLevel:
        _impl_.unlock_type_.user_level_ = from._impl_.unlock_type_.user_level_;
        break;
  }

  // @@protoc_insertion_point(copy_constructor:event_cfg)
}
PROTOBUF_NDEBUG_INLINE event_cfg::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        test_arr_{visibility, arena},
        test_empty_arr_{visibility, arena},
        reward_{},
        unlock_type_{},
        _oneof_case_{} {}

inline void event_cfg::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, rule_),
           0,
           offsetof(Impl_, process_) -
               offsetof(Impl_, rule_) +
               sizeof(Impl_::process_));
}
event_cfg::~event_cfg() {
  // @@protoc_insertion_point(destructor:event_cfg)
  SharedDtor(*this);
}
inline void event_cfg::SharedDtor(MessageLite& self) {
  event_cfg& this_ = static_cast<event_cfg&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.rule_;
  delete this_._impl_.specify_field_;
  if (this_.has_reward()) {
    this_.clear_reward();
  }
  if (this_.has_unlock_type()) {
    this_.clear_unlock_type();
  }
  this_._impl_.~Impl_();
}

void event_cfg::clear_reward() {
// @@protoc_insertion_point(one_of_clear_start:event_cfg)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (reward_case()) {
    case kItem: {
      if (GetArena() == nullptr) {
        delete _impl_.reward_.item_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.reward_.item_);
      }
      break;
    }
    case kUserExp: {
      // No need to clear
      break;
    }
    case kNote: {
      _impl_.reward_.note_.Destroy();
      break;
    }
    case kEnumType: {
      // No need to clear
      break;
    }
    case REWARD_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = REWARD_NOT_SET;
}

void event_cfg::clear_unlock_type() {
// @@protoc_insertion_point(one_of_clear_start:event_cfg)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (unlock_type_case()) {
    case kUserLevel: {
      // No need to clear
      break;
    }
    case UNLOCK_TYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[1] = UNLOCK_TYPE_NOT_SET;
}


inline void* PROTOBUF_NONNULL event_cfg::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) event_cfg(arena);
}
constexpr auto event_cfg::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(event_cfg, _impl_.test_arr_) +
          decltype(event_cfg::_impl_.test_arr_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(event_cfg, _impl_.test_empty_arr_) +
          decltype(event_cfg::_impl_.test_empty_arr_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(event_cfg), alignof(event_cfg), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&event_cfg::PlacementNew_,
                                 sizeof(event_cfg),
                                 alignof(event_cfg));
  }
}
constexpr auto event_cfg::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_event_cfg_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &event_cfg::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<event_cfg>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &event_cfg::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<event_cfg>(), &event_cfg::ByteSizeLong,
              &event_cfg::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(event_cfg, _impl_._cached_size_),
          false,
      },
      &event_cfg::kDescriptorMethods,
      &descriptor_table_kind_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull event_cfg_class_data_ =
        event_cfg::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL event_cfg::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&event_cfg_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(event_cfg_class_data_.tc_table);
  return event_cfg_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 11, 5, 30, 11>
event_cfg::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(event_cfg, _impl_._has_bits_),
    0, // no _extensions_
    92, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294951836,  // skipmap
    offsetof(decltype(_table_), field_entries),
    11,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    event_cfg_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::event_cfg>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 id = 1 [(.org.xresloader.validator) = "custom_rule4", (.org.xresloader.field_unique_tag) = "unique_tag", (.org.xresloader.field_not_null) = true, (.org.xresloader.ue.key_tag) = 100];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(event_cfg, _impl_.id_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(event_cfg, _impl_.id_)}},
    // uint32 process = 2 [(.org.xresloader.field_unique_tag) = "unique_tag", (.org.xresloader.field_not_null) = true, (.org.xresloader.ue.key_tag) = 1];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(event_cfg, _impl_.process_), 3>(),
     {16, 3, 0, PROTOBUF_FIELD_OFFSET(event_cfg, _impl_.process_)}},
    // repeated .event_rule_item test_arr = 91 [(.org.xresloader.field_separator) = ";"];
    {::_pbi::TcParser::FastMtR2,
     {1498, 63, 3, PROTOBUF_FIELD_OFFSET(event_cfg, _impl_.test_arr_)}},
    // repeated .event_rule_item test_empty_arr = 92 [(.org.xresloader.field_separator) = ";"];
    {::_pbi::TcParser::FastMtR2,
     {1506, 63, 4, PROTOBUF_FIELD_OFFSET(event_cfg, _impl_.test_empty_arr_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // .event_rule_item rule = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 0, 0, PROTOBUF_FIELD_OFFSET(event_cfg, _impl_.rule_)}},
    // .event_rule_item specify_field = 7 [(.org.xresloader.field_tag) = "server_only"];
    {::_pbi::TcParser::FastMtS1,
     {58, 1, 1, PROTOBUF_FIELD_OFFSET(event_cfg, _impl_.specify_field_)}},
  }}, {{
    51, 0, 3,
    65534, 8,
    65535, 9,
    64767, 9,
    65535, 65535
  }}, {{
    // uint32 id = 1 [(.org.xresloader.validator) = "custom_rule4", (.org.xresloader.field_unique_tag) = "unique_tag", (.org.xresloader.field_not_null) = true, (.org.xresloader.ue.key_tag) = 100];
    {PROTOBUF_FIELD_OFFSET(event_cfg, _impl_.id_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 process = 2 [(.org.xresloader.field_unique_tag) = "unique_tag", (.org.xresloader.field_not_null) = true, (.org.xresloader.ue.key_tag) = 1];
    {PROTOBUF_FIELD_OFFSET(event_cfg, _impl_.process_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // .event_rule_item rule = 6;
    {PROTOBUF_FIELD_OFFSET(event_cfg, _impl_.rule_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .event_rule_item specify_field = 7 [(.org.xresloader.field_tag) = "server_only"];
    {PROTOBUF_FIELD_OFFSET(event_cfg, _impl_.specify_field_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .event_reward_item item = 11 [(.org.xresloader.field_alias) = "\345\245\226\345\212\261\351\201\223\345\205\267"];
    {PROTOBUF_FIELD_OFFSET(event_cfg, _impl_.reward_.item_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // int64 user_exp = 12 [(.org.xresloader.field_alias) = "\345\245\226\345\212\261\347\273\217\351\252\214"];
    {PROTOBUF_FIELD_OFFSET(event_cfg, _impl_.reward_.user_exp_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kInt64)},
    // string note = 13 [(.org.xresloader.field_alias) = "\346\217\217\350\277\260\346\226\207\346\234\254"];
    {PROTOBUF_FIELD_OFFSET(event_cfg, _impl_.reward_.note_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .cost_type enum_type = 14 [(.org.xresloader.field_alias) = "\350\264\247\345\270\201\347\261\273\345\236\213"];
    {PROTOBUF_FIELD_OFFSET(event_cfg, _impl_.reward_.enum_type_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kOpenEnum)},
    // uint32 user_level = 51 [(.org.xresloader.field_alias) = "\347\216\251\345\256\266\347\255\211\347\272\247"];
    {PROTOBUF_FIELD_OFFSET(event_cfg, _impl_.unlock_type_.user_level_), _Internal::kOneofCaseOffset + 4, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUInt32)},
    // repeated .event_rule_item test_arr = 91 [(.org.xresloader.field_separator) = ";"];
    {PROTOBUF_FIELD_OFFSET(event_cfg, _impl_.test_arr_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .event_rule_item test_empty_arr = 92 [(.org.xresloader.field_separator) = ";"];
    {PROTOBUF_FIELD_OFFSET(event_cfg, _impl_.test_empty_arr_), -1, 4,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::event_rule_item>()},
      {::_pbi::TcParser::GetTable<::event_rule_item>()},
      {::_pbi::TcParser::GetTable<::event_reward_item>()},
      {::_pbi::TcParser::GetTable<::event_rule_item>()},
      {::_pbi::TcParser::GetTable<::event_rule_item>()},
  }},
  {{
    "\11\0\0\0\0\0\0\4\0\0\0\0\0\0\0\0"
    "event_cfg"
    "note"
  }},
};
PROTOBUF_NOINLINE void event_cfg::Clear() {
// @@protoc_insertion_point(message_clear_start:event_cfg)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.test_arr_.Clear();
  _impl_.test_empty_arr_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.rule_ != nullptr);
      _impl_.rule_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.specify_field_ != nullptr);
      _impl_.specify_field_->Clear();
    }
  }
  if ((cached_has_bits & 0x0000000cu) != 0) {
    ::memset(&_impl_.id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.process_) -
        reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.process_));
  }
  clear_reward();
  clear_unlock_type();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL event_cfg::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const event_cfg& this_ = static_cast<const event_cfg&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL event_cfg::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const event_cfg& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:event_cfg)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 id = 1 [(.org.xresloader.validator) = "custom_rule4", (.org.xresloader.field_unique_tag) = "unique_tag", (.org.xresloader.field_not_null) = true, (.org.xresloader.ue.key_tag) = 100];
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_id() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          1, this_._internal_id(), target);
    }
  }

  // uint32 process = 2 [(.org.xresloader.field_unique_tag) = "unique_tag", (.org.xresloader.field_not_null) = true, (.org.xresloader.ue.key_tag) = 1];
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (this_._internal_process() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          2, this_._internal_process(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .event_rule_item rule = 6;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, *this_._impl_.rule_, this_._impl_.rule_->GetCachedSize(), target,
        stream);
  }

  // .event_rule_item specify_field = 7 [(.org.xresloader.field_tag) = "server_only"];
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        7, *this_._impl_.specify_field_, this_._impl_.specify_field_->GetCachedSize(), target,
        stream);
  }

  switch (this_.reward_case()) {
    case kItem: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          11, *this_._impl_.reward_.item_, this_._impl_.reward_.item_->GetCachedSize(), target,
          stream);
      break;
    }
    case kUserExp: {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<12>(
              stream, this_._internal_user_exp(), target);
      break;
    }
    case kNote: {
      const std::string& _s = this_._internal_note();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "event_cfg.note");
      target = stream->WriteStringMaybeAliased(13, _s, target);
      break;
    }
    case kEnumType: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          14, this_._internal_enum_type(), target);
      break;
    }
    default:
      break;
  }
  // uint32 user_level = 51 [(.org.xresloader.field_alias) = "\347\216\251\345\256\266\347\255\211\347\272\247"];
  if (this_.unlock_type_case() == kUserLevel) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        51, this_._internal_user_level(), target);
  }

  // repeated .event_rule_item test_arr = 91 [(.org.xresloader.field_separator) = ";"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_test_arr_size());
       i < n; i++) {
    const auto& repfield = this_._internal_test_arr().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            91, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .event_rule_item test_empty_arr = 92 [(.org.xresloader.field_separator) = ";"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_test_empty_arr_size());
       i < n; i++) {
    const auto& repfield = this_._internal_test_empty_arr().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            92, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:event_cfg)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t event_cfg::ByteSizeLong(const MessageLite& base) {
  const event_cfg& this_ = static_cast<const event_cfg&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t event_cfg::ByteSizeLong() const {
  const event_cfg& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:event_cfg)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .event_rule_item test_arr = 91 [(.org.xresloader.field_separator) = ";"];
    {
      total_size += 2UL * this_._internal_test_arr_size();
      for (const auto& msg : this_._internal_test_arr()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .event_rule_item test_empty_arr = 92 [(.org.xresloader.field_separator) = ";"];
    {
      total_size += 2UL * this_._internal_test_empty_arr_size();
      for (const auto& msg : this_._internal_test_empty_arr()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    // .event_rule_item rule = 6;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.rule_);
    }
    // .event_rule_item specify_field = 7 [(.org.xresloader.field_tag) = "server_only"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.specify_field_);
    }
    // uint32 id = 1 [(.org.xresloader.validator) = "custom_rule4", (.org.xresloader.field_unique_tag) = "unique_tag", (.org.xresloader.field_not_null) = true, (.org.xresloader.ue.key_tag) = 100];
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_id() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_id());
      }
    }
    // uint32 process = 2 [(.org.xresloader.field_unique_tag) = "unique_tag", (.org.xresloader.field_not_null) = true, (.org.xresloader.ue.key_tag) = 1];
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_process() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_process());
      }
    }
  }
  switch (this_.reward_case()) {
    // .event_reward_item item = 11 [(.org.xresloader.field_alias) = "\345\245\226\345\212\261\351\201\223\345\205\267"];
    case kItem: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.reward_.item_);
      break;
    }
    // int64 user_exp = 12 [(.org.xresloader.field_alias) = "\345\245\226\345\212\261\347\273\217\351\252\214"];
    case kUserExp: {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this_._internal_user_exp());
      break;
    }
    // string note = 13 [(.org.xresloader.field_alias) = "\346\217\217\350\277\260\346\226\207\346\234\254"];
    case kNote: {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_note());
      break;
    }
    // .cost_type enum_type = 14 [(.org.xresloader.field_alias) = "\350\264\247\345\270\201\347\261\273\345\236\213"];
    case kEnumType: {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this_._internal_enum_type());
      break;
    }
    case REWARD_NOT_SET: {
      break;
    }
  }
  switch (this_.unlock_type_case()) {
    // uint32 user_level = 51 [(.org.xresloader.field_alias) = "\347\216\251\345\256\266\347\255\211\347\272\247"];
    case kUserLevel: {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this_._internal_user_level());
      break;
    }
    case UNLOCK_TYPE_NOT_SET: {
      break;
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void event_cfg::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<event_cfg*>(&to_msg);
  auto& from = static_cast<const event_cfg&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:event_cfg)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_test_arr()->MergeFrom(
      from._internal_test_arr());
  _this->_internal_mutable_test_empty_arr()->MergeFrom(
      from._internal_test_empty_arr());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.rule_ != nullptr);
      if (_this->_impl_.rule_ == nullptr) {
        _this->_impl_.rule_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.rule_);
      } else {
        _this->_impl_.rule_->MergeFrom(*from._impl_.rule_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.specify_field_ != nullptr);
      if (_this->_impl_.specify_field_ == nullptr) {
        _this->_impl_.specify_field_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.specify_field_);
      } else {
        _this->_impl_.specify_field_->MergeFrom(*from._impl_.specify_field_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_id() != 0) {
        _this->_impl_.id_ = from._impl_.id_;
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_process() != 0) {
        _this->_impl_.process_ = from._impl_.process_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_reward();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kItem: {
        if (oneof_needs_init) {
          _this->_impl_.reward_.item_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.reward_.item_);
        } else {
          _this->_impl_.reward_.item_->MergeFrom(*from._impl_.reward_.item_);
        }
        break;
      }
      case kUserExp: {
        _this->_impl_.reward_.user_exp_ = from._impl_.reward_.user_exp_;
        break;
      }
      case kNote: {
        if (oneof_needs_init) {
          _this->_impl_.reward_.note_.InitDefault();
        }
        _this->_impl_.reward_.note_.Set(from._internal_note(), arena);
        break;
      }
      case kEnumType: {
        _this->_impl_.reward_.enum_type_ = from._impl_.reward_.enum_type_;
        break;
      }
      case REWARD_NOT_SET:
        break;
    }
  }
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[1]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[1];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_unlock_type();
      }
      _this->_impl_._oneof_case_[1] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kUserLevel: {
        _this->_impl_.unlock_type_.user_level_ = from._impl_.unlock_type_.user_level_;
        break;
      }
      case UNLOCK_TYPE_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void event_cfg::CopyFrom(const event_cfg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:event_cfg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void event_cfg::InternalSwap(event_cfg* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.test_arr_.InternalSwap(&other->_impl_.test_arr_);
  _impl_.test_empty_arr_.InternalSwap(&other->_impl_.test_empty_arr_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(event_cfg, _impl_.process_)
      + sizeof(event_cfg::_impl_.process_)
      - PROTOBUF_FIELD_OFFSET(event_cfg, _impl_.rule_)>(
          reinterpret_cast<char*>(&_impl_.rule_),
          reinterpret_cast<char*>(&other->_impl_.rule_));
  swap(_impl_.reward_, other->_impl_.reward_);
  swap(_impl_.unlock_type_, other->_impl_.unlock_type_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
  swap(_impl_._oneof_case_[1], other->_impl_._oneof_case_[1]);
}

::google::protobuf::Metadata event_cfg::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class keep_or_strip_empty_list_cfg::_Internal {
 public:
  using HasBits =
      decltype(std::declval<keep_or_strip_empty_list_cfg>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(keep_or_strip_empty_list_cfg, _impl_._has_bits_);
};

void keep_or_strip_empty_list_cfg::clear_array_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.array_msg_.Clear();
}
void keep_or_strip_empty_list_cfg::clear_array_plain_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.array_plain_msg_.Clear();
}
keep_or_strip_empty_list_cfg::keep_or_strip_empty_list_cfg(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, keep_or_strip_empty_list_cfg_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:keep_or_strip_empty_list_cfg)
}
PROTOBUF_NDEBUG_INLINE keep_or_strip_empty_list_cfg::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::keep_or_strip_empty_list_cfg& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        array_msg_{visibility, arena, from.array_msg_},
        array_plain_msg_{visibility, arena, from.array_plain_msg_},
        array_int32_{visibility, arena, from.array_int32_},
        _array_int32_cached_byte_size_{0},
        array_int64_{visibility, arena, from.array_int64_},
        _array_int64_cached_byte_size_{0} {}

keep_or_strip_empty_list_cfg::keep_or_strip_empty_list_cfg(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const keep_or_strip_empty_list_cfg& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, keep_or_strip_empty_list_cfg_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  keep_or_strip_empty_list_cfg* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.id_ = from._impl_.id_;

  // @@protoc_insertion_point(copy_constructor:keep_or_strip_empty_list_cfg)
}
PROTOBUF_NDEBUG_INLINE keep_or_strip_empty_list_cfg::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        array_msg_{visibility, arena},
        array_plain_msg_{visibility, arena},
        array_int32_{visibility, arena},
        _array_int32_cached_byte_size_{0},
        array_int64_{visibility, arena},
        _array_int64_cached_byte_size_{0} {}

inline void keep_or_strip_empty_list_cfg::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.id_ = {};
}
keep_or_strip_empty_list_cfg::~keep_or_strip_empty_list_cfg() {
  // @@protoc_insertion_point(destructor:keep_or_strip_empty_list_cfg)
  SharedDtor(*this);
}
inline void keep_or_strip_empty_list_cfg::SharedDtor(MessageLite& self) {
  keep_or_strip_empty_list_cfg& this_ = static_cast<keep_or_strip_empty_list_cfg&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL keep_or_strip_empty_list_cfg::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) keep_or_strip_empty_list_cfg(arena);
}
constexpr auto keep_or_strip_empty_list_cfg::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(keep_or_strip_empty_list_cfg, _impl_.array_msg_) +
          decltype(keep_or_strip_empty_list_cfg::_impl_.array_msg_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(keep_or_strip_empty_list_cfg, _impl_.array_plain_msg_) +
          decltype(keep_or_strip_empty_list_cfg::_impl_.array_plain_msg_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(keep_or_strip_empty_list_cfg, _impl_.array_int32_) +
          decltype(keep_or_strip_empty_list_cfg::_impl_.array_int32_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(keep_or_strip_empty_list_cfg, _impl_.array_int64_) +
          decltype(keep_or_strip_empty_list_cfg::_impl_.array_int64_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(keep_or_strip_empty_list_cfg), alignof(keep_or_strip_empty_list_cfg), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&keep_or_strip_empty_list_cfg::PlacementNew_,
                                 sizeof(keep_or_strip_empty_list_cfg),
                                 alignof(keep_or_strip_empty_list_cfg));
  }
}
constexpr auto keep_or_strip_empty_list_cfg::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_keep_or_strip_empty_list_cfg_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &keep_or_strip_empty_list_cfg::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<keep_or_strip_empty_list_cfg>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &keep_or_strip_empty_list_cfg::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<keep_or_strip_empty_list_cfg>(), &keep_or_strip_empty_list_cfg::ByteSizeLong,
              &keep_or_strip_empty_list_cfg::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(keep_or_strip_empty_list_cfg, _impl_._cached_size_),
          false,
      },
      &keep_or_strip_empty_list_cfg::kDescriptorMethods,
      &descriptor_table_kind_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull keep_or_strip_empty_list_cfg_class_data_ =
        keep_or_strip_empty_list_cfg::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL keep_or_strip_empty_list_cfg::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&keep_or_strip_empty_list_cfg_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(keep_or_strip_empty_list_cfg_class_data_.tc_table);
  return keep_or_strip_empty_list_cfg_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 2, 0, 2>
keep_or_strip_empty_list_cfg::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(keep_or_strip_empty_list_cfg, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    keep_or_strip_empty_list_cfg_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::keep_or_strip_empty_list_cfg>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 id = 1 [(.org.xresloader.field_description) = "This is a Key", (.org.xresloader.ue.key_tag) = 1];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(keep_or_strip_empty_list_cfg, _impl_.id_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(keep_or_strip_empty_list_cfg, _impl_.id_)}},
    // repeated .dep2_cfg array_msg = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(keep_or_strip_empty_list_cfg, _impl_.array_msg_)}},
    // repeated .dep2_cfg array_plain_msg = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 1, PROTOBUF_FIELD_OFFSET(keep_or_strip_empty_list_cfg, _impl_.array_plain_msg_)}},
    // repeated int32 array_int32 = 4;
    {::_pbi::TcParser::FastV32P1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(keep_or_strip_empty_list_cfg, _impl_.array_int32_)}},
    // repeated int64 array_int64 = 5;
    {::_pbi::TcParser::FastV64P1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(keep_or_strip_empty_list_cfg, _impl_.array_int64_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 id = 1 [(.org.xresloader.field_description) = "This is a Key", (.org.xresloader.ue.key_tag) = 1];
    {PROTOBUF_FIELD_OFFSET(keep_or_strip_empty_list_cfg, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // repeated .dep2_cfg array_msg = 2;
    {PROTOBUF_FIELD_OFFSET(keep_or_strip_empty_list_cfg, _impl_.array_msg_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .dep2_cfg array_plain_msg = 3;
    {PROTOBUF_FIELD_OFFSET(keep_or_strip_empty_list_cfg, _impl_.array_plain_msg_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated int32 array_int32 = 4;
    {PROTOBUF_FIELD_OFFSET(keep_or_strip_empty_list_cfg, _impl_.array_int32_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
    // repeated int64 array_int64 = 5;
    {PROTOBUF_FIELD_OFFSET(keep_or_strip_empty_list_cfg, _impl_.array_int64_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt64)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::dep2_cfg>()},
      {::_pbi::TcParser::GetTable<::dep2_cfg>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void keep_or_strip_empty_list_cfg::Clear() {
// @@protoc_insertion_point(message_clear_start:keep_or_strip_empty_list_cfg)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.array_msg_.Clear();
  _impl_.array_plain_msg_.Clear();
  _impl_.array_int32_.Clear();
  _impl_.array_int64_.Clear();
  _impl_.id_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL keep_or_strip_empty_list_cfg::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const keep_or_strip_empty_list_cfg& this_ = static_cast<const keep_or_strip_empty_list_cfg&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL keep_or_strip_empty_list_cfg::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const keep_or_strip_empty_list_cfg& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:keep_or_strip_empty_list_cfg)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 id = 1 [(.org.xresloader.field_description) = "This is a Key", (.org.xresloader.ue.key_tag) = 1];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_id() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          1, this_._internal_id(), target);
    }
  }

  // repeated .dep2_cfg array_msg = 2;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_array_msg_size());
       i < n; i++) {
    const auto& repfield = this_._internal_array_msg().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .dep2_cfg array_plain_msg = 3;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_array_plain_msg_size());
       i < n; i++) {
    const auto& repfield = this_._internal_array_plain_msg().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            3, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated int32 array_int32 = 4;
  {
    int byte_size = this_._impl_._array_int32_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          4, this_._internal_array_int32(), byte_size, target);
    }
  }

  // repeated int64 array_int64 = 5;
  {
    int byte_size = this_._impl_._array_int64_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt64Packed(
          5, this_._internal_array_int64(), byte_size, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:keep_or_strip_empty_list_cfg)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t keep_or_strip_empty_list_cfg::ByteSizeLong(const MessageLite& base) {
  const keep_or_strip_empty_list_cfg& this_ = static_cast<const keep_or_strip_empty_list_cfg&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t keep_or_strip_empty_list_cfg::ByteSizeLong() const {
  const keep_or_strip_empty_list_cfg& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:keep_or_strip_empty_list_cfg)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .dep2_cfg array_msg = 2;
    {
      total_size += 1UL * this_._internal_array_msg_size();
      for (const auto& msg : this_._internal_array_msg()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .dep2_cfg array_plain_msg = 3;
    {
      total_size += 1UL * this_._internal_array_plain_msg_size();
      for (const auto& msg : this_._internal_array_plain_msg()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated int32 array_int32 = 4;
    {
      total_size +=
          ::_pbi::WireFormatLite::Int32SizeWithPackedTagSize(
              this_._internal_array_int32(), 1,
              this_._impl_._array_int32_cached_byte_size_);
    }
    // repeated int64 array_int64 = 5;
    {
      total_size +=
          ::_pbi::WireFormatLite::Int64SizeWithPackedTagSize(
              this_._internal_array_int64(), 1,
              this_._impl_._array_int64_cached_byte_size_);
    }
  }
   {
    // uint32 id = 1 [(.org.xresloader.field_description) = "This is a Key", (.org.xresloader.ue.key_tag) = 1];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_id() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_id());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void keep_or_strip_empty_list_cfg::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<keep_or_strip_empty_list_cfg*>(&to_msg);
  auto& from = static_cast<const keep_or_strip_empty_list_cfg&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:keep_or_strip_empty_list_cfg)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_array_msg()->MergeFrom(
      from._internal_array_msg());
  _this->_internal_mutable_array_plain_msg()->MergeFrom(
      from._internal_array_plain_msg());
  _this->_internal_mutable_array_int32()->MergeFrom(from._internal_array_int32());
  _this->_internal_mutable_array_int64()->MergeFrom(from._internal_array_int64());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    if (from._internal_id() != 0) {
      _this->_impl_.id_ = from._impl_.id_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void keep_or_strip_empty_list_cfg::CopyFrom(const keep_or_strip_empty_list_cfg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:keep_or_strip_empty_list_cfg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void keep_or_strip_empty_list_cfg::InternalSwap(keep_or_strip_empty_list_cfg* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.array_msg_.InternalSwap(&other->_impl_.array_msg_);
  _impl_.array_plain_msg_.InternalSwap(&other->_impl_.array_plain_msg_);
  _impl_.array_int32_.InternalSwap(&other->_impl_.array_int32_);
  _impl_.array_int64_.InternalSwap(&other->_impl_.array_int64_);
  swap(_impl_.id_, other->_impl_.id_);
}

::google::protobuf::Metadata keep_or_strip_empty_list_cfg::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class combine_id::_Internal {
 public:
  using HasBits =
      decltype(std::declval<combine_id>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(combine_id, _impl_._has_bits_);
};

combine_id::combine_id(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, combine_id_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:combine_id)
}
combine_id::combine_id(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const combine_id& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, combine_id_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE combine_id::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void combine_id::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, prefix_),
           0,
           offsetof(Impl_, id_) -
               offsetof(Impl_, prefix_) +
               sizeof(Impl_::id_));
}
combine_id::~combine_id() {
  // @@protoc_insertion_point(destructor:combine_id)
  SharedDtor(*this);
}
inline void combine_id::SharedDtor(MessageLite& self) {
  combine_id& this_ = static_cast<combine_id&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL combine_id::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) combine_id(arena);
}
constexpr auto combine_id::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(combine_id),
                                            alignof(combine_id));
}
constexpr auto combine_id::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_combine_id_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &combine_id::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<combine_id>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &combine_id::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<combine_id>(), &combine_id::ByteSizeLong,
              &combine_id::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(combine_id, _impl_._cached_size_),
          false,
      },
      &combine_id::kDescriptorMethods,
      &descriptor_table_kind_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull combine_id_class_data_ =
        combine_id::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL combine_id::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&combine_id_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(combine_id_class_data_.tc_table);
  return combine_id_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2>
combine_id::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(combine_id, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    combine_id_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::combine_id>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 id = 2 [(.org.xresloader.validator) = "0-99999"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(combine_id, _impl_.id_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(combine_id, _impl_.id_)}},
    // uint32 prefix = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(combine_id, _impl_.prefix_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(combine_id, _impl_.prefix_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 prefix = 1;
    {PROTOBUF_FIELD_OFFSET(combine_id, _impl_.prefix_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 id = 2 [(.org.xresloader.validator) = "0-99999"];
    {PROTOBUF_FIELD_OFFSET(combine_id, _impl_.id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void combine_id::Clear() {
// @@protoc_insertion_point(message_clear_start:combine_id)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    ::memset(&_impl_.prefix_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.id_) -
        reinterpret_cast<char*>(&_impl_.prefix_)) + sizeof(_impl_.id_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL combine_id::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const combine_id& this_ = static_cast<const combine_id&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL combine_id::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const combine_id& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:combine_id)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 prefix = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_prefix() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          1, this_._internal_prefix(), target);
    }
  }

  // uint32 id = 2 [(.org.xresloader.validator) = "0-99999"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_id() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          2, this_._internal_id(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:combine_id)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t combine_id::ByteSizeLong(const MessageLite& base) {
  const combine_id& this_ = static_cast<const combine_id&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t combine_id::ByteSizeLong() const {
  const combine_id& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:combine_id)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // uint32 prefix = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_prefix() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_prefix());
      }
    }
    // uint32 id = 2 [(.org.xresloader.validator) = "0-99999"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_id() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_id());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void combine_id::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<combine_id*>(&to_msg);
  auto& from = static_cast<const combine_id&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:combine_id)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (from._internal_prefix() != 0) {
        _this->_impl_.prefix_ = from._impl_.prefix_;
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_id() != 0) {
        _this->_impl_.id_ = from._impl_.id_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void combine_id::CopyFrom(const combine_id& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:combine_id)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void combine_id::InternalSwap(combine_id* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(combine_id, _impl_.id_)
      + sizeof(combine_id::_impl_.id_)
      - PROTOBUF_FIELD_OFFSET(combine_id, _impl_.prefix_)>(
          reinterpret_cast<char*>(&_impl_.prefix_),
          reinterpret_cast<char*>(&other->_impl_.prefix_));
}

::google::protobuf::Metadata combine_id::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
process_by_script_MapU32StringEntry_DoNotUse::process_by_script_MapU32StringEntry_DoNotUse()
    : SuperType(process_by_script_MapU32StringEntry_DoNotUse_class_data_.base()) {}
process_by_script_MapU32StringEntry_DoNotUse::process_by_script_MapU32StringEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
    : SuperType(arena, process_by_script_MapU32StringEntry_DoNotUse_class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
process_by_script_MapU32StringEntry_DoNotUse::process_by_script_MapU32StringEntry_DoNotUse() : SuperType() {}
process_by_script_MapU32StringEntry_DoNotUse::process_by_script_MapU32StringEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
inline void* PROTOBUF_NONNULL process_by_script_MapU32StringEntry_DoNotUse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) process_by_script_MapU32StringEntry_DoNotUse(arena);
}
constexpr auto process_by_script_MapU32StringEntry_DoNotUse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(process_by_script_MapU32StringEntry_DoNotUse),
                                            alignof(process_by_script_MapU32StringEntry_DoNotUse));
}
constexpr auto process_by_script_MapU32StringEntry_DoNotUse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_process_by_script_MapU32StringEntry_DoNotUse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &process_by_script_MapU32StringEntry_DoNotUse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<process_by_script_MapU32StringEntry_DoNotUse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &process_by_script_MapU32StringEntry_DoNotUse::SharedDtor,
          static_cast<void (::google::protobuf::MessageLite::*)()>(&process_by_script_MapU32StringEntry_DoNotUse::ClearImpl),
              ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
              ,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(process_by_script_MapU32StringEntry_DoNotUse, _impl_._cached_size_),
          false,
      },
      &process_by_script_MapU32StringEntry_DoNotUse::kDescriptorMethods,
      &descriptor_table_kind_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull process_by_script_MapU32StringEntry_DoNotUse_class_data_ =
        process_by_script_MapU32StringEntry_DoNotUse::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL process_by_script_MapU32StringEntry_DoNotUse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&process_by_script_MapU32StringEntry_DoNotUse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(process_by_script_MapU32StringEntry_DoNotUse_class_data_.tc_table);
  return process_by_script_MapU32StringEntry_DoNotUse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 49, 2>
process_by_script_MapU32StringEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(process_by_script_MapU32StringEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    process_by_script_MapU32StringEntry_DoNotUse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::process_by_script_MapU32StringEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(process_by_script_MapU32StringEntry_DoNotUse, _impl_.value_)}},
    // uint32 key = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(process_by_script_MapU32StringEntry_DoNotUse, _impl_.key_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(process_by_script_MapU32StringEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 key = 1;
    {PROTOBUF_FIELD_OFFSET(process_by_script_MapU32StringEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(process_by_script_MapU32StringEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\43\0\5\0\0\0\0\0"
    "process_by_script.MapU32StringEntry"
    "value"
  }},
};
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
process_by_script_TestMapIsEntry_DoNotUse::process_by_script_TestMapIsEntry_DoNotUse()
    : SuperType(process_by_script_TestMapIsEntry_DoNotUse_class_data_.base()) {}
process_by_script_TestMapIsEntry_DoNotUse::process_by_script_TestMapIsEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
    : SuperType(arena, process_by_script_TestMapIsEntry_DoNotUse_class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
process_by_script_TestMapIsEntry_DoNotUse::process_by_script_TestMapIsEntry_DoNotUse() : SuperType() {}
process_by_script_TestMapIsEntry_DoNotUse::process_by_script_TestMapIsEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
inline void* PROTOBUF_NONNULL process_by_script_TestMapIsEntry_DoNotUse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) process_by_script_TestMapIsEntry_DoNotUse(arena);
}
constexpr auto process_by_script_TestMapIsEntry_DoNotUse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(process_by_script_TestMapIsEntry_DoNotUse),
                                            alignof(process_by_script_TestMapIsEntry_DoNotUse));
}
constexpr auto process_by_script_TestMapIsEntry_DoNotUse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_process_by_script_TestMapIsEntry_DoNotUse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &process_by_script_TestMapIsEntry_DoNotUse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<process_by_script_TestMapIsEntry_DoNotUse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &process_by_script_TestMapIsEntry_DoNotUse::SharedDtor,
          static_cast<void (::google::protobuf::MessageLite::*)()>(&process_by_script_TestMapIsEntry_DoNotUse::ClearImpl),
              ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
              ,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(process_by_script_TestMapIsEntry_DoNotUse, _impl_._cached_size_),
          false,
      },
      &process_by_script_TestMapIsEntry_DoNotUse::kDescriptorMethods,
      &descriptor_table_kind_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull process_by_script_TestMapIsEntry_DoNotUse_class_data_ =
        process_by_script_TestMapIsEntry_DoNotUse::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL process_by_script_TestMapIsEntry_DoNotUse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&process_by_script_TestMapIsEntry_DoNotUse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(process_by_script_TestMapIsEntry_DoNotUse_class_data_.tc_table);
  return process_by_script_TestMapIsEntry_DoNotUse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 46, 2>
process_by_script_TestMapIsEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(process_by_script_TestMapIsEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    process_by_script_TestMapIsEntry_DoNotUse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::process_by_script_TestMapIsEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(process_by_script_TestMapIsEntry_DoNotUse, _impl_.value_)}},
    // int32 key = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(process_by_script_TestMapIsEntry_DoNotUse, _impl_.key_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(process_by_script_TestMapIsEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 key = 1;
    {PROTOBUF_FIELD_OFFSET(process_by_script_TestMapIsEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(process_by_script_TestMapIsEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\40\0\5\0\0\0\0\0"
    "process_by_script.TestMapIsEntry"
    "value"
  }},
};
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
process_by_script_TestMapSmEntry_DoNotUse::process_by_script_TestMapSmEntry_DoNotUse()
    : SuperType(process_by_script_TestMapSmEntry_DoNotUse_class_data_.base()) {}
process_by_script_TestMapSmEntry_DoNotUse::process_by_script_TestMapSmEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
    : SuperType(arena, process_by_script_TestMapSmEntry_DoNotUse_class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
process_by_script_TestMapSmEntry_DoNotUse::process_by_script_TestMapSmEntry_DoNotUse() : SuperType() {}
process_by_script_TestMapSmEntry_DoNotUse::process_by_script_TestMapSmEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
inline void* PROTOBUF_NONNULL process_by_script_TestMapSmEntry_DoNotUse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) process_by_script_TestMapSmEntry_DoNotUse(arena);
}
constexpr auto process_by_script_TestMapSmEntry_DoNotUse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(process_by_script_TestMapSmEntry_DoNotUse),
                                            alignof(process_by_script_TestMapSmEntry_DoNotUse));
}
constexpr auto process_by_script_TestMapSmEntry_DoNotUse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_process_by_script_TestMapSmEntry_DoNotUse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &process_by_script_TestMapSmEntry_DoNotUse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<process_by_script_TestMapSmEntry_DoNotUse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &process_by_script_TestMapSmEntry_DoNotUse::SharedDtor,
          static_cast<void (::google::protobuf::MessageLite::*)()>(&process_by_script_TestMapSmEntry_DoNotUse::ClearImpl),
              ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
              ,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(process_by_script_TestMapSmEntry_DoNotUse, _impl_._cached_size_),
          false,
      },
      &process_by_script_TestMapSmEntry_DoNotUse::kDescriptorMethods,
      &descriptor_table_kind_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull process_by_script_TestMapSmEntry_DoNotUse_class_data_ =
        process_by_script_TestMapSmEntry_DoNotUse::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL process_by_script_TestMapSmEntry_DoNotUse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&process_by_script_TestMapSmEntry_DoNotUse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(process_by_script_TestMapSmEntry_DoNotUse_class_data_.tc_table);
  return process_by_script_TestMapSmEntry_DoNotUse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 44, 2>
process_by_script_TestMapSmEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(process_by_script_TestMapSmEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    process_by_script_TestMapSmEntry_DoNotUse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::process_by_script_TestMapSmEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .dep2_cfg value = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(process_by_script_TestMapSmEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(process_by_script_TestMapSmEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(process_by_script_TestMapSmEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .dep2_cfg value = 2;
    {PROTOBUF_FIELD_OFFSET(process_by_script_TestMapSmEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::dep2_cfg>()},
  }},
  {{
    "\40\3\0\0\0\0\0\0"
    "process_by_script.TestMapSmEntry"
    "key"
  }},
};
// ===================================================================

class process_by_script::_Internal {
 public:
  using HasBits =
      decltype(std::declval<process_by_script>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(process_by_script, _impl_._has_bits_);
};

void process_by_script::clear_date() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.date_ != nullptr) _impl_.date_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void process_by_script::clear_test_map_sm() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.test_map_sm_.Clear();
}
process_by_script::process_by_script(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, process_by_script_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:process_by_script)
}
PROTOBUF_NDEBUG_INLINE process_by_script::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::process_by_script& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        map_u32_string_{visibility, arena, from.map_u32_string_},
        test_map_is_{visibility, arena, from.test_map_is_},
        test_map_sm_{visibility, arena, from.test_map_sm_},
        human_readable_date_(arena, from.human_readable_date_) {}

process_by_script::process_by_script(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const process_by_script& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, process_by_script_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  process_by_script* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.date_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.date_)
                : nullptr;
  _impl_.id_id_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.id_id_)
                : nullptr;
  _impl_.id_ = from._impl_.id_;

  // @@protoc_insertion_point(copy_constructor:process_by_script)
}
PROTOBUF_NDEBUG_INLINE process_by_script::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        map_u32_string_{visibility, arena},
        test_map_is_{visibility, arena},
        test_map_sm_{visibility, arena},
        human_readable_date_(arena) {}

inline void process_by_script::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, date_),
           0,
           offsetof(Impl_, id_) -
               offsetof(Impl_, date_) +
               sizeof(Impl_::id_));
}
process_by_script::~process_by_script() {
  // @@protoc_insertion_point(destructor:process_by_script)
  SharedDtor(*this);
}
inline void process_by_script::SharedDtor(MessageLite& self) {
  process_by_script& this_ = static_cast<process_by_script&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.human_readable_date_.Destroy();
  delete this_._impl_.date_;
  delete this_._impl_.id_id_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL process_by_script::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) process_by_script(arena);
}
constexpr auto process_by_script::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(process_by_script, _impl_.map_u32_string_) +
          decltype(process_by_script::_impl_.map_u32_string_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(process_by_script, _impl_.map_u32_string_) +
          decltype(process_by_script::_impl_.map_u32_string_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(process_by_script, _impl_.test_map_is_) +
          decltype(process_by_script::_impl_.test_map_is_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(process_by_script, _impl_.test_map_is_) +
          decltype(process_by_script::_impl_.test_map_is_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(process_by_script, _impl_.test_map_sm_) +
          decltype(process_by_script::_impl_.test_map_sm_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(process_by_script, _impl_.test_map_sm_) +
          decltype(process_by_script::_impl_.test_map_sm_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(process_by_script), alignof(process_by_script), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&process_by_script::PlacementNew_,
                                 sizeof(process_by_script),
                                 alignof(process_by_script));
  }
}
constexpr auto process_by_script::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_process_by_script_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &process_by_script::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<process_by_script>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &process_by_script::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<process_by_script>(), &process_by_script::ByteSizeLong,
              &process_by_script::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(process_by_script, _impl_._cached_size_),
          false,
      },
      &process_by_script::kDescriptorMethods,
      &descriptor_table_kind_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull process_by_script_class_data_ =
        process_by_script::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL process_by_script::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&process_by_script_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(process_by_script_class_data_.tc_table);
  return process_by_script_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 7, 6, 81, 7>
process_by_script::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(process_by_script, _impl_._has_bits_),
    0, // no _extensions_
    1001, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967088,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    6,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    process_by_script_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::process_by_script>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .google.protobuf.Timestamp date = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 0, PROTOBUF_FIELD_OFFSET(process_by_script, _impl_.date_)}},
    // uint32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(process_by_script, _impl_.id_), 3>(),
     {8, 3, 0, PROTOBUF_FIELD_OFFSET(process_by_script, _impl_.id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // string human_readable_date = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(process_by_script, _impl_.human_readable_date_)}},
  }}, {{
    1001, 0, 1,
    65534, 6,
    65535, 65535
  }}, {{
    // uint32 id = 1;
    {PROTOBUF_FIELD_OFFSET(process_by_script, _impl_.id_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // map<uint32, string> map_u32_string = 2;
    {PROTOBUF_FIELD_OFFSET(process_by_script, _impl_.map_u32_string_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // string human_readable_date = 3;
    {PROTOBUF_FIELD_OFFSET(process_by_script, _impl_.human_readable_date_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Timestamp date = 4;
    {PROTOBUF_FIELD_OFFSET(process_by_script, _impl_.date_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // map<int32, string> test_map_is = 7;
    {PROTOBUF_FIELD_OFFSET(process_by_script, _impl_.test_map_is_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<string, .dep2_cfg> test_map_sm = 8 [(.org.xresloader.field_separator) = "|"];
    {PROTOBUF_FIELD_OFFSET(process_by_script, _impl_.test_map_sm_), -1, 4,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // .combine_id id_id = 1001;
    {PROTOBUF_FIELD_OFFSET(process_by_script, _impl_.id_id_), _Internal::kHasBitsOffset + 2, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
      {::_pbi::TcParser::GetTable<::combine_id>()},
      {::_pbi::TcParser::GetMapAuxInfo(1, 0, 0,
                                       13, 9,
                                       0)},
      {::_pbi::TcParser::GetMapAuxInfo(1, 0, 0,
                                       5, 9,
                                       0)},
      {::_pbi::TcParser::GetMapAuxInfo(1, 0, 0,
                                       9, 11,
                                       0)},
      {::_pbi::TcParser::GetTable<::dep2_cfg>()},
  }},
  {{
    "\21\0\16\23\0\13\13\0"
    "process_by_script"
    "map_u32_string"
    "human_readable_date"
    "test_map_is"
    "test_map_sm"
  }},
};
PROTOBUF_NOINLINE void process_by_script::Clear() {
// @@protoc_insertion_point(message_clear_start:process_by_script)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.map_u32_string_.Clear();
  _impl_.test_map_is_.Clear();
  _impl_.test_map_sm_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.human_readable_date_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.date_ != nullptr);
      _impl_.date_->Clear();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.id_id_ != nullptr);
      _impl_.id_id_->Clear();
    }
  }
  _impl_.id_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL process_by_script::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const process_by_script& this_ = static_cast<const process_by_script&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL process_by_script::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const process_by_script& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:process_by_script)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 id = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (this_._internal_id() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          1, this_._internal_id(), target);
    }
  }

  // map<uint32, string> map_u32_string = 2;
  if (!this_._internal_map_u32_string().empty()) {
    using MapType = ::google::protobuf::Map<::uint32_t, std::string>;
    using WireHelper = _pbi::MapEntryFuncs<::uint32_t, std::string,
                                   _pbi::WireFormatLite::TYPE_UINT32,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = this_._internal_map_u32_string();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterFlat<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            2, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "process_by_script.map_u32_string");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            2, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "process_by_script.map_u32_string");
      }
    }
  }

  // string human_readable_date = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_human_readable_date().empty()) {
      const std::string& _s = this_._internal_human_readable_date();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "process_by_script.human_readable_date");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .google.protobuf.Timestamp date = 4;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.date_, this_._impl_.date_->GetCachedSize(), target,
        stream);
  }

  // map<int32, string> test_map_is = 7;
  if (!this_._internal_test_map_is().empty()) {
    using MapType = ::google::protobuf::Map<::int32_t, std::string>;
    using WireHelper = _pbi::MapEntryFuncs<::int32_t, std::string,
                                   _pbi::WireFormatLite::TYPE_INT32,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = this_._internal_test_map_is();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterFlat<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            7, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "process_by_script.test_map_is");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            7, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "process_by_script.test_map_is");
      }
    }
  }

  // map<string, .dep2_cfg> test_map_sm = 8 [(.org.xresloader.field_separator) = "|"];
  if (!this_._internal_test_map_sm().empty()) {
    using MapType = ::google::protobuf::Map<std::string, ::dep2_cfg>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, ::dep2_cfg,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_MESSAGE>;
    const auto& field = this_._internal_test_map_sm();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            8, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "process_by_script.test_map_sm");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            8, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "process_by_script.test_map_sm");
      }
    }
  }

  // .combine_id id_id = 1001;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1001, *this_._impl_.id_id_, this_._impl_.id_id_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:process_by_script)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t process_by_script::ByteSizeLong(const MessageLite& base) {
  const process_by_script& this_ = static_cast<const process_by_script&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t process_by_script::ByteSizeLong() const {
  const process_by_script& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:process_by_script)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // map<uint32, string> map_u32_string = 2;
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_map_u32_string_size());
      for (const auto& entry : this_._internal_map_u32_string()) {
        total_size += _pbi::MapEntryFuncs<::uint32_t, std::string,
                                       _pbi::WireFormatLite::TYPE_UINT32,
                                       _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
      }
    }
    // map<int32, string> test_map_is = 7;
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_test_map_is_size());
      for (const auto& entry : this_._internal_test_map_is()) {
        total_size += _pbi::MapEntryFuncs<::int32_t, std::string,
                                       _pbi::WireFormatLite::TYPE_INT32,
                                       _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
      }
    }
    // map<string, .dep2_cfg> test_map_sm = 8 [(.org.xresloader.field_separator) = "|"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_test_map_sm_size());
      for (const auto& entry : this_._internal_test_map_sm()) {
        total_size += _pbi::MapEntryFuncs<std::string, ::dep2_cfg,
                                       _pbi::WireFormatLite::TYPE_STRING,
                                       _pbi::WireFormatLite::TYPE_MESSAGE>::ByteSizeLong(entry.first, entry.second);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    // string human_readable_date = 3;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_human_readable_date().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_human_readable_date());
      }
    }
    // .google.protobuf.Timestamp date = 4;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.date_);
    }
    // .combine_id id_id = 1001;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 2 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.id_id_);
    }
    // uint32 id = 1;
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_id() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_id());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void process_by_script::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<process_by_script*>(&to_msg);
  auto& from = static_cast<const process_by_script&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:process_by_script)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.map_u32_string_.MergeFrom(from._impl_.map_u32_string_);
  _this->_impl_.test_map_is_.MergeFrom(from._impl_.test_map_is_);
  _this->_impl_.test_map_sm_.MergeFrom(from._impl_.test_map_sm_);
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_human_readable_date().empty()) {
        _this->_internal_set_human_readable_date(from._internal_human_readable_date());
      } else {
        if (_this->_impl_.human_readable_date_.IsDefault()) {
          _this->_internal_set_human_readable_date("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.date_ != nullptr);
      if (_this->_impl_.date_ == nullptr) {
        _this->_impl_.date_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.date_);
      } else {
        _this->_impl_.date_->MergeFrom(*from._impl_.date_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.id_id_ != nullptr);
      if (_this->_impl_.id_id_ == nullptr) {
        _this->_impl_.id_id_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.id_id_);
      } else {
        _this->_impl_.id_id_->MergeFrom(*from._impl_.id_id_);
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_id() != 0) {
        _this->_impl_.id_ = from._impl_.id_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void process_by_script::CopyFrom(const process_by_script& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:process_by_script)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void process_by_script::InternalSwap(process_by_script* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.map_u32_string_.InternalSwap(&other->_impl_.map_u32_string_);
  _impl_.test_map_is_.InternalSwap(&other->_impl_.test_map_is_);
  _impl_.test_map_sm_.InternalSwap(&other->_impl_.test_map_sm_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.human_readable_date_, &other->_impl_.human_readable_date_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(process_by_script, _impl_.id_)
      + sizeof(process_by_script::_impl_.id_)
      - PROTOBUF_FIELD_OFFSET(process_by_script, _impl_.date_)>(
          reinterpret_cast<char*>(&_impl_.date_),
          reinterpret_cast<char*>(&other->_impl_.date_));
}

::google::protobuf::Metadata process_by_script::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class large_file_test::_Internal {
 public:
  using HasBits =
      decltype(std::declval<large_file_test>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(large_file_test, _impl_._has_bits_);
};

large_file_test::large_file_test(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, large_file_test_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:large_file_test)
}
PROTOBUF_NDEBUG_INLINE large_file_test::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::large_file_test& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        szvalue_(arena, from.szvalue_) {}

large_file_test::large_file_test(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const large_file_test& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, large_file_test_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  large_file_test* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.id_id_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.id_id_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, id_),
           offsetof(Impl_, f32value_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::f32value_));

  // @@protoc_insertion_point(copy_constructor:large_file_test)
}
PROTOBUF_NDEBUG_INLINE large_file_test::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        szvalue_(arena) {}

inline void large_file_test::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_id_),
           0,
           offsetof(Impl_, f32value_) -
               offsetof(Impl_, id_id_) +
               sizeof(Impl_::f32value_));
}
large_file_test::~large_file_test() {
  // @@protoc_insertion_point(destructor:large_file_test)
  SharedDtor(*this);
}
inline void large_file_test::SharedDtor(MessageLite& self) {
  large_file_test& this_ = static_cast<large_file_test&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.szvalue_.Destroy();
  delete this_._impl_.id_id_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL large_file_test::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) large_file_test(arena);
}
constexpr auto large_file_test::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(large_file_test),
                                            alignof(large_file_test));
}
constexpr auto large_file_test::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_large_file_test_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &large_file_test::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<large_file_test>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &large_file_test::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<large_file_test>(), &large_file_test::ByteSizeLong,
              &large_file_test::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(large_file_test, _impl_._cached_size_),
          false,
      },
      &large_file_test::kDescriptorMethods,
      &descriptor_table_kind_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull large_file_test_class_data_ =
        large_file_test::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL large_file_test::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&large_file_test_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(large_file_test_class_data_.tc_table);
  return large_file_test_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 1, 31, 2>
large_file_test::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(large_file_test, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    large_file_test_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::large_file_test>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(large_file_test, _impl_.id_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(large_file_test, _impl_.id_)}},
    // int32 i32value = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(large_file_test, _impl_.i32value_), 3>(),
     {16, 3, 0, PROTOBUF_FIELD_OFFSET(large_file_test, _impl_.i32value_)}},
    // uint64 u64value = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(large_file_test, _impl_.u64value_), 4>(),
     {24, 4, 0, PROTOBUF_FIELD_OFFSET(large_file_test, _impl_.u64value_)}},
    // double f64value = 4;
    {::_pbi::TcParser::FastF64S1,
     {33, 5, 0, PROTOBUF_FIELD_OFFSET(large_file_test, _impl_.f64value_)}},
    // float f32value = 5;
    {::_pbi::TcParser::FastF32S1,
     {45, 6, 0, PROTOBUF_FIELD_OFFSET(large_file_test, _impl_.f32value_)}},
    // string szvalue = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 0, 0, PROTOBUF_FIELD_OFFSET(large_file_test, _impl_.szvalue_)}},
    // .combine_id id_id = 7;
    {::_pbi::TcParser::FastMtS1,
     {58, 1, 0, PROTOBUF_FIELD_OFFSET(large_file_test, _impl_.id_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 id = 1;
    {PROTOBUF_FIELD_OFFSET(large_file_test, _impl_.id_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // int32 i32value = 2;
    {PROTOBUF_FIELD_OFFSET(large_file_test, _impl_.i32value_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // uint64 u64value = 3;
    {PROTOBUF_FIELD_OFFSET(large_file_test, _impl_.u64value_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // double f64value = 4;
    {PROTOBUF_FIELD_OFFSET(large_file_test, _impl_.f64value_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // float f32value = 5;
    {PROTOBUF_FIELD_OFFSET(large_file_test, _impl_.f32value_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // string szvalue = 6;
    {PROTOBUF_FIELD_OFFSET(large_file_test, _impl_.szvalue_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .combine_id id_id = 7;
    {PROTOBUF_FIELD_OFFSET(large_file_test, _impl_.id_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::combine_id>()},
  }},
  {{
    "\17\0\0\0\0\0\7\0"
    "large_file_test"
    "szvalue"
  }},
};
PROTOBUF_NOINLINE void large_file_test::Clear() {
// @@protoc_insertion_point(message_clear_start:large_file_test)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.szvalue_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.id_id_ != nullptr);
      _impl_.id_id_->Clear();
    }
  }
  if ((cached_has_bits & 0x0000007cu) != 0) {
    ::memset(&_impl_.id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.f32value_) -
        reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.f32value_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL large_file_test::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const large_file_test& this_ = static_cast<const large_file_test&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL large_file_test::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const large_file_test& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:large_file_test)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 id = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_id() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          1, this_._internal_id(), target);
    }
  }

  // int32 i32value = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (this_._internal_i32value() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_i32value(), target);
    }
  }

  // uint64 u64value = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000010u) != 0) {
    if (this_._internal_u64value() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          3, this_._internal_u64value(), target);
    }
  }

  // double f64value = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000020u) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_f64value()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          4, this_._internal_f64value(), target);
    }
  }

  // float f32value = 5;
  if ((this_._impl_._has_bits_[0] & 0x00000040u) != 0) {
    if (::absl::bit_cast<::uint32_t>(this_._internal_f32value()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteFloatToArray(
          5, this_._internal_f32value(), target);
    }
  }

  // string szvalue = 6;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_szvalue().empty()) {
      const std::string& _s = this_._internal_szvalue();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "large_file_test.szvalue");
      target = stream->WriteStringMaybeAliased(6, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .combine_id id_id = 7;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        7, *this_._impl_.id_id_, this_._impl_.id_id_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:large_file_test)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t large_file_test::ByteSizeLong(const MessageLite& base) {
  const large_file_test& this_ = static_cast<const large_file_test&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t large_file_test::ByteSizeLong() const {
  const large_file_test& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:large_file_test)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fu) != 0) {
    // string szvalue = 6;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_szvalue().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_szvalue());
      }
    }
    // .combine_id id_id = 7;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.id_id_);
    }
    // uint32 id = 1;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_id() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_id());
      }
    }
    // int32 i32value = 2;
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_i32value() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_i32value());
      }
    }
    // uint64 u64value = 3;
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (this_._internal_u64value() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_u64value());
      }
    }
    // double f64value = 4;
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_f64value()) != 0) {
        total_size += 9;
      }
    }
    // float f32value = 5;
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (::absl::bit_cast<::uint32_t>(this_._internal_f32value()) != 0) {
        total_size += 5;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void large_file_test::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<large_file_test*>(&to_msg);
  auto& from = static_cast<const large_file_test&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:large_file_test)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_szvalue().empty()) {
        _this->_internal_set_szvalue(from._internal_szvalue());
      } else {
        if (_this->_impl_.szvalue_.IsDefault()) {
          _this->_internal_set_szvalue("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.id_id_ != nullptr);
      if (_this->_impl_.id_id_ == nullptr) {
        _this->_impl_.id_id_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.id_id_);
      } else {
        _this->_impl_.id_id_->MergeFrom(*from._impl_.id_id_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_id() != 0) {
        _this->_impl_.id_ = from._impl_.id_;
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_i32value() != 0) {
        _this->_impl_.i32value_ = from._impl_.i32value_;
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (from._internal_u64value() != 0) {
        _this->_impl_.u64value_ = from._impl_.u64value_;
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_f64value()) != 0) {
        _this->_impl_.f64value_ = from._impl_.f64value_;
      }
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (::absl::bit_cast<::uint32_t>(from._internal_f32value()) != 0) {
        _this->_impl_.f32value_ = from._impl_.f32value_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void large_file_test::CopyFrom(const large_file_test& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:large_file_test)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void large_file_test::InternalSwap(large_file_test* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.szvalue_, &other->_impl_.szvalue_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(large_file_test, _impl_.f32value_)
      + sizeof(large_file_test::_impl_.f32value_)
      - PROTOBUF_FIELD_OFFSET(large_file_test, _impl_.id_id_)>(
          reinterpret_cast<char*>(&_impl_.id_id_),
          reinterpret_cast<char*>(&other->_impl_.id_id_));
}

::google::protobuf::Metadata large_file_test::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class inner_alias_message::_Internal {
 public:
  using HasBits =
      decltype(std::declval<inner_alias_message>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(inner_alias_message, _impl_._has_bits_);
};

inner_alias_message::inner_alias_message(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, inner_alias_message_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:inner_alias_message)
}
PROTOBUF_NDEBUG_INLINE inner_alias_message::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::inner_alias_message& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        paramlist_{visibility, arena, from.paramlist_},
        _paramlist_cached_byte_size_{0} {}

inner_alias_message::inner_alias_message(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const inner_alias_message& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, inner_alias_message_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  inner_alias_message* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.itype_ = from._impl_.itype_;

  // @@protoc_insertion_point(copy_constructor:inner_alias_message)
}
PROTOBUF_NDEBUG_INLINE inner_alias_message::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        paramlist_{visibility, arena},
        _paramlist_cached_byte_size_{0} {}

inline void inner_alias_message::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.itype_ = {};
}
inner_alias_message::~inner_alias_message() {
  // @@protoc_insertion_point(destructor:inner_alias_message)
  SharedDtor(*this);
}
inline void inner_alias_message::SharedDtor(MessageLite& self) {
  inner_alias_message& this_ = static_cast<inner_alias_message&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL inner_alias_message::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) inner_alias_message(arena);
}
constexpr auto inner_alias_message::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(inner_alias_message, _impl_.paramlist_) +
          decltype(inner_alias_message::_impl_.paramlist_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(inner_alias_message), alignof(inner_alias_message), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&inner_alias_message::PlacementNew_,
                                 sizeof(inner_alias_message),
                                 alignof(inner_alias_message));
  }
}
constexpr auto inner_alias_message::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_inner_alias_message_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &inner_alias_message::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<inner_alias_message>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &inner_alias_message::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<inner_alias_message>(), &inner_alias_message::ByteSizeLong,
              &inner_alias_message::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(inner_alias_message, _impl_._cached_size_),
          false,
      },
      &inner_alias_message::kDescriptorMethods,
      &descriptor_table_kind_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull inner_alias_message_class_data_ =
        inner_alias_message::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL inner_alias_message::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&inner_alias_message_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(inner_alias_message_class_data_.tc_table);
  return inner_alias_message_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2>
inner_alias_message::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(inner_alias_message, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    inner_alias_message_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::inner_alias_message>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated int64 paramList = 2 [(.org.xresloader.field_alias) = "Param", (.org.xresloader.field_list_min_size) = "2"];
    {::_pbi::TcParser::FastV64P1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(inner_alias_message, _impl_.paramlist_)}},
    // int32 iType = 1 [(.org.xresloader.field_alias) = "Type"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(inner_alias_message, _impl_.itype_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(inner_alias_message, _impl_.itype_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 iType = 1 [(.org.xresloader.field_alias) = "Type"];
    {PROTOBUF_FIELD_OFFSET(inner_alias_message, _impl_.itype_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // repeated int64 paramList = 2 [(.org.xresloader.field_alias) = "Param", (.org.xresloader.field_list_min_size) = "2"];
    {PROTOBUF_FIELD_OFFSET(inner_alias_message, _impl_.paramlist_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt64)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void inner_alias_message::Clear() {
// @@protoc_insertion_point(message_clear_start:inner_alias_message)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.paramlist_.Clear();
  _impl_.itype_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL inner_alias_message::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const inner_alias_message& this_ = static_cast<const inner_alias_message&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL inner_alias_message::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const inner_alias_message& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:inner_alias_message)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 iType = 1 [(.org.xresloader.field_alias) = "Type"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_itype() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<1>(
              stream, this_._internal_itype(), target);
    }
  }

  // repeated int64 paramList = 2 [(.org.xresloader.field_alias) = "Param", (.org.xresloader.field_list_min_size) = "2"];
  {
    int byte_size = this_._impl_._paramlist_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt64Packed(
          2, this_._internal_paramlist(), byte_size, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inner_alias_message)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t inner_alias_message::ByteSizeLong(const MessageLite& base) {
  const inner_alias_message& this_ = static_cast<const inner_alias_message&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t inner_alias_message::ByteSizeLong() const {
  const inner_alias_message& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:inner_alias_message)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated int64 paramList = 2 [(.org.xresloader.field_alias) = "Param", (.org.xresloader.field_list_min_size) = "2"];
    {
      total_size +=
          ::_pbi::WireFormatLite::Int64SizeWithPackedTagSize(
              this_._internal_paramlist(), 1,
              this_._impl_._paramlist_cached_byte_size_);
    }
  }
   {
    // int32 iType = 1 [(.org.xresloader.field_alias) = "Type"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_itype() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_itype());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void inner_alias_message::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<inner_alias_message*>(&to_msg);
  auto& from = static_cast<const inner_alias_message&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:inner_alias_message)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_paramlist()->MergeFrom(from._internal_paramlist());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    if (from._internal_itype() != 0) {
      _this->_impl_.itype_ = from._impl_.itype_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void inner_alias_message::CopyFrom(const inner_alias_message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inner_alias_message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void inner_alias_message::InternalSwap(inner_alias_message* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.paramlist_.InternalSwap(&other->_impl_.paramlist_);
  swap(_impl_.itype_, other->_impl_.itype_);
}

::google::protobuf::Metadata inner_alias_message::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class outer_alias_message::_Internal {
 public:
  using HasBits =
      decltype(std::declval<outer_alias_message>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(outer_alias_message, _impl_._has_bits_);
};

outer_alias_message::outer_alias_message(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, outer_alias_message_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:outer_alias_message)
}
PROTOBUF_NDEBUG_INLINE outer_alias_message::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::outer_alias_message& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        inners_{visibility, arena, from.inners_},
        nest_int_{visibility, arena, from.nest_int_},
        _nest_int_cached_byte_size_{0} {}

outer_alias_message::outer_alias_message(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const outer_alias_message& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, outer_alias_message_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  outer_alias_message* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.iid_ = from._impl_.iid_;

  // @@protoc_insertion_point(copy_constructor:outer_alias_message)
}
PROTOBUF_NDEBUG_INLINE outer_alias_message::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        inners_{visibility, arena},
        nest_int_{visibility, arena},
        _nest_int_cached_byte_size_{0} {}

inline void outer_alias_message::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.iid_ = {};
}
outer_alias_message::~outer_alias_message() {
  // @@protoc_insertion_point(destructor:outer_alias_message)
  SharedDtor(*this);
}
inline void outer_alias_message::SharedDtor(MessageLite& self) {
  outer_alias_message& this_ = static_cast<outer_alias_message&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL outer_alias_message::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) outer_alias_message(arena);
}
constexpr auto outer_alias_message::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(outer_alias_message, _impl_.inners_) +
          decltype(outer_alias_message::_impl_.inners_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(outer_alias_message, _impl_.nest_int_) +
          decltype(outer_alias_message::_impl_.nest_int_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(outer_alias_message), alignof(outer_alias_message), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&outer_alias_message::PlacementNew_,
                                 sizeof(outer_alias_message),
                                 alignof(outer_alias_message));
  }
}
constexpr auto outer_alias_message::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_outer_alias_message_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &outer_alias_message::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<outer_alias_message>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &outer_alias_message::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<outer_alias_message>(), &outer_alias_message::ByteSizeLong,
              &outer_alias_message::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(outer_alias_message, _impl_._cached_size_),
          false,
      },
      &outer_alias_message::kDescriptorMethods,
      &descriptor_table_kind_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull outer_alias_message_class_data_ =
        outer_alias_message::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL outer_alias_message::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&outer_alias_message_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(outer_alias_message_class_data_.tc_table);
  return outer_alias_message_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2>
outer_alias_message::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(outer_alias_message, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    outer_alias_message_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::outer_alias_message>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 iId = 1 [(.org.xresloader.field_alias) = "ID"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(outer_alias_message, _impl_.iid_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(outer_alias_message, _impl_.iid_)}},
    // repeated .inner_alias_message inners = 2 [(.org.xresloader.field_alias) = "Condition"];
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(outer_alias_message, _impl_.inners_)}},
    // repeated int32 nest_int = 3 [(.org.xresloader.field_alias) = "Nest", (.org.xresloader.field_list_min_size) = "2"];
    {::_pbi::TcParser::FastV32P1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(outer_alias_message, _impl_.nest_int_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 iId = 1 [(.org.xresloader.field_alias) = "ID"];
    {PROTOBUF_FIELD_OFFSET(outer_alias_message, _impl_.iid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // repeated .inner_alias_message inners = 2 [(.org.xresloader.field_alias) = "Condition"];
    {PROTOBUF_FIELD_OFFSET(outer_alias_message, _impl_.inners_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated int32 nest_int = 3 [(.org.xresloader.field_alias) = "Nest", (.org.xresloader.field_list_min_size) = "2"];
    {PROTOBUF_FIELD_OFFSET(outer_alias_message, _impl_.nest_int_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::inner_alias_message>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void outer_alias_message::Clear() {
// @@protoc_insertion_point(message_clear_start:outer_alias_message)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.inners_.Clear();
  _impl_.nest_int_.Clear();
  _impl_.iid_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL outer_alias_message::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const outer_alias_message& this_ = static_cast<const outer_alias_message&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL outer_alias_message::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const outer_alias_message& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:outer_alias_message)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 iId = 1 [(.org.xresloader.field_alias) = "ID"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_iid() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<1>(
              stream, this_._internal_iid(), target);
    }
  }

  // repeated .inner_alias_message inners = 2 [(.org.xresloader.field_alias) = "Condition"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_inners_size());
       i < n; i++) {
    const auto& repfield = this_._internal_inners().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated int32 nest_int = 3 [(.org.xresloader.field_alias) = "Nest", (.org.xresloader.field_list_min_size) = "2"];
  {
    int byte_size = this_._impl_._nest_int_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          3, this_._internal_nest_int(), byte_size, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:outer_alias_message)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t outer_alias_message::ByteSizeLong(const MessageLite& base) {
  const outer_alias_message& this_ = static_cast<const outer_alias_message&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t outer_alias_message::ByteSizeLong() const {
  const outer_alias_message& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:outer_alias_message)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .inner_alias_message inners = 2 [(.org.xresloader.field_alias) = "Condition"];
    {
      total_size += 1UL * this_._internal_inners_size();
      for (const auto& msg : this_._internal_inners()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated int32 nest_int = 3 [(.org.xresloader.field_alias) = "Nest", (.org.xresloader.field_list_min_size) = "2"];
    {
      total_size +=
          ::_pbi::WireFormatLite::Int32SizeWithPackedTagSize(
              this_._internal_nest_int(), 1,
              this_._impl_._nest_int_cached_byte_size_);
    }
  }
   {
    // int32 iId = 1 [(.org.xresloader.field_alias) = "ID"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_iid() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_iid());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void outer_alias_message::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<outer_alias_message*>(&to_msg);
  auto& from = static_cast<const outer_alias_message&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:outer_alias_message)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_inners()->MergeFrom(
      from._internal_inners());
  _this->_internal_mutable_nest_int()->MergeFrom(from._internal_nest_int());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    if (from._internal_iid() != 0) {
      _this->_impl_.iid_ = from._impl_.iid_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void outer_alias_message::CopyFrom(const outer_alias_message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:outer_alias_message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void outer_alias_message::InternalSwap(outer_alias_message* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.inners_.InternalSwap(&other->_impl_.inners_);
  _impl_.nest_int_.InternalSwap(&other->_impl_.nest_int_);
  swap(_impl_.iid_, other->_impl_.iid_);
}

::google::protobuf::Metadata outer_alias_message::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class field_alias_message::_Internal {
 public:
  using HasBits =
      decltype(std::declval<field_alias_message>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(field_alias_message, _impl_._has_bits_);
};

field_alias_message::field_alias_message(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, field_alias_message_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:field_alias_message)
}
field_alias_message::field_alias_message(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const field_alias_message& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, field_alias_message_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE field_alias_message::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void field_alias_message::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           0,
           offsetof(Impl_, value_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::value_));
}
field_alias_message::~field_alias_message() {
  // @@protoc_insertion_point(destructor:field_alias_message)
  SharedDtor(*this);
}
inline void field_alias_message::SharedDtor(MessageLite& self) {
  field_alias_message& this_ = static_cast<field_alias_message&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL field_alias_message::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) field_alias_message(arena);
}
constexpr auto field_alias_message::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(field_alias_message),
                                            alignof(field_alias_message));
}
constexpr auto field_alias_message::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_field_alias_message_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &field_alias_message::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<field_alias_message>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &field_alias_message::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<field_alias_message>(), &field_alias_message::ByteSizeLong,
              &field_alias_message::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(field_alias_message, _impl_._cached_size_),
          false,
      },
      &field_alias_message::kDescriptorMethods,
      &descriptor_table_kind_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull field_alias_message_class_data_ =
        field_alias_message::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL field_alias_message::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&field_alias_message_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(field_alias_message_class_data_.tc_table);
  return field_alias_message_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2>
field_alias_message::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(field_alias_message, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    field_alias_message_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::field_alias_message>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 value = 2 [(.org.xresloader.validator) = "custom_rule6"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(field_alias_message, _impl_.value_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(field_alias_message, _impl_.value_)}},
    // int32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(field_alias_message, _impl_.id_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(field_alias_message, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 id = 1;
    {PROTOBUF_FIELD_OFFSET(field_alias_message, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 value = 2 [(.org.xresloader.validator) = "custom_rule6"];
    {PROTOBUF_FIELD_OFFSET(field_alias_message, _impl_.value_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void field_alias_message::Clear() {
// @@protoc_insertion_point(message_clear_start:field_alias_message)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    ::memset(&_impl_.id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.value_) -
        reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.value_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL field_alias_message::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const field_alias_message& this_ = static_cast<const field_alias_message&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL field_alias_message::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const field_alias_message& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:field_alias_message)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 id = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_id() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<1>(
              stream, this_._internal_id(), target);
    }
  }

  // int32 value = 2 [(.org.xresloader.validator) = "custom_rule6"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_value() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_value(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:field_alias_message)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t field_alias_message::ByteSizeLong(const MessageLite& base) {
  const field_alias_message& this_ = static_cast<const field_alias_message&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t field_alias_message::ByteSizeLong() const {
  const field_alias_message& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:field_alias_message)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // int32 id = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_id() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_id());
      }
    }
    // int32 value = 2 [(.org.xresloader.validator) = "custom_rule6"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_value() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_value());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void field_alias_message::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<field_alias_message*>(&to_msg);
  auto& from = static_cast<const field_alias_message&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:field_alias_message)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (from._internal_id() != 0) {
        _this->_impl_.id_ = from._impl_.id_;
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_value() != 0) {
        _this->_impl_.value_ = from._impl_.value_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void field_alias_message::CopyFrom(const field_alias_message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:field_alias_message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void field_alias_message::InternalSwap(field_alias_message* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(field_alias_message, _impl_.value_)
      + sizeof(field_alias_message::_impl_.value_)
      - PROTOBUF_FIELD_OFFSET(field_alias_message, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::google::protobuf::Metadata field_alias_message::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_kind_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
