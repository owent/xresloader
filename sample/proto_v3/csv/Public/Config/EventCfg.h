/**
 * This file is generated by xresloader 2.11.0-rc3, please don't edit it.
 * You can find more information about this xresloader on https://xresloader.atframe.work/ .
 * If there is any problem, please find or report issues on https://github.com/xresloader/xresloader/issues .
 */
#pragma once
// Test event_cfg with oneof fields

#include "CoreMinimal.h"
#include "UObject/ConstructorHelpers.h"
#include "Engine/DataTable.h"
#include "EventCfg.generated.h"


USTRUCT(BlueprintType)
struct FEventCfg : public FTableRowBase
{
    GENERATED_USTRUCT_BODY()

    // Start of fields
    /** Field Type: STRING, Name: Name, Index: 0. This field is generated for UE Editor compatible. **/
    UPROPERTY(EditAnywhere, BlueprintReadOnly, Category = "XResConfig")
    FName Name;

    /** Field Type: INT, Name: Id, Index: 1 **/
    UPROPERTY(EditAnywhere, BlueprintReadOnly, Category = "XResConfig")
    int32 Id;

    /** Field Type: INT, Name: Process, Index: 2 **/
    UPROPERTY(EditAnywhere, BlueprintReadOnly, Category = "XResConfig")
    int32 Process;

    /** Field Type: INT, Name: Rule_RuleId, Index: 1 **/
    UPROPERTY(EditAnywhere, BlueprintReadOnly, Category = "XResConfig")
    int32 Rule_RuleId;

    /** Field Type: INT, Name: Rule_RuleParam, Index: 2 **/
    UPROPERTY(EditAnywhere, BlueprintReadOnly, Category = "XResConfig")
    int32 Rule_RuleParam;

    /** Field Type: INT, Name: SpecifyField_NestedEnumType, Index: 12 **/
    UPROPERTY(EditAnywhere, BlueprintReadOnly, Category = "XResConfig")
    int32 SpecifyField_NestedEnumType;

};


UCLASS(Blueprintable, BlueprintType)
class UEventCfgHelper : public UObject
{
    GENERATED_BODY()

public:
    UEventCfgHelper();

    void OnReload();

    void SetLoader(TSharedPtr<ConstructorHelpers::FObjectFinder<UDataTable> > NewLoader);

    void InitializeDefaultLoader() const;

    void DisableDefaultLoader();

    static FName GetRowName(int32 Id, int32 Process);

    UFUNCTION(BlueprintCallable, Category = "XResConfig")
    FName GetDataRowName(int32 Id, int32 Process) const;

    UFUNCTION(BlueprintCallable, Category = "XResConfig")
    FName GetTableRowName(const FEventCfg& TableRow) const;

    UFUNCTION(BlueprintCallable, Category = "XResConfig")
    const FEventCfg& GetDataRowByName(const FName& Name, bool& IsValid) const;

    UFUNCTION(BlueprintCallable, Category = "XResConfig")
    const FEventCfg& GetDataRowByKey(int32 Id, int32 Process, bool& IsValid) const;

    bool ForeachRow(TFunctionRef<void (const FName& Key, const FEventCfg& Value)> Predicate) const;

    UFUNCTION(BlueprintCallable, Category = "XResConfig")
    UDataTable* GetRawDataTable(bool& IsValid) const;

    static void ClearRow(FEventCfg& TableRow);

    UFUNCTION(BlueprintCallable, Category = "XResConfig")
    void ClearDataRow(FEventCfg& TableRow) const;

private:
    TSharedPtr<ConstructorHelpers::FObjectFinder<UDataTable> > Loader;
    UDataTable* DataTable;
    bool EnableDefaultLoader;
    FEventCfg Empty;
};

